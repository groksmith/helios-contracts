{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidityAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_llFactory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_lockupPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_apy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minInvestmentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawThreshold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawPeriod",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidityProvider",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "BalanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PendingReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PendingRewardConcluded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PendingWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PendingWithdrawalConcluded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "regPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RegPoolDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Reinvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalOverThreshold",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SYMBOL",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "addPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_pools",
          "type": "address[]"
        }
      ],
      "name": "addPools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "adminDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "availableToWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrower",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimReward",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "concludePendingReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "concludePendingWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidityAsset",
          "type": "address"
        }
      ],
      "name": "deleteSecondaryLiquidityAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "depositDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_assetAddr",
          "type": "address"
        }
      ],
      "name": "depositSecondaryAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_holders",
          "type": "address[]"
        }
      ],
      "name": "distributeRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "drawdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLL",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityAsset",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityLocker",
      "outputs": [
        {
          "internalType": "contract ILiquidityLocker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingWithdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lockupPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "apy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "investmentPoolSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minInvestmentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawThreshold",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pools",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "principalOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "reinvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "removePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountMissing",
          "type": "uint256"
        }
      ],
      "name": "requestLiquidityAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidityAsset",
          "type": "address"
        }
      ],
      "name": "setSecondaryLiquidityAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_liquidityAssets",
          "type": "address[]"
        }
      ],
      "name": "setSecondaryLiquidityAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "superFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDeposited",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupplyLA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userDeposits",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint16[]",
          "name": "_indices",
          "type": "uint16[]"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_holder",
          "type": "address"
        }
      ],
      "name": "withdrawableOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101006040523480156200001257600080fd5b5060405162003bab38038062003bab8339810160408190526200003591620004d2565b87876040518060400160405280600f81526020016e12195b1a5bdcc81512d388141bdbdb608a1b815250604051806040016040528060058152602001640484c532d560dc1b815250858583838160039081620000929190620005ed565b506004620000a18282620005ed565b50506001600555506006805460ff191690556001600160a01b03861660a08190526040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015620000fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001249190620006b9565b60ff1660c052604051630cf5bc1d60e11b81526001600160a01b0387811660048301528616906319eb783a906024016020604051808303816000875af115801562000173573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001999190620006e5565b6001600160a01b03908116608052600e92909255600f553360e0528c16935062000202925050505760405162461bcd60e51b815260206004820152601160248201527010940e96915493d7d3125457d054d4d155607a1b60448201526064015b60405180910390fd5b6001600160a01b0387166200025a5760405162461bcd60e51b815260206004820152601a60248201527f42503a5a45524f5f4c49515f4c4f434b45525f464143544f52590000000000006044820152606401620001f9565b60e05162000268906200044c565b60405163434a88c560e11b81526001600160a01b038a811660048301529190911690638695118a90602401602060405180830381865afa158015620002b1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620002d7919062000705565b620003255760405162461bcd60e51b815260206004820152601460248201527f42503a494e56414c49445f4c49515f41535345540000000000000000000000006044820152606401620001f9565b60e05162000333906200044c565b60405162041a9d60e51b81526001600160a01b0389811660048301529190911690628353a090602401602060405180830381865afa1580156200037a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003a0919062000705565b620003ee5760405162461bcd60e51b815260206004820152601560248201527f42503a494e56414c49445f4c4c5f464143544f525900000000000000000000006044820152606401620001f9565b506040805160c08101825286815260208101869052908101849052600019606082018190526080820184905260a090910182905260109590955560119390935560129190915560139290925560149190915560155550620007299050565b6000816001600160a01b031663c31245256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156200048d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004b39190620006e5565b92915050565b6001600160a01b0381168114620004cf57600080fd5b50565b600080600080600080600080610100898b031215620004f057600080fd5b8851620004fd81620004b9565b60208a01519098506200051081620004b9565b60408a015160608b015160808c015160a08d015160c08e015160e0909e01519c9f949e50929c919b909a509198509650945092505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200057357607f821691505b6020821081036200059457634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620005e857600081815260208120601f850160051c81016020861015620005c35750805b601f850160051c820191505b81811015620005e457828155600101620005cf565b5050505b505050565b81516001600160401b0381111562000609576200060962000548565b62000621816200061a84546200055e565b846200059a565b602080601f831160018114620006595760008415620006405750858301515b600019600386901b1c1916600185901b178555620005e4565b600085815260208120601f198616915b828110156200068a5788860151825594840194600190910190840162000669565b5085821015620006a95787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620006cc57600080fd5b815160ff81168114620006de57600080fd5b9392505050565b600060208284031215620006f857600080fd5b8151620006de81620004b9565b6000602082840312156200071857600080fd5b81518015158114620006de57600080fd5b60805160a05160c05160e05161337662000835600039600081816103810152818161084301528181610ab301528181610cc60152818161125601528181611509015281816115ec0152818161188d01528181611a9a0152611fe2015260006104660152600081816103f70152818161090d015281816109fd0152818161232e01526127b60152600081816105360152818161061501528181610a2001528181610daa015281816110ea01528181611325015281816113c9015281816116b5015281816116fb0152818161197101528181611c0d01528181611ccb01528181611f1c0152818161230201528181612745015281816127e00152818161282b01526129a301526133766000f3fe608060405234801561001057600080fd5b50600436106102bb5760003560e01c80637050886b11610182578063ac641655116100e9578063dd62ed3e116100a2578063f76f8d781161007c578063f76f8d7814610764578063f848d54114610788578063fa8c00d414610791578063ff50abdc146107a457600080fd5b8063dd62ed3e146106f8578063f3f4370314610731578063f48ccb041461075157600080fd5b8063ac6416551461069b578063b36a4ab1146106a4578063b6b55f25146106b7578063b88a802f146106ca578063c8954760146106d2578063d914cd4b146106e557600080fd5b80639264fd531161013b5780639264fd53146105f557806395d89b41146106085780639759164a14610610578063a3f4df7e14610637578063a4063dbc14610665578063a9059cbb1461068857600080fd5b80637050886b1461058057806370a082311461059357806374ee1ac4146105bc5780637df1f1b9146105cf5780637dfabf49146104c357806383b4918b146105e257600080fd5b806324b92e8e11610226578063486b3ed3116101df578063486b3ed3146104cb5780635a2f3d09146104de5780635c975abb14610529578063667316391461053457806366f294cf1461055a5780636acab9da1461056d57600080fd5b806324b92e8e1461042c578063289154831461044c578063313ce5671461045f57806331d7a262146104905780633b7d0946146104b057806342103e8e146104c357600080fd5b806312eb4f9a1161027857806312eb4f9a146103bb57806318160ddd146103c45780631aa59542146103cc5780631e0a5967146103df578063209b2bca146103f257806323b872dd1461041957600080fd5b806306fdde03146102c05780630700037d146102de578063086877941461030c57806308f4333314610321578063095ea7b3146103595780630d49b38c1461037c575b600080fd5b6102c86107ac565b6040516102d59190612dc6565b60405180910390f35b6102fe6102ec366004612e1e565b60096020526000908152604090205481565b6040519081526020016102d5565b61031f61031a366004612e3b565b61083e565b005b61033461032f366004612e54565b610a48565b604080516001600160a01b0390941684526020840192909252908201526060016102d5565b61036c610367366004612e54565b610a94565b60405190151581526020016102d5565b6103a37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102d5565b6102fe600f5481565b6002546102fe565b61031f6103da366004612ecc565b610aae565b61031f6103ed366004612e1e565b610cb9565b6103a37f000000000000000000000000000000000000000000000000000000000000000081565b61036c610427366004612f18565b610eb1565b6102fe61043a366004612e1e565b600c6020526000908152604090205481565b61031f61045a366004612f59565b610ed7565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016102d5565b6102fe61049e366004612e1e565b600b6020526000908152604090205481565b61031f6104be366004612e1e565b611251565b6102fe611321565b61031f6104d9366004612e1e565b6113aa565b6010546011546012546013546014546015546104fc95949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016102d5565b60065460ff1661036c565b7f00000000000000000000000000000000000000000000000000000000000000006103a3565b6102fe610568366004612e54565b611422565b61031f61057b366004612e54565b611504565b61031f61058e366004612e1e565b6115e7565b6102fe6105a1366004612e1e565b6001600160a01b031660009081526020819052604090205490565b61031f6105ca366004612fc5565b6116e4565b6016546103a3906001600160a01b031681565b61031f6105f0366004612e3b565b611768565b61031f610603366004612e1e565b611880565b6102c8611a78565b6103a37f000000000000000000000000000000000000000000000000000000000000000081565b6102c86040518060400160405280600f81526020016e12195b1a5bdcc81512d388141bdbdb608a1b81525081565b61036c610673366004612e1e565b60176020526000908152604090205460ff1681565b61036c610696366004612e54565b611a87565b6102fe60085481565b61031f6106b236600461301d565b611a95565b61031f6106c5366004612e3b565b611bb0565b61036c611ca4565b61031f6106e03660046130e2565b611e40565b61031f6106f3366004612e1e565b611fdd565b6102fe610706366004613112565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102fe61073f366004612e1e565b600a6020526000908152604090205481565b61031f61075f366004612e3b565b6120b0565b6102c8604051806040016040528060058152602001640484c532d560dc1b81525081565b6102fe600e5481565b6102fe61079f366004612e1e565b612281565b6007546102fe565b6060600380546107bb90613140565b80601f01602080910402602001604051908101604052809291908181526020018280546107e790613140565b80156108345780601f1061080957610100808354040283529160200191610834565b820191906000526020600020905b81548152906001019060200180831161081757829003601f168201915b5050505050905090565b6108677f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa1580156108ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d1919061317a565b6108f65760405162461bcd60e51b81526004016108ed9061319c565b60405180910390fd5b6040516370a0823160e01b815233600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561095c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098091906131c2565b10156109c55760405162461bcd60e51b8152602060048201526014602482015273503a4e4f545f454e4f5547485f42414c414e434560601b60448201526064016108ed565b60085481106109d85760006008556109f0565b80600860008282546109ea91906131f1565b90915550505b610a456001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016337f00000000000000000000000000000000000000000000000000000000000000008461241d565b50565b600d6020528160005260406000208181548110610a6457600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116935090915083565b600033610aa2818585612477565b60019150505b92915050565b610ad77f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015610b1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b41919061317a565b610b5d5760405162461bcd60e51b81526004016108ed9061319c565b610b65612484565b60008311610ba85760405162461bcd60e51b815260206004820152601060248201526f42503a494e56414c49445f56414c554560801b60448201526064016108ed565b80610be75760405162461bcd60e51b815260206004820152600f60248201526e42503a5a45524f5f484f4c4445525360881b60448201526064016108ed565b60005b81811015610ca9576000838383818110610c0657610c06613204565b9050602002016020810190610c1b9190612e1e565b90506000610c3e826001600160a01b031660009081526020819052604090205490565b90506000610c4b60025490565b610c55838961321a565b610c5f9190613231565b6001600160a01b038416600090815260096020526040812080549293508392909190610c8c908490613253565b925050819055505050508080610ca190613266565b915050610bea565b50610cb46001600555565b505050565b610cc1612484565b610cea7f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015610d30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d54919061317a565b610d705760405162461bcd60e51b81526004016108ed9061319c565b6001600160a01b038181166000818152600a60205260409081902054905163a9059cbb60e01b8152600481019290925260248201819052917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e17919061317a565b610e635760405162461bcd60e51b815260206004820152601c60248201527f503a434f4e434c5544455f5749544844524157414c5f4641494c45440000000060448201526064016108ed565b6001600160a01b0382166000818152600a6020526040808220829055518392917f2687ab3014fc32ee1bbb5acb4d4879d56644ad540a426c06d7deaa8f127b232391a350610a456001600555565b600033610ebf8582856124ae565b610eca858585612526565b60019150505b9392505050565b610edf612585565b828114610f265760405162461bcd60e51b8152602060048201526015602482015274140e905494905654d7d25390d3d394d254d5115395605a1b60448201526064016108ed565b60005b8181101561124a576000838383818110610f4557610f45613204565b9050602002016020810190610f5a919061327f565b61ffff1690506000868684818110610f7457610f74613204565b336000908152600d6020908152604090912054910292909201359250508210610fd15760405162461bcd60e51b815260206004820152600f60248201526e0a074929cac82989288be929c888ab608b1b60448201526064016108ed565b336000908152600d60205260408120805484908110610ff257610ff2613204565b600091825260209182902060408051606081018252600390930290910180546001600160a01b0316835260018101549383019390935260029092015491810182905291504210156110775760405162461bcd60e51b815260206004820152600f60248201526e140e9513d2d15394d7d313d0d2d151608a1b60448201526064016108ed565b8181602001511015801561109a5750336000908152602081905260409020548211155b6110dd5760405162461bcd60e51b8152602060048201526014602482015273503a494e53554646494349454e545f46554e445360601b60448201526064016108ed565b6110e733836125ab565b817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611146573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116a91906131c2565b10156111c957336000908152600a60205260408120805484929061118f908490613253565b9091555050604051829033907f39d9cf4ffb93650d8ce789639cb8cf3c8d7b039e1f9795c038af55b4ae643fca90600090a3505050611238565b81816020018181516111db91906131f1565b90525060208101516000036111f4576111f433846125e1565b6111fe338361271c565b506112076127b4565b604051829033907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6590600090a35050505b8061124281613266565b915050610f29565b5050505050565b61127a7f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa1580156112c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e4919061317a565b6113005760405162461bcd60e51b81526004016108ed9061319c565b6001600160a01b03166000908152601760205260409020805460ff19169055565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a591906131c2565b905090565b60405163486b3ed360e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063486b3ed3906024015b600060405180830381600087803b15801561140e57600080fd5b505af115801561124a573d6000803e3d6000fd5b6001600160a01b0382166000908152600d6020526040812054821061147b5760405162461bcd60e51b815260206004820152600f60248201526e0a074929cac82989288be929c888ab608b1b60448201526064016108ed565b6001600160a01b0383166000908152600d602052604081208054849081106114a5576114a5613204565b600091825260209182902060408051606081018252600390930290910180546001600160a01b03168352600181015493830193909352600290920154918101829052915042106114fa57602001519050610aa8565b6000915050610aa8565b61152d7f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015611573573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611597919061317a565b6115b35760405162461bcd60e51b81526004016108ed9061319c565b80600860008282546115c59190613253565b90915550600090506115d56128be565b90506115e1838261271c565b50505050565b6116107f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015611656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167a919061317a565b6116965760405162461bcd60e51b81526004016108ed9061319c565b604051637050886b60e01b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690637050886b906024016113f4565b604051631d3b86b160e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906374ee1ac49061173290859085906004016132a3565b600060405180830381600087803b15801561174c57600080fd5b505af1158015611760573d6000803e3d6000fd5b505050505050565b600081116117aa5760405162461bcd60e51b815260206004820152600f60248201526e503a494e56414c49445f56414c554560881b60448201526064016108ed565b336000908152600960205260409020548111156118025760405162461bcd60e51b8152602060048201526016602482015275503a494e53554646494349454e545f42414c414e434560501b60448201526064016108ed565b61180c33826128d6565b806007600082825461181e9190613253565b909155505033600090815260096020526040812080548392906118429084906131f1565b9091555061185090506127b4565b604051819033907fbd654390d0d973e8c8376ed6053be8658870df892687852cc5c914d700291b8790600090a350565b611888612484565b6118b17f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa1580156118f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191b919061317a565b6119375760405162461bcd60e51b81526004016108ed9061319c565b6001600160a01b038181166000818152600b60205260409081902054905163a9059cbb60e01b8152600481019290925260248201819052917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156119ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119de919061317a565b611a2a5760405162461bcd60e51b815260206004820152601860248201527f503a434f4e434c5544455f5245574152445f4641494c4544000000000000000060448201526064016108ed565b6001600160a01b0382166000818152600b6020526040808220829055518392917f3c7e767b6741d1e3a8f90a3c95937bb07453eaf2dfee591a5a308f04f498e8b891a350610a456001600555565b6060600480546107bb90613140565b600033610aa2818585612526565b611abe7f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015611b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b28919061317a565b611b445760405162461bcd60e51b81526004016108ed9061319c565b60005b8151811015611bac57600160176000848481518110611b6857611b68613204565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580611ba481613266565b915050611b47565b5050565b611bb8612585565b611bc0612484565b601454811015611c095760405162461bcd60e51b815260206004820152601460248201527321281d2222a82fa0a6aa2fa122a627abafa6a4a760611b60448201526064016108ed565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663209b2bca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c8d91906132f1565b9050611c99828261290c565b50610a456001600555565b33600090815260096020908152604080832054815163ad7a672f60e01b81529151909284927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169263ad7a672f926004808401939192918290030181865afa158015611d1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4091906131c2565b33600090815260096020526040812055905081811015611db457336000908152600b602052604081208054849290611d79908490613253565b9091555050604051829033907f19adda954c72f22df5078ae925d620d455e095989b72be2f895e10473b53797790600090a360009250505090565b611dbe338361271c565b611e0a5760405162461bcd60e51b815260206004820152601c60248201527f42503a4552524f525f5452414e5346455252494e475f5245574152440000000060448201526064016108ed565b604051829033907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724190600090a360019250505090565b611e48612585565b611e50612484565b601454821015611e985760405162461bcd60e51b8152602060048201526013602482015272281d2222a82fa0a6aa2fa122a627abafa6a4a760691b60448201526064016108ed565b60135482611ea560025490565b611eaf9190613253565b1115611efd5760405162461bcd60e51b815260206004820152601760248201527f503a4d41585f504f4f4c5f53495a455f5245414348454400000000000000000060448201526064016108ed565b60405163029333f560e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063029333f5906024016020604051808303816000875af1158015611f65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f89919061317a565b611fc75760405162461bcd60e51b815260206004820152600f60248201526e140e955392d393d5d397d054d4d155608a1b60448201526064016108ed565b80611fd2838261290c565b50611bac6001600555565b6120067f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa15801561204c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612070919061317a565b61208c5760405162461bcd60e51b81526004016108ed9061319c565b6001600160a01b03166000908152601760205260409020805460ff19166001179055565b3360009081526017602052604090205460ff166120fc5760405162461bcd60e51b815260206004820152600a602482015269140e9393d517d413d3d360b21b60448201526064016108ed565b6000811161213f5760405162461bcd60e51b815260206004820152601060248201526f10940e9253959053125117d25394155560821b60448201526064016108ed565b80612148611321565b101561218c5760405162461bcd60e51b8152602060048201526013602482015272042503a4e4f545f454e4f5547485f4c415f425606c1b60448201526064016108ed565b6000336001600160a01b031663667316396040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121f091906132f1565b90506121fc818361271c565b6122485760405162461bcd60e51b815260206004820152601760248201527f42503a524551554553545f46524f4d5f42505f4641494c00000000000000000060448201526064016108ed565b60405182815233907fbabc2955520063ac5330d7fe65a85c54fce0d2c473be76d99e29fb7146ac96a09060200160405180910390a25050565b6010546001600160a01b0382166000908152600c6020526040812054909142916122ab9190613253565b11156122eb5760405162461bcd60e51b815260206004820152600f60248201526e10940e9195539114d7d313d0d2d151608a1b60448201526064016108ed565b6040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152610aa8917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa158015612377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061239b91906131c2565b6001600160a01b038416600090815260208190526040902054612a23565b6000816001600160a01b031663c31245256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156123f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa891906132f1565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526115e1908590612a39565b610cb48383836001612a9c565b6002600554036124a757604051633ee5aeb560e01b815260040160405180910390fd5b6002600555565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146115e1578181101561251757604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016108ed565b6115e184848484036000612a9c565b6001600160a01b03831661255057604051634b637e8f60e11b8152600060048201526024016108ed565b6001600160a01b03821661257a5760405163ec442f0560e01b8152600060048201526024016108ed565b610cb4838383612b71565b60065460ff16156125a95760405163d93c066560e01b815260040160405180910390fd5b565b6001600160a01b0382166125d557604051634b637e8f60e11b8152600060048201526024016108ed565b611bac82600083612b71565b6001600160a01b0382166000908152600d6020526040812054612606906001906131f1565b90508082146126c0576001600160a01b0383166000908152600d6020526040902080548290811061263957612639613204565b9060005260206000209060030201600d6000856001600160a01b03166001600160a01b03168152602001908152602001600020838154811061267d5761267d613204565b60009182526020909120825460039092020180546001600160a01b0319166001600160a01b03909216919091178155600180830154908201556002918201549101555b6001600160a01b0383166000908152600d602052604090208054806126e7576126e761330e565b60008281526020812060036000199093019283020180546001600160a01b031916815560018101829055600201559055505050565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015612790573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed0919061317a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f2047d1633ff7768462ae07d28cb16e484203bfd6d85ce832494270ebcd9081a27f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612887573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128ab91906131c2565b60405190815260200160405180910390a3565b60006008546128cc60025490565b6113a591906131f1565b6001600160a01b0382166129005760405163ec442f0560e01b8152600060048201526024016108ed565b611bac60008383612b71565b336000908152600d602090815260409182902082516060810184526001600160a01b0385168152918201859052600f54909282019061294b9042613253565b90528154600180820184556000938452602093849020835160039093020180546001600160a01b0319166001600160a01b0393841617815593830151908401556040909101516002909201919091556129c8908216337f00000000000000000000000000000000000000000000000000000000000000008561241d565b6129d233836128d6565b81600760008282546129e49190613253565b909155506129f290506127b4565b604051829033907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c90600090a35050565b6000818310612a325781610ed0565b5090919050565b6000612a4e6001600160a01b03841683612c9b565b90508051600014158015612a73575080806020019051810190612a71919061317a565b155b15610cb457604051635274afe760e01b81526001600160a01b03841660048201526024016108ed565b6001600160a01b038416612ac65760405163e602df0560e01b8152600060048201526024016108ed565b6001600160a01b038316612af057604051634a1406b160e11b8152600060048201526024016108ed565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156115e157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051612b6391815260200190565b60405180910390a350505050565b6001600160a01b038316612b9c578060026000828254612b919190613253565b90915550612c0e9050565b6001600160a01b03831660009081526020819052604090205481811015612bef5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016108ed565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216612c2a57600280548290039055612c49565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612c8e91815260200190565b60405180910390a3505050565b6060610ed08383600084600080856001600160a01b03168486604051612cc19190613324565b60006040518083038185875af1925050503d8060008114612cfe576040519150601f19603f3d011682016040523d82523d6000602084013e612d03565b606091505b5091509150612d13868383612d1d565b9695505050505050565b606082612d3257612d2d82612d79565b610ed0565b8151158015612d4957506001600160a01b0384163b155b15612d7257604051639996b31560e01b81526001600160a01b03851660048201526024016108ed565b5080610ed0565b805115612d895780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60005b83811015612dbd578181015183820152602001612da5565b50506000910152565b6020815260008251806020840152612de5816040850160208701612da2565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610a4557600080fd5b8035612e1981612df9565b919050565b600060208284031215612e3057600080fd5b8135610ed081612df9565b600060208284031215612e4d57600080fd5b5035919050565b60008060408385031215612e6757600080fd5b8235612e7281612df9565b946020939093013593505050565b60008083601f840112612e9257600080fd5b50813567ffffffffffffffff811115612eaa57600080fd5b6020830191508360208260051b8501011115612ec557600080fd5b9250929050565b600080600060408486031215612ee157600080fd5b83359250602084013567ffffffffffffffff811115612eff57600080fd5b612f0b86828701612e80565b9497909650939450505050565b600080600060608486031215612f2d57600080fd5b8335612f3881612df9565b92506020840135612f4881612df9565b929592945050506040919091013590565b60008060008060408587031215612f6f57600080fd5b843567ffffffffffffffff80821115612f8757600080fd5b612f9388838901612e80565b90965094506020870135915080821115612fac57600080fd5b50612fb987828801612e80565b95989497509550505050565b60008060208385031215612fd857600080fd5b823567ffffffffffffffff811115612fef57600080fd5b612ffb85828601612e80565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561303057600080fd5b823567ffffffffffffffff8082111561304857600080fd5b818501915085601f83011261305c57600080fd5b81358181111561306e5761306e613007565b8060051b604051601f19603f8301168101818110858211171561309357613093613007565b6040529182528482019250838101850191888311156130b157600080fd5b938501935b828510156130d6576130c785612e0e565b845293850193928501926130b6565b98975050505050505050565b600080604083850312156130f557600080fd5b82359150602083013561310781612df9565b809150509250929050565b6000806040838503121561312557600080fd5b823561313081612df9565b9150602083013561310781612df9565b600181811c9082168061315457607f821691505b60208210810361317457634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561318c57600080fd5b81518015158114610ed057600080fd5b6020808252600c908201526b28231d2727aa2fa0a226a4a760a11b604082015260600190565b6000602082840312156131d457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610aa857610aa86131db565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610aa857610aa86131db565b60008261324e57634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610aa857610aa86131db565b600060018201613278576132786131db565b5060010190565b60006020828403121561329157600080fd5b813561ffff81168114610ed057600080fd5b60208082528181018390526000908460408401835b868110156132e65782356132cb81612df9565b6001600160a01b0316825291830191908301906001016132b8565b509695505050505050565b60006020828403121561330357600080fd5b8151610ed081612df9565b634e487b7160e01b600052603160045260246000fd5b60008251613336818460208701612da2565b919091019291505056fea2646970667358221220c78afd4713be3c88240b26ed79ec16bf3008dadaa9fb178a388b076772af520064736f6c63430008140033",
    "sourceMap": "704:5215:7:-:0;;;959:844;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1238:15;1255:10;1267:4;;;;;;;;;;;;;-1:-1:-1;;;1267:4:7;;;1273:6;;;;;;;;;;;;;-1:-1:-1;;;1273:6:7;;;1281:18;1301:15;3340:9:6;3351:11;1970:5:45;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:45;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;1713:1:53;1917:7;:21;-1:-1:-1;1231:7:52;:15;;-1:-1:-1;;1231:15:52;;;-1:-1:-1;;;;;3374:40:6;::::1;;::::0;;;3449:33:::1;::::0;;-1:-1:-1;;;3449:33:6;;;;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;3374:40;3449:33:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3424:58;;;::::0;3527:62:::1;::::0;-1:-1:-1;;;3527:62:6;;-1:-1:-1;;;;;4074:32:60;;;3527:62:6::1;::::0;::::1;4056:51:60::0;3527:45:6;::::1;::::0;::::1;::::0;4029:18:60;;3527:62:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3492:98:6;;::::1;;::::0;3600:13:::1;:30:::0;;;;3640:14:::1;:32:::0;3697:10:::1;3682:25;::::0;1336:29:7;::::1;::::0;-1:-1:-1;1328:59:7::1;::::0;-1:-1:-1;;;1328:59:7::1;;::::0;-1:-1:-1;;;1328:59:7;;4576:2:60;1328:59:7::1;::::0;::::1;4558:21:60::0;4615:2;4595:18;;;4588:30;-1:-1:-1;;;4634:18:60;;;4627:47;4691:18;;1328:59:7::1;;;;;;;;;-1:-1:-1::0;;;;;1405:24:7;::::1;1397:63;;;::::0;-1:-1:-1;;;1397:63:7;;4922:2:60;1397:63:7::1;::::0;::::1;4904:21:60::0;4961:2;4941:18;;;4934:30;5000:28;4980:18;;;4973:56;5046:18;;1397:63:7::1;4720:350:60::0;1397:63:7::1;1488:12;::::0;1479:22:::1;::::0;:8:::1;:22::i;:::-;:61;::::0;-1:-1:-1;;;1479:61:7;;-1:-1:-1;;;;;4074:32:60;;;1479:61:7::1;::::0;::::1;4056:51:60::0;1479:44:7;;;::::1;::::0;::::1;::::0;4029:18:60;;1479:61:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1471:94;;;::::0;-1:-1:-1;;;1471:94:7;;5559:2:60;1471:94:7::1;::::0;::::1;5541:21:60::0;5598:2;5578:18;;;5571:30;5637:22;5617:18;;;5610:50;5677:18;;1471:94:7::1;5357:344:60::0;1471:94:7::1;1592:12;::::0;1583:22:::1;::::0;:8:::1;:22::i;:::-;:64;::::0;-1:-1:-1;;;1583:64:7;;-1:-1:-1;;;;;4074:32:60;;;1583:64:7::1;::::0;::::1;4056:51:60::0;1583:52:7;;;::::1;::::0;::::1;::::0;4029:18:60;;1583:64:7::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1575:98;;;::::0;-1:-1:-1;;;1575:98:7;;5908:2:60;1575:98:7::1;::::0;::::1;5890:21:60::0;5947:2;5927:18;;;5920:30;5986:23;5966:18;;;5959:51;6027:18;;1575:98:7::1;5706:345:60::0;1575:98:7::1;-1:-1:-1::0;1695:101:7::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;;1695:101:7;;;;;;;;;;;;;;;;;;;1684:8:::1;:112:::0;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;704:5215:7;;-1:-1:-1;704:5215:7;5661:162;5732:14;5793:11;-1:-1:-1;;;;;5780:33:7;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5758:58;5661:162;-1:-1:-1;;5661:162:7:o;14:131:60:-;-1:-1:-1;;;;;89:31:60;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:756::-;283:6;291;299;307;315;323;331;339;392:3;380:9;371:7;367:23;363:33;360:53;;;409:1;406;399:12;360:53;441:9;435:16;460:31;485:5;460:31;:::i;:::-;560:2;545:18;;539:25;510:5;;-1:-1:-1;573:33:60;539:25;573:33;:::i;:::-;672:2;657:18;;651:25;716:2;701:18;;695:25;760:3;745:19;;739:26;805:3;790:19;;784:26;850:3;835:19;;829:26;895:3;880:19;;;874:26;150:756;;625:7;;-1:-1:-1;651:25:60;;695;;739:26;;-1:-1:-1;784:26:60;;-1:-1:-1;829:26:60;-1:-1:-1;874:26:60;-1:-1:-1;150:756:60;-1:-1:-1;;;150:756:60:o;911:127::-;972:10;967:3;963:20;960:1;953:31;1003:4;1000:1;993:15;1027:4;1024:1;1017:15;1043:380;1122:1;1118:12;;;;1165;;;1186:61;;1240:4;1232:6;1228:17;1218:27;;1186:61;1293:2;1285:6;1282:14;1262:18;1259:38;1256:161;;1339:10;1334:3;1330:20;1327:1;1320:31;1374:4;1371:1;1364:15;1402:4;1399:1;1392:15;1256:161;;1043:380;;;:::o;1554:545::-;1656:2;1651:3;1648:11;1645:448;;;1692:1;1717:5;1713:2;1706:17;1762:4;1758:2;1748:19;1832:2;1820:10;1816:19;1813:1;1809:27;1803:4;1799:38;1868:4;1856:10;1853:20;1850:47;;;-1:-1:-1;1891:4:60;1850:47;1946:2;1941:3;1937:12;1934:1;1930:20;1924:4;1920:31;1910:41;;2001:82;2019:2;2012:5;2009:13;2001:82;;;2064:17;;;2045:1;2034:13;2001:82;;;2005:3;;;1645:448;1554:545;;;:::o;2275:1352::-;2395:10;;-1:-1:-1;;;;;2417:30:60;;2414:56;;;2450:18;;:::i;:::-;2479:97;2569:6;2529:38;2561:4;2555:11;2529:38;:::i;:::-;2523:4;2479:97;:::i;:::-;2631:4;;2695:2;2684:14;;2712:1;2707:663;;;;3414:1;3431:6;3428:89;;;-1:-1:-1;3483:19:60;;;3477:26;3428:89;-1:-1:-1;;2232:1:60;2228:11;;;2224:24;2220:29;2210:40;2256:1;2252:11;;;2207:57;3530:81;;2677:944;;2707:663;1501:1;1494:14;;;1538:4;1525:18;;-1:-1:-1;;2743:20:60;;;2861:236;2875:7;2872:1;2869:14;2861:236;;;2964:19;;;2958:26;2943:42;;3056:27;;;;3024:1;3012:14;;;;2891:19;;2861:236;;;2865:3;3125:6;3116:7;3113:19;3110:201;;;3186:19;;;3180:26;-1:-1:-1;;3269:1:60;3265:14;;;3281:3;3261:24;3257:37;3253:42;3238:58;3223:74;;3110:201;-1:-1:-1;;;;;3357:1:60;3341:14;;;3337:22;3324:36;;-1:-1:-1;2275:1352:60:o;3632:273::-;3700:6;3753:2;3741:9;3732:7;3728:23;3724:32;3721:52;;;3769:1;3766;3759:12;3721:52;3801:9;3795:16;3851:4;3844:5;3840:16;3833:5;3830:27;3820:55;;3871:1;3868;3861:12;3820:55;3894:5;3632:273;-1:-1:-1;;;3632:273:60:o;4118:251::-;4188:6;4241:2;4229:9;4220:7;4216:23;4212:32;4209:52;;;4257:1;4254;4247:12;4209:52;4289:9;4283:16;4308:31;4333:5;4308:31;:::i;5075:277::-;5142:6;5195:2;5183:9;5174:7;5170:23;5166:32;5163:52;;;5211:1;5208;5201:12;5163:52;5243:9;5237:16;5296:5;5289:13;5282:21;5275:5;5272:32;5262:60;;5318:1;5315;5308:12;6056:273;704:5215:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102bb5760003560e01c80637050886b11610182578063ac641655116100e9578063dd62ed3e116100a2578063f76f8d781161007c578063f76f8d7814610764578063f848d54114610788578063fa8c00d414610791578063ff50abdc146107a457600080fd5b8063dd62ed3e146106f8578063f3f4370314610731578063f48ccb041461075157600080fd5b8063ac6416551461069b578063b36a4ab1146106a4578063b6b55f25146106b7578063b88a802f146106ca578063c8954760146106d2578063d914cd4b146106e557600080fd5b80639264fd531161013b5780639264fd53146105f557806395d89b41146106085780639759164a14610610578063a3f4df7e14610637578063a4063dbc14610665578063a9059cbb1461068857600080fd5b80637050886b1461058057806370a082311461059357806374ee1ac4146105bc5780637df1f1b9146105cf5780637dfabf49146104c357806383b4918b146105e257600080fd5b806324b92e8e11610226578063486b3ed3116101df578063486b3ed3146104cb5780635a2f3d09146104de5780635c975abb14610529578063667316391461053457806366f294cf1461055a5780636acab9da1461056d57600080fd5b806324b92e8e1461042c578063289154831461044c578063313ce5671461045f57806331d7a262146104905780633b7d0946146104b057806342103e8e146104c357600080fd5b806312eb4f9a1161027857806312eb4f9a146103bb57806318160ddd146103c45780631aa59542146103cc5780631e0a5967146103df578063209b2bca146103f257806323b872dd1461041957600080fd5b806306fdde03146102c05780630700037d146102de578063086877941461030c57806308f4333314610321578063095ea7b3146103595780630d49b38c1461037c575b600080fd5b6102c86107ac565b6040516102d59190612dc6565b60405180910390f35b6102fe6102ec366004612e1e565b60096020526000908152604090205481565b6040519081526020016102d5565b61031f61031a366004612e3b565b61083e565b005b61033461032f366004612e54565b610a48565b604080516001600160a01b0390941684526020840192909252908201526060016102d5565b61036c610367366004612e54565b610a94565b60405190151581526020016102d5565b6103a37f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102d5565b6102fe600f5481565b6002546102fe565b61031f6103da366004612ecc565b610aae565b61031f6103ed366004612e1e565b610cb9565b6103a37f000000000000000000000000000000000000000000000000000000000000000081565b61036c610427366004612f18565b610eb1565b6102fe61043a366004612e1e565b600c6020526000908152604090205481565b61031f61045a366004612f59565b610ed7565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016102d5565b6102fe61049e366004612e1e565b600b6020526000908152604090205481565b61031f6104be366004612e1e565b611251565b6102fe611321565b61031f6104d9366004612e1e565b6113aa565b6010546011546012546013546014546015546104fc95949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c0016102d5565b60065460ff1661036c565b7f00000000000000000000000000000000000000000000000000000000000000006103a3565b6102fe610568366004612e54565b611422565b61031f61057b366004612e54565b611504565b61031f61058e366004612e1e565b6115e7565b6102fe6105a1366004612e1e565b6001600160a01b031660009081526020819052604090205490565b61031f6105ca366004612fc5565b6116e4565b6016546103a3906001600160a01b031681565b61031f6105f0366004612e3b565b611768565b61031f610603366004612e1e565b611880565b6102c8611a78565b6103a37f000000000000000000000000000000000000000000000000000000000000000081565b6102c86040518060400160405280600f81526020016e12195b1a5bdcc81512d388141bdbdb608a1b81525081565b61036c610673366004612e1e565b60176020526000908152604090205460ff1681565b61036c610696366004612e54565b611a87565b6102fe60085481565b61031f6106b236600461301d565b611a95565b61031f6106c5366004612e3b565b611bb0565b61036c611ca4565b61031f6106e03660046130e2565b611e40565b61031f6106f3366004612e1e565b611fdd565b6102fe610706366004613112565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102fe61073f366004612e1e565b600a6020526000908152604090205481565b61031f61075f366004612e3b565b6120b0565b6102c8604051806040016040528060058152602001640484c532d560dc1b81525081565b6102fe600e5481565b6102fe61079f366004612e1e565b612281565b6007546102fe565b6060600380546107bb90613140565b80601f01602080910402602001604051908101604052809291908181526020018280546107e790613140565b80156108345780601f1061080957610100808354040283529160200191610834565b820191906000526020600020905b81548152906001019060200180831161081757829003601f168201915b5050505050905090565b6108677f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa1580156108ad573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108d1919061317a565b6108f65760405162461bcd60e51b81526004016108ed9061319c565b60405180910390fd5b6040516370a0823160e01b815233600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa15801561095c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098091906131c2565b10156109c55760405162461bcd60e51b8152602060048201526014602482015273503a4e4f545f454e4f5547485f42414c414e434560601b60448201526064016108ed565b60085481106109d85760006008556109f0565b80600860008282546109ea91906131f1565b90915550505b610a456001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016337f00000000000000000000000000000000000000000000000000000000000000008461241d565b50565b600d6020528160005260406000208181548110610a6457600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116935090915083565b600033610aa2818585612477565b60019150505b92915050565b610ad77f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015610b1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b41919061317a565b610b5d5760405162461bcd60e51b81526004016108ed9061319c565b610b65612484565b60008311610ba85760405162461bcd60e51b815260206004820152601060248201526f42503a494e56414c49445f56414c554560801b60448201526064016108ed565b80610be75760405162461bcd60e51b815260206004820152600f60248201526e42503a5a45524f5f484f4c4445525360881b60448201526064016108ed565b60005b81811015610ca9576000838383818110610c0657610c06613204565b9050602002016020810190610c1b9190612e1e565b90506000610c3e826001600160a01b031660009081526020819052604090205490565b90506000610c4b60025490565b610c55838961321a565b610c5f9190613231565b6001600160a01b038416600090815260096020526040812080549293508392909190610c8c908490613253565b925050819055505050508080610ca190613266565b915050610bea565b50610cb46001600555565b505050565b610cc1612484565b610cea7f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015610d30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d54919061317a565b610d705760405162461bcd60e51b81526004016108ed9061319c565b6001600160a01b038181166000818152600a60205260409081902054905163a9059cbb60e01b8152600481019290925260248201819052917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610df3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e17919061317a565b610e635760405162461bcd60e51b815260206004820152601c60248201527f503a434f4e434c5544455f5749544844524157414c5f4641494c45440000000060448201526064016108ed565b6001600160a01b0382166000818152600a6020526040808220829055518392917f2687ab3014fc32ee1bbb5acb4d4879d56644ad540a426c06d7deaa8f127b232391a350610a456001600555565b600033610ebf8582856124ae565b610eca858585612526565b60019150505b9392505050565b610edf612585565b828114610f265760405162461bcd60e51b8152602060048201526015602482015274140e905494905654d7d25390d3d394d254d5115395605a1b60448201526064016108ed565b60005b8181101561124a576000838383818110610f4557610f45613204565b9050602002016020810190610f5a919061327f565b61ffff1690506000868684818110610f7457610f74613204565b336000908152600d6020908152604090912054910292909201359250508210610fd15760405162461bcd60e51b815260206004820152600f60248201526e0a074929cac82989288be929c888ab608b1b60448201526064016108ed565b336000908152600d60205260408120805484908110610ff257610ff2613204565b600091825260209182902060408051606081018252600390930290910180546001600160a01b0316835260018101549383019390935260029092015491810182905291504210156110775760405162461bcd60e51b815260206004820152600f60248201526e140e9513d2d15394d7d313d0d2d151608a1b60448201526064016108ed565b8181602001511015801561109a5750336000908152602081905260409020548211155b6110dd5760405162461bcd60e51b8152602060048201526014602482015273503a494e53554646494349454e545f46554e445360601b60448201526064016108ed565b6110e733836125ab565b817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611146573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116a91906131c2565b10156111c957336000908152600a60205260408120805484929061118f908490613253565b9091555050604051829033907f39d9cf4ffb93650d8ce789639cb8cf3c8d7b039e1f9795c038af55b4ae643fca90600090a3505050611238565b81816020018181516111db91906131f1565b90525060208101516000036111f4576111f433846125e1565b6111fe338361271c565b506112076127b4565b604051829033907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6590600090a35050505b8061124281613266565b915050610f29565b5050505050565b61127a7f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa1580156112c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112e4919061317a565b6113005760405162461bcd60e51b81526004016108ed9061319c565b6001600160a01b03166000908152601760205260409020805460ff19169055565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611381573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113a591906131c2565b905090565b60405163486b3ed360e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063486b3ed3906024015b600060405180830381600087803b15801561140e57600080fd5b505af115801561124a573d6000803e3d6000fd5b6001600160a01b0382166000908152600d6020526040812054821061147b5760405162461bcd60e51b815260206004820152600f60248201526e0a074929cac82989288be929c888ab608b1b60448201526064016108ed565b6001600160a01b0383166000908152600d602052604081208054849081106114a5576114a5613204565b600091825260209182902060408051606081018252600390930290910180546001600160a01b03168352600181015493830193909352600290920154918101829052915042106114fa57602001519050610aa8565b6000915050610aa8565b61152d7f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015611573573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611597919061317a565b6115b35760405162461bcd60e51b81526004016108ed9061319c565b80600860008282546115c59190613253565b90915550600090506115d56128be565b90506115e1838261271c565b50505050565b6116107f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015611656573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167a919061317a565b6116965760405162461bcd60e51b81526004016108ed9061319c565b604051637050886b60e01b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690637050886b906024016113f4565b604051631d3b86b160e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906374ee1ac49061173290859085906004016132a3565b600060405180830381600087803b15801561174c57600080fd5b505af1158015611760573d6000803e3d6000fd5b505050505050565b600081116117aa5760405162461bcd60e51b815260206004820152600f60248201526e503a494e56414c49445f56414c554560881b60448201526064016108ed565b336000908152600960205260409020548111156118025760405162461bcd60e51b8152602060048201526016602482015275503a494e53554646494349454e545f42414c414e434560501b60448201526064016108ed565b61180c33826128d6565b806007600082825461181e9190613253565b909155505033600090815260096020526040812080548392906118429084906131f1565b9091555061185090506127b4565b604051819033907fbd654390d0d973e8c8376ed6053be8658870df892687852cc5c914d700291b8790600090a350565b611888612484565b6118b17f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa1580156118f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061191b919061317a565b6119375760405162461bcd60e51b81526004016108ed9061319c565b6001600160a01b038181166000818152600b60205260409081902054905163a9059cbb60e01b8152600481019290925260248201819052917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156119ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119de919061317a565b611a2a5760405162461bcd60e51b815260206004820152601860248201527f503a434f4e434c5544455f5245574152445f4641494c4544000000000000000060448201526064016108ed565b6001600160a01b0382166000818152600b6020526040808220829055518392917f3c7e767b6741d1e3a8f90a3c95937bb07453eaf2dfee591a5a308f04f498e8b891a350610a456001600555565b6060600480546107bb90613140565b600033610aa2818585612526565b611abe7f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015611b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b28919061317a565b611b445760405162461bcd60e51b81526004016108ed9061319c565b60005b8151811015611bac57600160176000848481518110611b6857611b68613204565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff191691151591909117905580611ba481613266565b915050611b47565b5050565b611bb8612585565b611bc0612484565b601454811015611c095760405162461bcd60e51b815260206004820152601460248201527321281d2222a82fa0a6aa2fa122a627abafa6a4a760611b60448201526064016108ed565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663209b2bca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c69573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c8d91906132f1565b9050611c99828261290c565b50610a456001600555565b33600090815260096020908152604080832054815163ad7a672f60e01b81529151909284927f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169263ad7a672f926004808401939192918290030181865afa158015611d1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4091906131c2565b33600090815260096020526040812055905081811015611db457336000908152600b602052604081208054849290611d79908490613253565b9091555050604051829033907f19adda954c72f22df5078ae925d620d455e095989b72be2f895e10473b53797790600090a360009250505090565b611dbe338361271c565b611e0a5760405162461bcd60e51b815260206004820152601c60248201527f42503a4552524f525f5452414e5346455252494e475f5245574152440000000060448201526064016108ed565b604051829033907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724190600090a360019250505090565b611e48612585565b611e50612484565b601454821015611e985760405162461bcd60e51b8152602060048201526013602482015272281d2222a82fa0a6aa2fa122a627abafa6a4a760691b60448201526064016108ed565b60135482611ea560025490565b611eaf9190613253565b1115611efd5760405162461bcd60e51b815260206004820152601760248201527f503a4d41585f504f4f4c5f53495a455f5245414348454400000000000000000060448201526064016108ed565b60405163029333f560e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063029333f5906024016020604051808303816000875af1158015611f65573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f89919061317a565b611fc75760405162461bcd60e51b815260206004820152600f60248201526e140e955392d393d5d397d054d4d155608a1b60448201526064016108ed565b80611fd2838261290c565b50611bac6001600555565b6120067f00000000000000000000000000000000000000000000000000000000000000006123b9565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa15801561204c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612070919061317a565b61208c5760405162461bcd60e51b81526004016108ed9061319c565b6001600160a01b03166000908152601760205260409020805460ff19166001179055565b3360009081526017602052604090205460ff166120fc5760405162461bcd60e51b815260206004820152600a602482015269140e9393d517d413d3d360b21b60448201526064016108ed565b6000811161213f5760405162461bcd60e51b815260206004820152601060248201526f10940e9253959053125117d25394155560821b60448201526064016108ed565b80612148611321565b101561218c5760405162461bcd60e51b8152602060048201526013602482015272042503a4e4f545f454e4f5547485f4c415f425606c1b60448201526064016108ed565b6000336001600160a01b031663667316396040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121f091906132f1565b90506121fc818361271c565b6122485760405162461bcd60e51b815260206004820152601760248201527f42503a524551554553545f46524f4d5f42505f4641494c00000000000000000060448201526064016108ed565b60405182815233907fbabc2955520063ac5330d7fe65a85c54fce0d2c473be76d99e29fb7146ac96a09060200160405180910390a25050565b6010546001600160a01b0382166000908152600c6020526040812054909142916122ab9190613253565b11156122eb5760405162461bcd60e51b815260206004820152600f60248201526e10940e9195539114d7d313d0d2d151608a1b60448201526064016108ed565b6040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152610aa8917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa158015612377573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061239b91906131c2565b6001600160a01b038416600090815260208190526040902054612a23565b6000816001600160a01b031663c31245256040518163ffffffff1660e01b8152600401602060405180830381865afa1580156123f9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa891906132f1565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526115e1908590612a39565b610cb48383836001612a9c565b6002600554036124a757604051633ee5aeb560e01b815260040160405180910390fd5b6002600555565b6001600160a01b0383811660009081526001602090815260408083209386168352929052205460001981146115e1578181101561251757604051637dc7a0d960e11b81526001600160a01b038416600482015260248101829052604481018390526064016108ed565b6115e184848484036000612a9c565b6001600160a01b03831661255057604051634b637e8f60e11b8152600060048201526024016108ed565b6001600160a01b03821661257a5760405163ec442f0560e01b8152600060048201526024016108ed565b610cb4838383612b71565b60065460ff16156125a95760405163d93c066560e01b815260040160405180910390fd5b565b6001600160a01b0382166125d557604051634b637e8f60e11b8152600060048201526024016108ed565b611bac82600083612b71565b6001600160a01b0382166000908152600d6020526040812054612606906001906131f1565b90508082146126c0576001600160a01b0383166000908152600d6020526040902080548290811061263957612639613204565b9060005260206000209060030201600d6000856001600160a01b03166001600160a01b03168152602001908152602001600020838154811061267d5761267d613204565b60009182526020909120825460039092020180546001600160a01b0319166001600160a01b03909216919091178155600180830154908201556002918201549101555b6001600160a01b0383166000908152600d602052604090208054806126e7576126e761330e565b60008281526020812060036000199093019283020180546001600160a01b031916815560018101829055600201559055505050565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015612790573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ed0919061317a565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f2047d1633ff7768462ae07d28cb16e484203bfd6d85ce832494270ebcd9081a27f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612887573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128ab91906131c2565b60405190815260200160405180910390a3565b60006008546128cc60025490565b6113a591906131f1565b6001600160a01b0382166129005760405163ec442f0560e01b8152600060048201526024016108ed565b611bac60008383612b71565b336000908152600d602090815260409182902082516060810184526001600160a01b0385168152918201859052600f54909282019061294b9042613253565b90528154600180820184556000938452602093849020835160039093020180546001600160a01b0319166001600160a01b0393841617815593830151908401556040909101516002909201919091556129c8908216337f00000000000000000000000000000000000000000000000000000000000000008561241d565b6129d233836128d6565b81600760008282546129e49190613253565b909155506129f290506127b4565b604051829033907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c90600090a35050565b6000818310612a325781610ed0565b5090919050565b6000612a4e6001600160a01b03841683612c9b565b90508051600014158015612a73575080806020019051810190612a71919061317a565b155b15610cb457604051635274afe760e01b81526001600160a01b03841660048201526024016108ed565b6001600160a01b038416612ac65760405163e602df0560e01b8152600060048201526024016108ed565b6001600160a01b038316612af057604051634a1406b160e11b8152600060048201526024016108ed565b6001600160a01b03808516600090815260016020908152604080832093871683529290522082905580156115e157826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051612b6391815260200190565b60405180910390a350505050565b6001600160a01b038316612b9c578060026000828254612b919190613253565b90915550612c0e9050565b6001600160a01b03831660009081526020819052604090205481811015612bef5760405163391434e360e21b81526001600160a01b038516600482015260248101829052604481018390526064016108ed565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216612c2a57600280548290039055612c49565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612c8e91815260200190565b60405180910390a3505050565b6060610ed08383600084600080856001600160a01b03168486604051612cc19190613324565b60006040518083038185875af1925050503d8060008114612cfe576040519150601f19603f3d011682016040523d82523d6000602084013e612d03565b606091505b5091509150612d13868383612d1d565b9695505050505050565b606082612d3257612d2d82612d79565b610ed0565b8151158015612d4957506001600160a01b0384163b155b15612d7257604051639996b31560e01b81526001600160a01b03851660048201526024016108ed565b5080610ed0565b805115612d895780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60005b83811015612dbd578181015183820152602001612da5565b50506000910152565b6020815260008251806020840152612de5816040850160208701612da2565b601f01601f19169190910160400192915050565b6001600160a01b0381168114610a4557600080fd5b8035612e1981612df9565b919050565b600060208284031215612e3057600080fd5b8135610ed081612df9565b600060208284031215612e4d57600080fd5b5035919050565b60008060408385031215612e6757600080fd5b8235612e7281612df9565b946020939093013593505050565b60008083601f840112612e9257600080fd5b50813567ffffffffffffffff811115612eaa57600080fd5b6020830191508360208260051b8501011115612ec557600080fd5b9250929050565b600080600060408486031215612ee157600080fd5b83359250602084013567ffffffffffffffff811115612eff57600080fd5b612f0b86828701612e80565b9497909650939450505050565b600080600060608486031215612f2d57600080fd5b8335612f3881612df9565b92506020840135612f4881612df9565b929592945050506040919091013590565b60008060008060408587031215612f6f57600080fd5b843567ffffffffffffffff80821115612f8757600080fd5b612f9388838901612e80565b90965094506020870135915080821115612fac57600080fd5b50612fb987828801612e80565b95989497509550505050565b60008060208385031215612fd857600080fd5b823567ffffffffffffffff811115612fef57600080fd5b612ffb85828601612e80565b90969095509350505050565b634e487b7160e01b600052604160045260246000fd5b6000602080838503121561303057600080fd5b823567ffffffffffffffff8082111561304857600080fd5b818501915085601f83011261305c57600080fd5b81358181111561306e5761306e613007565b8060051b604051601f19603f8301168101818110858211171561309357613093613007565b6040529182528482019250838101850191888311156130b157600080fd5b938501935b828510156130d6576130c785612e0e565b845293850193928501926130b6565b98975050505050505050565b600080604083850312156130f557600080fd5b82359150602083013561310781612df9565b809150509250929050565b6000806040838503121561312557600080fd5b823561313081612df9565b9150602083013561310781612df9565b600181811c9082168061315457607f821691505b60208210810361317457634e487b7160e01b600052602260045260246000fd5b50919050565b60006020828403121561318c57600080fd5b81518015158114610ed057600080fd5b6020808252600c908201526b28231d2727aa2fa0a226a4a760a11b604082015260600190565b6000602082840312156131d457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610aa857610aa86131db565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610aa857610aa86131db565b60008261324e57634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610aa857610aa86131db565b600060018201613278576132786131db565b5060010190565b60006020828403121561329157600080fd5b813561ffff81168114610ed057600080fd5b60208082528181018390526000908460408401835b868110156132e65782356132cb81612df9565b6001600160a01b0316825291830191908301906001016132b8565b509695505050505050565b60006020828403121561330357600080fd5b8151610ed081612df9565b634e487b7160e01b600052603160045260246000fd5b60008251613336818460208701612da2565b919091019291505056fea2646970667358221220c78afd4713be3c88240b26ed79ec16bf3008dadaa9fb178a388b076772af520064736f6c63430008140033",
    "sourceMap": "704:5215:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1455:42:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1343:25:60;;;1331:2;1316:18;1455:42:6;1197:177:60;9744:377:6;;;;;;:::i;:::-;;:::i;:::-;;1743:57;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;2120:32:60;;;2102:51;;2184:2;2169:18;;2162:34;;;;2212:18;;;2205:34;2090:2;2075:18;1743:57:6;1884:361:60;4293:186:45;;;;;;:::i;:::-;;:::i;:::-;;;2415:14:60;;2408:22;2390:41;;2378:2;2363:18;4293:186:45;2250:187:60;1372:37:6;;;;;;;;-1:-1:-1;;;;;2606:32:60;;;2588:51;;2576:2;2561:18;1372:37:6;2442:203:60;1893:29:6;;;;;;3144:97:45;3222:12;;3144:97;;2055:513:7;;;;;;:::i;:::-;;:::i;8442:405:6:-;;;;;;:::i;:::-;;:::i;1085:38::-;;;;;5039:244:45;;;;;;:::i;:::-;;:::i;1656:46:6:-;;;;;;:::i;:::-;;;;;;;;;;;;;;5445:1500;;;;;;:::i;:::-;;:::i;3075:110:7:-;;;5166:4:60;3155:22:7;5154:17:60;5136:36;;5124:2;5109:18;3075:110:7;4994:184:60;1562:49:6;;;;;;:::i;:::-;;;;;;;;;;;;;;5389:90:7;;;;;;:::i;:::-;;:::i;2865:105::-;;;:::i;10289:152:6:-;;;;;;:::i;:::-;;:::i;3091:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;5470:25:60;;;5526:2;5511:18;;5504:34;;;;5554:18;;;5547:34;;;;5612:2;5597:18;;5590:34;5655:3;5640:19;;5633:35;5699:3;5684:19;;5677:35;5457:3;5442:19;3091:24:6;5183:535:60;1850:84:52;1920:7;;;;1850:84;;10614:97:6;10688:15;10614:97;;7779:403;;;;;;:::i;:::-;;:::i;9457:203::-;;;;;;:::i;:::-;;:::i;10127:156::-;;;;;;:::i;:::-;;:::i;3299:116:45:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:45;3364:7;3390:18;;;;;;;;;;;;3299:116;10447:161:6;;;;;;:::i;:::-;;:::i;780:23:7:-;;;;;-1:-1:-1;;;;;780:23:7;;;7371:365:6;;;;;;:::i;:::-;;:::i;9013:385::-;;;;;;:::i;:::-;;:::i;2276:93:45:-;;;:::i;984:49:6:-;;;;;852:47;;;;;;;;;;;;;;;-1:-1:-1;;;852:47:6;;;;;847:37:7;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3610:178:45;;;;;;:::i;:::-;;:::i;1338:27:6:-;;;;;;5156:170:7;;;;;;:::i;:::-;;:::i;4670:267::-;;;;;;:::i;:::-;;:::i;3254:594::-;;;:::i;4340:461:6:-;;;;;;:::i;:::-;;:::i;4999:87:7:-;;;;;;:::i;:::-;;:::i;3846:140:45:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:45;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;1503:53:6;;;;;;:::i;:::-;;;;;;;;;;;;;;3926:429:7;;;;;;:::i;:::-;;:::i;905:39:6:-;;;;;;;;;;;;;;;-1:-1:-1;;;905:39:6;;;;;1807:28;;;;;;2574:285:7;;;;;;:::i;:::-;;:::i;2976:93::-;3051:11;;2976:93;;2074:89:45;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;9744:377:6:-;11561:22;11570:12;11561:8;:22::i;:::-;:42;;-1:-1:-1;;;11561:42:6;;11592:10;11561:42;;;2588:51:60;-1:-1:-1;;;;;11561:30:6;;;;;;;2561:18:60;;11561:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1;;;11553:67:6;;;;;;;:::i;:::-;;;;;;;;;9820:36:::1;::::0;-1:-1:-1;;;9820:36:6;;9845:10:::1;9820:36;::::0;::::1;2588:51:60::0;9860:7:6;;9820:14:::1;-1:-1:-1::0;;;;;9820:24:6::1;::::0;::::1;::::0;2561:18:60;;9820:36:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;9812:80;;;::::0;-1:-1:-1;;;9812:80:6;;9767:2:60;9812:80:6::1;::::0;::::1;9749:21:60::0;9806:2;9786:18;;;9779:30;-1:-1:-1;;;9825:18:60;;;9818:50;9885:18;;9812:80:6::1;9565:344:60::0;9812:80:6::1;9917:12;;9906:7;:23;9902:124;;9960:1;9945:12;:16:::0;9902:124:::1;;;10008:7;9992:12;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;9902:124:6::1;10036:78;-1:-1:-1::0;;;;;10036:14:6::1;:31;10068:10;10088:15;10106:7:::0;10036:31:::1;:78::i;:::-;9744:377:::0;:::o;1743:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1743:57:6;;;;-1:-1:-1;1743:57:6;;-1:-1:-1;1743:57:6;:::o;4293:186:45:-;4366:4;735:10:51;4420:31:45;735:10:51;4436:7:45;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;2055:513:7:-;11561:22:6;11570:12;11561:8;:22::i;:::-;:42;;-1:-1:-1;;;11561:42:6;;11592:10;11561:42;;;2588:51:60;-1:-1:-1;;;;;11561:30:6;;;;;;;2561:18:60;;11561:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1;;;11553:67:6;;;;;;;:::i;:::-;2356:21:53::1;:19;:21::i;:::-;2197:1:7::2;2187:7;:11;2179:40;;;::::0;-1:-1:-1;;;2179:40:7;;10381:2:60;2179:40:7::2;::::0;::::2;10363:21:60::0;10420:2;10400:18;;;10393:30;-1:-1:-1;;;10439:18:60;;;10432:46;10495:18;;2179:40:7::2;10179:340:60::0;2179:40:7::2;2237:19:::0;2229:47:::2;;;::::0;-1:-1:-1;;;2229:47:7;;10726:2:60;2229:47:7::2;::::0;::::2;10708:21:60::0;10765:2;10745:18;;;10738:30;-1:-1:-1;;;10784:18:60;;;10777:45;10839:18;;2229:47:7::2;10524:339:60::0;2229:47:7::2;2291:9;2286:276;2306:19:::0;;::::2;2286:276;;;2346:14;2363:8;;2372:1;2363:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;2346:28;;2389:21;2413:17;2423:6;-1:-1:-1::0;;;;;3390:18:45;3364:7;3390:18;;;;;;;;;;;;3299:116;2413:17:7::2;2389:41;;2444:19;2494:13;3222:12:45::0;;;3144:97;2494:13:7::2;2467:23;2477:13:::0;2467:7;:23:::2;:::i;:::-;2466:41;;;;:::i;:::-;-1:-1:-1::0;;;;;2521:15:7;::::2;;::::0;;;:7:::2;:15;::::0;;;;:30;;2444:63;;-1:-1:-1;2444:63:7;;2521:15;;;:30:::2;::::0;2444:63;;2521:30:::2;:::i;:::-;;;;;;;;2332:230;;;2327:3;;;;;:::i;:::-;;;;2286:276;;;;2398:20:53::1;1713:1:::0;2924:7;:21;2744:208;2398:20:::1;2055:513:7::0;;;:::o;8442:405:6:-;2356:21:53;:19;:21::i;:::-;11561:22:6::1;11570:12;11561:8;:22::i;:::-;:42;::::0;-1:-1:-1;;;11561:42:6;;11592:10:::1;11561:42;::::0;::::1;2588:51:60::0;-1:-1:-1;;;;;11561:30:6;;;::::1;::::0;::::1;::::0;2561:18:60;;11561:42:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1::0;;;11553:67:6::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8556:30:6;;::::2;8539:14;8556:30:::0;;;:18:::2;:30;::::0;;;;;;;8604:44;;-1:-1:-1;;;8604:44:6;;::::2;::::0;::::2;11839:51:60::0;;;;11906:18;;;11899:34;;;8556:30:6;8604:15:::2;:24;::::0;::::2;::::0;11812:18:60;;8604:44:6::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8596:85;;;::::0;-1:-1:-1;;;8596:85:6;;12146:2:60;8596:85:6::2;::::0;::::2;12128:21:60::0;12185:2;12165:18;;;12158:30;12224;12204:18;;;12197:58;12272:18;;8596:85:6::2;11944:352:60::0;8596:85:6::2;-1:-1:-1::0;;;;;8749:30:6;::::2;;::::0;;;:18:::2;:30;::::0;;;;;8742:37;;;8794:46;8833:6;;8749:30;8794:46:::2;::::0;::::2;8529:318;2398:20:53::0;1713:1;2924:7;:21;2744:208;5039:244:45;5126:4;735:10:51;5182:37:45;5198:4;735:10:51;5213:5:45;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;;:::o;5445:1500:6:-;1474:19:52;:17;:19::i;:::-;5559:34:6;;::::1;5551:68;;;::::0;-1:-1:-1;;;5551:68:6;;12503:2:60;5551:68:6::1;::::0;::::1;12485:21:60::0;12542:2;12522:18;;;12515:30;-1:-1:-1;;;12561:18:60;;;12554:51;12622:18;;5551:68:6::1;12301:345:60::0;5551:68:6::1;5634:9;5629:1310;5649:19:::0;;::::1;5629:1310;;;5689:14;5706:8;;5715:1;5706:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5689:28;;;;5731:15;5749:8;;5758:1;5749:11;;;;;;;:::i;:::-;5804:10;5791:24;::::0;;;:12:::1;5749:11;5791:24:::0;;;;;;;:31;5749:11;::::1;::::0;;;::::1;;::::0;-1:-1:-1;;5782:40:6;::::1;5774:68;;;::::0;-1:-1:-1;;;5774:68:6;;13130:2:60;5774:68:6::1;::::0;::::1;13112:21:60::0;13169:2;13149:18;;;13142:30;-1:-1:-1;;;13188:18:60;;;13181:45;13243:18;;5774:68:6::1;12928:339:60::0;5774:68:6::1;5903:10;5856:31;5890:24:::0;;;:12:::1;:24;::::0;;;;:32;;5915:6;;5890:32;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;5856:66:::1;::::0;;::::1;::::0;::::1;::::0;;5890:32:::1;::::0;;::::1;::::0;;::::1;5856:66:::0;;-1:-1:-1;;;;;5856:66:6::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;5944:15:6::1;:38;;5936:66;;;::::0;-1:-1:-1;;;5936:66:6;;13474:2:60;5936:66:6::1;::::0;::::1;13456:21:60::0;13513:2;13493:18;;;13486:30;-1:-1:-1;;;13532:18:60;;;13525:45;13587:18;;5936:66:6::1;13272:339:60::0;5936:66:6::1;6043:7;6024:8;:15;;;:26;;:62;;;;-1:-1:-1::0;6064:10:6::1;3364:7:45::0;3390:18;;;;;;;;;;;6079:7:6;-1:-1:-1;6054:32:6::1;6024:62;6016:95;;;::::0;-1:-1:-1;;;6016:95:6;;13818:2:60;6016:95:6::1;::::0;::::1;13800:21:60::0;13857:2;13837:18;;;13830:30;-1:-1:-1;;;13876:18:60;;;13869:50;13936:18;;6016:95:6::1;13616:344:60::0;6016:95:6::1;6126:26;6132:10;6144:7;6126:5;:26::i;:::-;6308:7;6275:15;-1:-1:-1::0;;;;;6275:28:6::1;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;6271:207;;;6354:10;6335:30;::::0;;;:18:::1;:30;::::0;;;;:41;;6369:7;;6335:30;:41:::1;::::0;6369:7;;6335:41:::1;:::i;:::-;::::0;;;-1:-1:-1;;6399:38:6::1;::::0;6429:7;;6417:10:::1;::::0;6399:38:::1;::::0;;;::::1;6455:8;;;;;6271:207;6511:7;6492:8;:15;;:26;;;;;;;:::i;:::-;::::0;;-1:-1:-1;6686:15:6::1;::::0;::::1;::::0;6705:1:::1;6686:20:::0;6682:92:::1;;6726:33;6740:10;6752:6;6726:13;:33::i;:::-;6788:50;6818:10;6830:7;6788:29;:50::i;:::-;;6852:26;:24;:26::i;:::-;6897:31;::::0;6920:7;;6908:10:::1;::::0;6897:31:::1;::::0;;;::::1;5675:1264;;;5629:1310;5670:3:::0;::::1;::::0;::::1;:::i;:::-;;;;5629:1310;;;;5445:1500:::0;;;;:::o;5389:90:7:-;11561:22:6;11570:12;11561:8;:22::i;:::-;:42;;-1:-1:-1;;;11561:42:6;;11592:10;11561:42;;;2588:51:60;-1:-1:-1;;;;;11561:30:6;;;;;;;2561:18:60;;11561:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1;;;11553:67:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;5460:12:7::1;;::::0;;;:5:::1;:12;::::0;;;;5453:19;;-1:-1:-1;;5453:19:7::1;::::0;;5389:90::o;2865:105::-;2907:7;2933:15;-1:-1:-1;;;;;2933:28:7;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2926:37;;2865:105;:::o;10289:152:6:-;10372:62;;-1:-1:-1;;;10372:62:6;;-1:-1:-1;;;;;2606:32:60;;;10372:62:6;;;2588:51:60;10372:15:6;:45;;;;2561:18:60;;10372:62:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7779:403;-1:-1:-1;;;;;7898:19:6;;7862:7;7898:19;;;:12;:19;;;;;:26;7889:35;;7881:63;;;;-1:-1:-1;;;7881:63:6;;13130:2:60;7881:63:6;;;13112:21:60;13169:2;13149:18;;;13142:30;-1:-1:-1;;;13188:18:60;;;13181:45;13243:18;;7881:63:6;12928:339:60;7881:63:6;-1:-1:-1;;;;;7995:19:6;;7954:38;7995:19;;;:12;:19;;;;;:27;;8015:6;;7995:27;;;;;;:::i;:::-;;;;;;;;;;7954:68;;;;;;;;7995:27;;;;;;;7954:68;;-1:-1:-1;;;;;7954:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8036:15:6;:45;8032:144;;8104:22;;;;-1:-1:-1;8097:29:6;;8032:144;8164:1;8157:8;;;;;9457:203;11561:22;11570:12;11561:8;:22::i;:::-;:42;;-1:-1:-1;;;11561:42:6;;11592:10;11561:42;;;2588:51:60;-1:-1:-1;;;;;11561:30:6;;;;;;;2561:18:60;;11561:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1;;;11553:67:6;;;;;;;:::i;:::-;9550:7:::1;9534:12;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;9567:14:6::1;::::0;-1:-1:-1;9584:17:6::1;:15;:17::i;:::-;9567:34;;9611:42;9641:3;9646:6;9611:29;:42::i;:::-;;9524:136;9457:203:::0;;:::o;10127:156::-;11561:22;11570:12;11561:8;:22::i;:::-;:42;;-1:-1:-1;;;11561:42:6;;11592:10;11561:42;;;2588:51:60;-1:-1:-1;;;;;11561:30:6;;;;;;;2561:18:60;;11561:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1;;;11553:67:6;;;;;;;:::i;:::-;10217:59:::1;::::0;-1:-1:-1;;;10217:59:6;;-1:-1:-1;;;;;2606:32:60;;;10217:59:6::1;::::0;::::1;2588:51:60::0;10217:15:6::1;:42;::::0;::::1;::::0;2561:18:60;;10217:59:6::1;2442:203:60::0;10447:161:6;10540:61;;-1:-1:-1;;;10540:61:6;;-1:-1:-1;;;;;10540:15:6;:43;;;;:61;;10584:16;;;;10540:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10447:161;;:::o;7371:365::-;7443:1;7433:7;:11;7425:39;;;;-1:-1:-1;;;7425:39:6;;14877:2:60;7425:39:6;;;14859:21:60;14916:2;14896:18;;;14889:30;-1:-1:-1;;;14935:18:60;;;14928:45;14990:18;;7425:39:6;14675:339:60;7425:39:6;7490:10;7482:19;;;;:7;:19;;;;;;:30;-1:-1:-1;7482:30:6;7474:65;;;;-1:-1:-1;;;7474:65:6;;15221:2:60;7474:65:6;;;15203:21:60;15260:2;15240:18;;;15233:30;-1:-1:-1;;;15279:18:60;;;15272:52;15341:18;;7474:65:6;15019:346:60;7474:65:6;7550:26;7556:10;7568:7;7550:5;:26::i;:::-;7601:7;7586:11;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;7627:10:6;7619:19;;;;:7;:19;;;;;:30;;7642:7;;7619:19;:30;;7642:7;;7619:30;:::i;:::-;;;;-1:-1:-1;7659:26:6;;-1:-1:-1;7659:24:6;:26::i;:::-;7700:29;;7721:7;;7709:10;;7700:29;;;;;7371:365;:::o;9013:385::-;2356:21:53;:19;:21::i;:::-;11561:22:6::1;11570:12;11561:8;:22::i;:::-;:42;::::0;-1:-1:-1;;;11561:42:6;;11592:10:::1;11561:42;::::0;::::1;2588:51:60::0;-1:-1:-1;;;;;11561:30:6;;;::::1;::::0;::::1;::::0;2561:18:60;;11561:42:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1::0;;;11553:67:6::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9123:26:6;;::::2;9106:14;9123:26:::0;;;:14:::2;:26;::::0;;;;;;;9167:44;;-1:-1:-1;;;9167:44:6;;::::2;::::0;::::2;11839:51:60::0;;;;11906:18;;;11899:34;;;9123:26:6;9167:15:::2;:24;::::0;::::2;::::0;11812:18:60;;9167:44:6::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9159:81;;;::::0;-1:-1:-1;;;9159:81:6;;15572:2:60;9159:81:6::2;::::0;::::2;15554:21:60::0;15611:2;15591:18;;;15584:30;15650:26;15630:18;;;15623:54;15694:18;;9159:81:6::2;15370:348:60::0;9159:81:6::2;-1:-1:-1::0;;;;;9308:26:6;::::2;;::::0;;;:14:::2;:26;::::0;;;;;9301:33;;;9349:42;9384:6;;9308:26;9349:42:::2;::::0;::::2;9096:302;2398:20:53::0;1713:1;2924:7;:21;2744:208;2276:93:45;2323:13;2355:7;2348:14;;;;;:::i;3610:178::-;3679:4;735:10:51;3733:27:45;735:10:51;3750:2:45;3754:5;3733:9;:27::i;5156:170:7:-;11561:22:6;11570:12;11561:8;:22::i;:::-;:42;;-1:-1:-1;;;11561:42:6;;11592:10;11561:42;;;2588:51:60;-1:-1:-1;;;;;11561:30:6;;;;;;;2561:18:60;;11561:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1;;;11553:67:6;;;;;;;:::i;:::-;5233:9:7::1;5228:92;5252:6;:13;5248:1;:17;5228:92;;;5305:4;5286:5;:16;5292:6;5299:1;5292:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;5286:16:7::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;5286:16:7;:23;;-1:-1:-1;;5286:23:7::1;::::0;::::1;;::::0;;;::::1;::::0;;5267:3;::::1;::::0;::::1;:::i;:::-;;;;5228:92;;;;5156:170:::0;:::o;4670:267::-;1474:19:52;:17;:19::i;:::-;2356:21:53::1;:19;:21::i;:::-;4778:28:7::0;;4767:39;::::2;;4759:72;;;::::0;-1:-1:-1;;;4759:72:7;;15925:2:60;4759:72:7::2;::::0;::::2;15907:21:60::0;15964:2;15944:18;;;15937:30;-1:-1:-1;;;15983:18:60;;;15976:50;16043:18;;4759:72:7::2;15723:344:60::0;4759:72:7::2;4842:13;4858:15;-1:-1:-1::0;;;;;4858:30:7::2;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4842:48;;4901:29;4914:7;4923:6;4901:12;:29::i;:::-;4749:188;2398:20:53::1;1713:1:::0;2924:7;:21;2744:208;3254:594:7;3352:10;3304:4;3344:19;;;:7;:19;;;;;;;;;3396:30;;-1:-1:-1;;;3396:30:7;;;;3344:19;;3304:4;;3396:15;-1:-1:-1;;;;;3396:28:7;;;;:30;;;;;3344:19;;3396:30;;;;;;:28;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3444:10;3458:1;3436:19;;;:7;:19;;;;;:23;3373:53;-1:-1:-1;3474:28:7;;;3470:187;;;3533:10;3518:26;;;;:14;:26;;;;;:43;;3548:13;;3518:26;:43;;3548:13;;3518:43;:::i;:::-;;;;-1:-1:-1;;3580:40:7;;3606:13;;3594:10;;3580:40;;;;;3641:5;3634:12;;;;3254:594;:::o;3470:187::-;3675:56;3705:10;3717:13;3675:29;:56::i;:::-;3667:97;;;;-1:-1:-1;;;3667:97:7;;16546:2:60;3667:97:7;;;16528:21:60;16585:2;16565:18;;;16558:30;16624;16604:18;;;16597:58;16672:18;;3667:97:7;16344:352:60;3667:97:7;3780:40;;3806:13;;3794:10;;3780:40;;;;;3837:4;3830:11;;;;3254:594;:::o;4340:461:6:-;1474:19:52;:17;:19::i;:::-;2356:21:53::1;:19;:21::i;:::-;4473:28:6::0;;4462:39;::::2;;4454:71;;;::::0;-1:-1:-1;;;4454:71:6;;16903:2:60;4454:71:6::2;::::0;::::2;16885:21:60::0;16942:2;16922:18;;;16915:30;-1:-1:-1;;;16961:18:60;;;16954:49;17020:18;;4454:71:6::2;16701:343:60::0;4454:71:6::2;4570:27:::0;;4559:7;4543:13:::2;3222:12:45::0;;;3144:97;4543:13:6::2;:23;;;;:::i;:::-;:54;;4535:90;;;::::0;-1:-1:-1;;;4535:90:6;;17251:2:60;4535:90:6::2;::::0;::::2;17233:21:60::0;17290:2;17270:18;;;17263:30;17329:25;17309:18;;;17302:53;17372:18;;4535:90:6::2;17049:347:60::0;4535:90:6::2;4643:48;::::0;-1:-1:-1;;;4643:48:6;;-1:-1:-1;;;;;2606:32:60;;;4643:48:6::2;::::0;::::2;2588:51:60::0;4643:15:6::2;:36;::::0;::::2;::::0;2561:18:60;;4643:48:6::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4635:76;;;::::0;-1:-1:-1;;;4635:76:6;;17603:2:60;4635:76:6::2;::::0;::::2;17585:21:60::0;17642:2;17622:18;;;17615:30;-1:-1:-1;;;17661:18:60;;;17654:45;17716:18;;4635:76:6::2;17401:339:60::0;4635:76:6::2;4744:10:::0;4766:28:::2;4779:7:::0;4744:10;4766:12:::2;:28::i;:::-;4444:357;2398:20:53::1;1713:1:::0;2924:7;:21;2744:208;4999:87:7;11561:22:6;11570:12;11561:8;:22::i;:::-;:42;;-1:-1:-1;;;11561:42:6;;11592:10;11561:42;;;2588:51:60;-1:-1:-1;;;;;11561:30:6;;;;;;;2561:18:60;;11561:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1;;;11553:67:6;;;;;;;:::i;:::-;-1:-1:-1;;;;;5060:12:7::1;;::::0;;;:5:::1;:12;::::0;;;;:19;;-1:-1:-1;;5060:19:7::1;5075:4;5060:19;::::0;;4999:87::o;3926:429::-;5873:10;5867:17;;;;:5;:17;;;;;;;;5859:40;;;;-1:-1:-1;;;5859:40:7;;17947:2:60;5859:40:7;;;17929:21:60;17986:2;17966:18;;;17959:30;-1:-1:-1;;;18005:18:60;;;17998:40;18055:18;;5859:40:7;17745:334:60;5859:40:7;4035:1:::1;4018:14;:18;4010:47;;;::::0;-1:-1:-1;;;4010:47:7;;18286:2:60;4010:47:7::1;::::0;::::1;18268:21:60::0;18325:2;18305:18;;;18298:30;-1:-1:-1;;;18344:18:60;;;18337:46;18400:18;;4010:47:7::1;18084:340:60::0;4010:47:7::1;4094:14;4075:15;:13;:15::i;:::-;:33;;4067:65;;;::::0;-1:-1:-1;;;4067:65:7;;18631:2:60;4067:65:7::1;::::0;::::1;18613:21:60::0;18670:2;18650:18;;;18643:30;-1:-1:-1;;;18689:18:60;;;18682:49;18748:18;;4067:65:7::1;18429:343:60::0;4067:65:7::1;4142:14;4172:10;-1:-1:-1::0;;;;;4159:30:7::1;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4142:49;;4209:53;4239:6;4247:14;4209:29;:53::i;:::-;4201:89;;;::::0;-1:-1:-1;;;4201:89:7;;19235:2:60;4201:89:7::1;::::0;::::1;19217:21:60::0;19274:2;19254:18;;;19247:30;19313:25;19293:18;;;19286:53;19356:18;;4201:89:7::1;19033:347:60::0;4201:89:7::1;4306:42;::::0;1343:25:60;;;4321:10:7::1;::::0;4306:42:::1;::::0;1331:2:60;1316:18;4306:42:7::1;;;;;;;4000:355;3926:429:::0;:::o;2574:285::-;2688:8;:21;-1:-1:-1;;;;;2665:20:7;;2638:7;2665:20;;;:11;:20;;;;;;2638:7;;2713:15;;2665:44;;2688:21;2665:44;:::i;:::-;:63;;2657:91;;;;-1:-1:-1;;;2657:91:7;;19587:2:60;2657:91:7;;;19569:21:60;19626:2;19606:18;;;19599:30;-1:-1:-1;;;19645:18:60;;;19638:45;19700:18;;2657:91:7;19385:339:60;2657:91:7;2775:50;;-1:-1:-1;;;2775:50:7;;-1:-1:-1;;;;;2808:15:7;2606:32:60;;2775:50:7;;;2588:51:60;2766:86:7;;2775:14;:24;;;;;;2561:18:60;;2775:50:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:45;;3364:7;3390:18;;;;;;;;;;;2766:8:7;:86::i;5661:162::-;5732:14;5793:11;-1:-1:-1;;;;;5780:33:7;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1702:188:49:-;1829:53;;;-1:-1:-1;;;;;20265:15:60;;;1829:53:49;;;20247:34:60;20317:15;;20297:18;;;20290:43;20349:18;;;;20342:34;;;1829:53:49;;;;;;;;;;20182:18:60;;;;1829:53:49;;;;;;;;-1:-1:-1;;;;;1829:53:49;-1:-1:-1;;;1829:53:49;;;1802:81;;1822:5;;1802:19;:81::i;8989:128:45:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;2431:307:53:-;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:53;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;10663:477:45:-;-1:-1:-1;;;;;3952:18:45;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:45;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:45;;-1:-1:-1;;;;;2120:32:60;;10936:60:45;;;2102:51:60;2169:18;;;2162:34;;;2212:18;;;2205:34;;;2075:18;;10936:60:45;1884:361:60;10881:130:45;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;5656:300::-;-1:-1:-1;;;;;5739:18:45;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:45;;5807:1;5780:30;;;2588:51:60;2561:18;;5780:30:45;2442:203:60;5735:86:45;-1:-1:-1;;;;;5834:16:45;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:45;;5902:1;5873:32;;;2588:51:60;2561:18;;5873:32:45;2442:203:60;5830:86:45;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;2002:128:52:-;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:52;;;;;;;;;;;2063:61;2002:128::o;8247:206:45:-;-1:-1:-1;;;;;8317:21:45;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:45;;8388:1;8361:30;;;2588:51:60;2561:18;;8361:30:45;2442:203:60;8313:89:45;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;6951:283:6:-;-1:-1:-1;;;;;7043:19:6;;7023:17;7043:19;;;:12;:19;;;;;:26;:30;;7072:1;;7043:30;:::i;:::-;7023:50;;7097:9;7087:6;:19;7083:110;;-1:-1:-1;;;;;7152:19:6;;;;;;:12;:19;;;;;:30;;7172:9;;7152:30;;;;;;:::i;:::-;;;;;;;;;;;7122:12;:19;7135:5;-1:-1:-1;;;;;7122:19:6;-1:-1:-1;;;;;7122:19:6;;;;;;;;;;;;7142:6;7122:27;;;;;;;;:::i;:::-;;;;;;;;;:60;;:27;;;;;:60;;-1:-1:-1;;;;;;7122:60:6;-1:-1:-1;;;;;7122:60:6;;;;;;;;;;;;;;;;;;;;;;;;;;7083:110;-1:-1:-1;;;;;7202:19:6;;;;;;:12;:19;;;;;:25;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;7202:25:6;;;;;;;;;-1:-1:-1;;;;;;7202:25:6;;;;;;;;;;;;;;-1:-1:-1;;;6951:283:6:o;10851:149::-;10958:35;;-1:-1:-1;;;10958:35:6;;-1:-1:-1;;;;;11857:32:60;;;10958:35:6;;;11839:51:60;11906:18;;;11899:34;;;10935:4:6;;10958:15;:24;;;;;;11812:18:60;;10958:35:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11218:164::-;11327:14;-1:-1:-1;;;;;11278:97:6;11301:15;-1:-1:-1;;;;;11278:97:6;;11344:15;-1:-1:-1;;;;;11344:28:6;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11278:97;;1343:25:60;;;1331:2;1316:18;11278:97:6;;;;;;;11218:164::o;11043:111::-;11093:7;11135:12;;11119:13;3222:12:45;;;3144:97;11119:13:6;:28;;;;:::i;7721:208:45:-;-1:-1:-1;;;;;7791:21:45;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:45;;7864:1;7835:32;;;2588:51:60;2561:18;;7835:32:45;2442:203:60;7787:91:45;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;4807:458:6:-;4893:10;4880:24;;;;:12;:24;;;;;;;;;4923:95;;;;;;;-1:-1:-1;;;;;4923:95:6;;;;;;;;;;5002:14;;4880:24;;4923:95;;;4984:32;;:15;:32;:::i;:::-;4923:95;;4880:148;;;;;;;;-1:-1:-1;4880:148:6;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4880:148:6;-1:-1:-1;;;;;4880:148:6;;;;;;;;;;;;;;;;;;;;;;;;;;;5039:70;;:23;;5063:10;5083:15;5101:7;5039:23;:70::i;:::-;5120:26;5126:10;5138:7;5120:5;:26::i;:::-;5171:7;5156:11;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;5189:26:6;;-1:-1:-1;5189:24:6;:26::i;:::-;5230:28;;5250:7;;5238:10;;5230:28;;;;;4807:458;;:::o;2557:104:56:-;2615:7;2645:1;2641;:5;:13;;2653:1;2641:13;;;-1:-1:-1;2649:1:56;;2557:104;-1:-1:-1;2557:104:56:o;4059:629:49:-;4478:23;4504:33;-1:-1:-1;;;;;4504:27:49;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:49;;-1:-1:-1;;;;;2606:32:60;;4631:40:49;;;2588:51:60;2561:18;;4631:40:49;2442:203:60;9949:432:45;-1:-1:-1;;;;;10061:19:45;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:45;;10132:1;10103:32;;;2588:51:60;2561:18;;10103:32:45;2442:203:60;10057:89:45;-1:-1:-1;;;;;10159:21:45;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:45;;10231:1;10203:31;;;2588:51:60;2561:18;;10203:31:45;2442:203:60;10155:90:45;-1:-1:-1;;;;;10254:18:45;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:45;10342:5;-1:-1:-1;;;;;10333:31:45;;10358:5;10333:31;;;;1343:25:60;;1331:2;1316:18;;1197:177;10333:31:45;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:45;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:45;;-1:-1:-1;6356:540:45;;-1:-1:-1;;;;;6570:15:45;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:45;;-1:-1:-1;;;;;2120:32:60;;6649:50:45;;;2102:51:60;2169:18;;;2162:34;;;2212:18;;;2205:34;;;2075:18;;6649:50:45;1884:361:60;6599:115:45;-1:-1:-1;;;;;6834:15:45;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:45;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:45;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:45;7355:4;-1:-1:-1;;;;;7346:25:45;;7365:5;7346:25;;;;1343::60;;1331:2;1316:18;;1197:177;7346:25:45;;;;;;;;6271:1107;;;:::o;2705:151:50:-;2780:12;2811:38;2833:6;2841:4;2847:1;2780:12;3421;3435:23;3462:6;-1:-1:-1;;;;;3462:11:50;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:50:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:50;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:50;;-1:-1:-1;;;;;2606:32:60;;5121:24:50;;;2588:51:60;2561:18;;5121:24:50;2442:203:60;5041:119:50;-1:-1:-1;5180:10:50;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:50;;;;;;;;;;;14:250:60;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:60;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:60;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:60:o;670:131::-;-1:-1:-1;;;;;745:31:60;;735:42;;725:70;;791:1;788;781:12;806:134;874:20;;903:31;874:20;903:31;:::i;:::-;806:134;;;:::o;945:247::-;1004:6;1057:2;1045:9;1036:7;1032:23;1028:32;1025:52;;;1073:1;1070;1063:12;1025:52;1112:9;1099:23;1131:31;1156:5;1131:31;:::i;1379:180::-;1438:6;1491:2;1479:9;1470:7;1466:23;1462:32;1459:52;;;1507:1;1504;1497:12;1459:52;-1:-1:-1;1530:23:60;;1379:180;-1:-1:-1;1379:180:60:o;1564:315::-;1632:6;1640;1693:2;1681:9;1672:7;1668:23;1664:32;1661:52;;;1709:1;1706;1699:12;1661:52;1748:9;1735:23;1767:31;1792:5;1767:31;:::i;:::-;1817:5;1869:2;1854:18;;;;1841:32;;-1:-1:-1;;;1564:315:60:o;2650:367::-;2713:8;2723:6;2777:3;2770:4;2762:6;2758:17;2754:27;2744:55;;2795:1;2792;2785:12;2744:55;-1:-1:-1;2818:20:60;;2861:18;2850:30;;2847:50;;;2893:1;2890;2883:12;2847:50;2930:4;2922:6;2918:17;2906:29;;2990:3;2983:4;2973:6;2970:1;2966:14;2958:6;2954:27;2950:38;2947:47;2944:67;;;3007:1;3004;2997:12;2944:67;2650:367;;;;;:::o;3022:505::-;3117:6;3125;3133;3186:2;3174:9;3165:7;3161:23;3157:32;3154:52;;;3202:1;3199;3192:12;3154:52;3238:9;3225:23;3215:33;;3299:2;3288:9;3284:18;3271:32;3326:18;3318:6;3315:30;3312:50;;;3358:1;3355;3348:12;3312:50;3397:70;3459:7;3450:6;3439:9;3435:22;3397:70;:::i;:::-;3022:505;;3486:8;;-1:-1:-1;3371:96:60;;-1:-1:-1;;;;3022:505:60:o;3756:456::-;3833:6;3841;3849;3902:2;3890:9;3881:7;3877:23;3873:32;3870:52;;;3918:1;3915;3908:12;3870:52;3957:9;3944:23;3976:31;4001:5;3976:31;:::i;:::-;4026:5;-1:-1:-1;4083:2:60;4068:18;;4055:32;4096:33;4055:32;4096:33;:::i;:::-;3756:456;;4148:7;;-1:-1:-1;;;4202:2:60;4187:18;;;;4174:32;;3756:456::o;4217:772::-;4338:6;4346;4354;4362;4415:2;4403:9;4394:7;4390:23;4386:32;4383:52;;;4431:1;4428;4421:12;4383:52;4471:9;4458:23;4500:18;4541:2;4533:6;4530:14;4527:34;;;4557:1;4554;4547:12;4527:34;4596:70;4658:7;4649:6;4638:9;4634:22;4596:70;:::i;:::-;4685:8;;-1:-1:-1;4570:96:60;-1:-1:-1;4773:2:60;4758:18;;4745:32;;-1:-1:-1;4789:16:60;;;4786:36;;;4818:1;4815;4808:12;4786:36;;4857:72;4921:7;4910:8;4899:9;4895:24;4857:72;:::i;:::-;4217:772;;;;-1:-1:-1;4948:8:60;-1:-1:-1;;;;4217:772:60:o;5723:437::-;5809:6;5817;5870:2;5858:9;5849:7;5845:23;5841:32;5838:52;;;5886:1;5883;5876:12;5838:52;5926:9;5913:23;5959:18;5951:6;5948:30;5945:50;;;5991:1;5988;5981:12;5945:50;6030:70;6092:7;6083:6;6072:9;6068:22;6030:70;:::i;:::-;6119:8;;6004:96;;-1:-1:-1;5723:437:60;-1:-1:-1;;;;5723:437:60:o;6397:127::-;6458:10;6453:3;6449:20;6446:1;6439:31;6489:4;6486:1;6479:15;6513:4;6510:1;6503:15;6529:1121;6613:6;6644:2;6687;6675:9;6666:7;6662:23;6658:32;6655:52;;;6703:1;6700;6693:12;6655:52;6743:9;6730:23;6772:18;6813:2;6805:6;6802:14;6799:34;;;6829:1;6826;6819:12;6799:34;6867:6;6856:9;6852:22;6842:32;;6912:7;6905:4;6901:2;6897:13;6893:27;6883:55;;6934:1;6931;6924:12;6883:55;6970:2;6957:16;6992:2;6988;6985:10;6982:36;;;6998:18;;:::i;:::-;7044:2;7041:1;7037:10;7076:2;7070:9;7139:2;7135:7;7130:2;7126;7122:11;7118:25;7110:6;7106:38;7194:6;7182:10;7179:22;7174:2;7162:10;7159:18;7156:46;7153:72;;;7205:18;;:::i;:::-;7241:2;7234:22;7291:18;;;7325:15;;;;-1:-1:-1;7367:11:60;;;7363:20;;;7395:19;;;7392:39;;;7427:1;7424;7417:12;7392:39;7451:11;;;;7471:148;7487:6;7482:3;7479:15;7471:148;;;7553:23;7572:3;7553:23;:::i;:::-;7541:36;;7504:12;;;;7597;;;;7471:148;;;7638:6;6529:1121;-1:-1:-1;;;;;;;;6529:1121:60:o;7655:315::-;7723:6;7731;7784:2;7772:9;7763:7;7759:23;7755:32;7752:52;;;7800:1;7797;7790:12;7752:52;7836:9;7823:23;7813:33;;7896:2;7885:9;7881:18;7868:32;7909:31;7934:5;7909:31;:::i;:::-;7959:5;7949:15;;;7655:315;;;;;:::o;7975:388::-;8043:6;8051;8104:2;8092:9;8083:7;8079:23;8075:32;8072:52;;;8120:1;8117;8110:12;8072:52;8159:9;8146:23;8178:31;8203:5;8178:31;:::i;:::-;8228:5;-1:-1:-1;8285:2:60;8270:18;;8257:32;8298:33;8257:32;8298:33;:::i;8368:380::-;8447:1;8443:12;;;;8490;;;8511:61;;8565:4;8557:6;8553:17;8543:27;;8511:61;8618:2;8610:6;8607:14;8587:18;8584:38;8581:161;;8664:10;8659:3;8655:20;8652:1;8645:31;8699:4;8696:1;8689:15;8727:4;8724:1;8717:15;8581:161;;8368:380;;;:::o;8753:277::-;8820:6;8873:2;8861:9;8852:7;8848:23;8844:32;8841:52;;;8889:1;8886;8879:12;8841:52;8921:9;8915:16;8974:5;8967:13;8960:21;8953:5;8950:32;8940:60;;8996:1;8993;8986:12;9035:336;9237:2;9219:21;;;9276:2;9256:18;;;9249:30;-1:-1:-1;;;9310:2:60;9295:18;;9288:42;9362:2;9347:18;;9035:336::o;9376:184::-;9446:6;9499:2;9487:9;9478:7;9474:23;9470:32;9467:52;;;9515:1;9512;9505:12;9467:52;-1:-1:-1;9538:16:60;;9376:184;-1:-1:-1;9376:184:60:o;9914:127::-;9975:10;9970:3;9966:20;9963:1;9956:31;10006:4;10003:1;9996:15;10030:4;10027:1;10020:15;10046:128;10113:9;;;10134:11;;;10131:37;;;10148:18;;:::i;10868:127::-;10929:10;10924:3;10920:20;10917:1;10910:31;10960:4;10957:1;10950:15;10984:4;10981:1;10974:15;11000:168;11073:9;;;11104;;11121:15;;;11115:22;;11101:37;11091:71;;11142:18;;:::i;11173:217::-;11213:1;11239;11229:132;;11283:10;11278:3;11274:20;11271:1;11264:31;11318:4;11315:1;11308:15;11346:4;11343:1;11336:15;11229:132;-1:-1:-1;11375:9:60;;11173:217::o;11395:125::-;11460:9;;;11481:10;;;11478:36;;;11494:18;;:::i;11525:135::-;11564:3;11585:17;;;11582:43;;11605:18;;:::i;:::-;-1:-1:-1;11652:1:60;11641:13;;11525:135::o;12651:272::-;12709:6;12762:2;12750:9;12741:7;12737:23;12733:32;12730:52;;;12778:1;12775;12768:12;12730:52;12817:9;12804:23;12867:6;12860:5;12856:18;12849:5;12846:29;12836:57;;12889:1;12886;12879:12;13965:705;14146:2;14198:21;;;14171:18;;;14254:22;;;14117:4;;14333:6;14307:2;14292:18;;14117:4;14367:277;14381:6;14378:1;14375:13;14367:277;;;14456:6;14443:20;14476:31;14501:5;14476:31;:::i;:::-;-1:-1:-1;;;;;14532:31:60;14520:44;;14619:15;;;;14584:12;;;;14560:1;14396:9;14367:277;;;-1:-1:-1;14661:3:60;13965:705;-1:-1:-1;;;;;;13965:705:60:o;16072:267::-;16158:6;16211:2;16199:9;16190:7;16186:23;16182:32;16179:52;;;16227:1;16224;16217:12;16179:52;16259:9;16253:16;16278:31;16303:5;16278:31;:::i;20737:127::-;20798:10;20793:3;20789:20;20786:1;20779:31;20829:4;20826:1;20819:15;20853:4;20850:1;20843:15;20869:287;20998:3;21036:6;21030:13;21052:66;21111:6;21106:3;21099:4;21091:6;21087:17;21052:66;:::i;:::-;21134:16;;;;;20869:287;-1:-1:-1;;20869:287:60:o",
    "linkReferences": {},
    "immutableReferences": {
      "357": [
        {
          "start": 1334,
          "length": 32
        },
        {
          "start": 1557,
          "length": 32
        },
        {
          "start": 2592,
          "length": 32
        },
        {
          "start": 3498,
          "length": 32
        },
        {
          "start": 4330,
          "length": 32
        },
        {
          "start": 4901,
          "length": 32
        },
        {
          "start": 5065,
          "length": 32
        },
        {
          "start": 5813,
          "length": 32
        },
        {
          "start": 5883,
          "length": 32
        },
        {
          "start": 6513,
          "length": 32
        },
        {
          "start": 7181,
          "length": 32
        },
        {
          "start": 7371,
          "length": 32
        },
        {
          "start": 7964,
          "length": 32
        },
        {
          "start": 8962,
          "length": 32
        },
        {
          "start": 10053,
          "length": 32
        },
        {
          "start": 10208,
          "length": 32
        },
        {
          "start": 10283,
          "length": 32
        },
        {
          "start": 10659,
          "length": 32
        }
      ],
      "360": [
        {
          "start": 1015,
          "length": 32
        },
        {
          "start": 2317,
          "length": 32
        },
        {
          "start": 2557,
          "length": 32
        },
        {
          "start": 9006,
          "length": 32
        },
        {
          "start": 10166,
          "length": 32
        }
      ],
      "362": [
        {
          "start": 1126,
          "length": 32
        }
      ],
      "368": [
        {
          "start": 897,
          "length": 32
        },
        {
          "start": 2115,
          "length": 32
        },
        {
          "start": 2739,
          "length": 32
        },
        {
          "start": 3270,
          "length": 32
        },
        {
          "start": 4694,
          "length": 32
        },
        {
          "start": 5385,
          "length": 32
        },
        {
          "start": 5612,
          "length": 32
        },
        {
          "start": 6285,
          "length": 32
        },
        {
          "start": 6810,
          "length": 32
        },
        {
          "start": 8162,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "NAME()": "a3f4df7e",
    "SYMBOL()": "f76f8d78",
    "addPool(address)": "d914cd4b",
    "addPools(address[])": "b36a4ab1",
    "adminDeposit(uint256)": "08687794",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "availableToWithdraw(address,uint256)": "66f294cf",
    "balanceOf(address)": "70a08231",
    "borrower()": "7df1f1b9",
    "claimReward()": "b88a802f",
    "concludePendingReward(address)": "9264fd53",
    "concludePendingWithdrawal(address)": "1e0a5967",
    "decimals()": "313ce567",
    "deleteSecondaryLiquidityAsset(address)": "486b3ed3",
    "deposit(uint256)": "b6b55f25",
    "depositDate(address)": "24b92e8e",
    "depositSecondaryAsset(uint256,address)": "c8954760",
    "distributeRewards(uint256,address[])": "1aa59542",
    "drawdown(address,uint256)": "6acab9da",
    "getLL()": "66731639",
    "liquidityAsset()": "209b2bca",
    "liquidityLocker()": "9759164a",
    "name()": "06fdde03",
    "paused()": "5c975abb",
    "pendingRewards(address)": "31d7a262",
    "pendingWithdrawals(address)": "f3f43703",
    "poolInfo()": "5a2f3d09",
    "pools(address)": "a4063dbc",
    "principalOut()": "ac641655",
    "reinvest(uint256)": "83b4918b",
    "removePool(address)": "3b7d0946",
    "requestLiquidityAssets(uint256)": "f48ccb04",
    "rewards(address)": "0700037d",
    "setSecondaryLiquidityAsset(address)": "7050886b",
    "setSecondaryLiquidityAssets(address[])": "74ee1ac4",
    "superFactory()": "0d49b38c",
    "symbol()": "95d89b41",
    "totalDeposited()": "ff50abdc",
    "totalLA()": "42103e8e",
    "totalSupply()": "18160ddd",
    "totalSupplyLA()": "7dfabf49",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "userDeposits(address,uint256)": "08f43333",
    "withdraw(uint256[],uint16[])": "28915483",
    "withdrawLimit()": "f848d541",
    "withdrawPeriod()": "12eb4f9a",
    "withdrawableOf(address)": "fa8c00d4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_llFactory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_lockupPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"BalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PendingReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PendingRewardConcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PendingWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PendingWithdrawalConcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"regPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RegPoolDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Reinvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalOverThreshold\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SYMBOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"}],\"name\":\"addPools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"adminDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"availableToWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrower\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"concludePendingReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"concludePendingWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityAsset\",\"type\":\"address\"}],\"name\":\"deleteSecondaryLiquidityAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_assetAddr\",\"type\":\"address\"}],\"name\":\"depositSecondaryAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_holders\",\"type\":\"address[]\"}],\"name\":\"distributeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"drawdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityLocker\",\"outputs\":[{\"internalType\":\"contract ILiquidityLocker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lockupPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentPoolSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawThreshold\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"principalOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"reinvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"removePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountMissing\",\"type\":\"uint256\"}],\"name\":\"requestLiquidityAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityAsset\",\"type\":\"address\"}],\"name\":\"setSecondaryLiquidityAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_liquidityAssets\",\"type\":\"address[]\"}],\"name\":\"setSecondaryLiquidityAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplyLA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userDeposits\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16[]\",\"name\":\"_indices\",\"type\":\"uint16[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"withdrawableOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"concludePendingReward(address)\":{\"params\":{\"_recipient\":\"address of the recipient who didn't get the reward\"}},\"concludePendingWithdrawal(address)\":{\"params\":{\"_recipient\":\"address of the recipient who didn't get the liquidity\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"depositSecondaryAsset(uint256,address)\":{\"params\":{\"_assetAddr\":\"the address of the stablecoin\"}},\"distributeRewards(uint256,address[])\":{\"params\":{\"_amount\":\"the amount to be divided among investors\",\"_holders\":\"the list of investors must be provided externally due to Solidity limitations\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"reinvest(uint256)\":{\"params\":{\"_amount\":\"the amount of rewards to be converted into LP\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"withdraw(uint256[],uint16[])\":{\"params\":{\"_amounts\":\"the amount of LA to be withdrawn\",\"_indices\":\"the indices of the DepositInstance\"}}},\"title\":\"Blended Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addPool(address)\":{\"notice\":\"Register a new pool to the Blended Pool\"},\"addPools(address[])\":{\"notice\":\"Register new pools in batch to the Blended Pool\"},\"adminDeposit(uint256)\":{\"notice\":\"Deposit LA without minimal threshold or getting LP in return\"},\"availableToWithdraw(address,uint256)\":{\"notice\":\"check how many funds\"},\"claimReward()\":{\"notice\":\"Used to transfer the investor's rewards to him\"},\"concludePendingReward(address)\":{\"notice\":\"Admin function used for unhappy path after reward claiming failure\"},\"concludePendingWithdrawal(address)\":{\"notice\":\"Admin function used for unhappy path after withdrawal failure\"},\"deposit(uint256)\":{\"notice\":\"the caller becomes an investor. For this to work the caller must set the allowance for this pool's address\"},\"depositSecondaryAsset(uint256,address)\":{\"notice\":\"used to deposit secondary liquidity assets (non-USDT)\"},\"distributeRewards(uint256,address[])\":{\"notice\":\"Used to distribute rewards among investors (LP token holders)\"},\"drawdown(address,uint256)\":{\"notice\":\"Use the pool's money for investment\"},\"reinvest(uint256)\":{\"notice\":\"Used to reinvest rewards into more LP tokens\"},\"removePool(address)\":{\"notice\":\"Remove a pool when it's no longer actual\"},\"requestLiquidityAssets(uint256)\":{\"notice\":\"Only called by a RegPool when it doesn't have enough LA\"},\"totalSupplyLA()\":{\"notice\":\"Get the amount of Liquidity Assets in the Blended Pool\"},\"withdraw(uint256[],uint16[])\":{\"notice\":\"withdraws the caller's liquidity assets\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pool/BlendedPool.sol\":\"BlendedPool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/interfaces/IHeliosGlobals.sol\":{\"keccak256\":\"0x84c736ad0406f9c3cd27bc6d88cbf9aeb61cfdf15f90d8be4819758d11517864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0506b42ecf30d4cc65e94933b6a51c2800f3c5725c1a94a7b8de9513d3fceb1b\",\"dweb:/ipfs/QmZCAJLr7e5JP1WtQu6dH4YEkEnbr4t2nhjLNKYnMQ5MJj\"]},\"contracts/interfaces/ILiquidityLocker.sol\":{\"keccak256\":\"0xa3308ae7b23b5771923a8c7b7473b8c417bf75863b9b4bdcaa3cdcbcb18219b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0eac9f166301901c5a2ffc41f1f2025744276b7616dc99f23a0a5eb360f0ff98\",\"dweb:/ipfs/QmTgvM6jzx5jvu36XgUh8r7YPerr13HBvKUFFZ7Hy8hoHh\"]},\"contracts/interfaces/ILiquidityLockerFactory.sol\":{\"keccak256\":\"0x4505a4a98000560dd57d798ed1abe3a803fa9c51a12b21f2fbfe5824f8fa3297\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2fb8becbb110fa1d79295927b48a69a28bbd11c578acc1b85c7faa1c37dd79b\",\"dweb:/ipfs/QmTdFHCeCc3LXkuRqPh6kHuKPtg4MUykgD4YtmH6fDuT8b\"]},\"contracts/interfaces/IPoolFactory.sol\":{\"keccak256\":\"0xea0f981bf6d22c1f7cc921f7b6edbe82caace4896f33e9799218923604f99cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae0786dc73c5991331a3fc030a7b34d5db0125d05d5011d764f4341e6ab276ae\",\"dweb:/ipfs/QmSeH4cNNjUE5PBMDyjXjACXR8dkzrU6gEvpb41559s7gz\"]},\"contracts/interfaces/ISubFactory.sol\":{\"keccak256\":\"0x0d1248426bbd5925e7a68ad2f68eca5783a91c5f7576915089789a73de536bc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b22d4333aff7e4bca69751cf2447d8e295d06ed72286c6ef790294a0144a9e6f\",\"dweb:/ipfs/QmY3zjMhWkuSzesHD5Vw2pP3LiNorUUSwMEGMztextnDag\"]},\"contracts/pool/AbstractPool.sol\":{\"keccak256\":\"0x40c772eff53f0ab2900c88ae7cd3391b87f8f25fe184d9990676e967b1ee88ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44740b0b3195e96ec9e943cde46e1cd86eb330d235df4c5df54f2f40e903ef14\",\"dweb:/ipfs/Qmf3gtotjzt785fE5FjvEY6DAqhisTKcRtY1dYaR3KS5if\"]},\"contracts/pool/BlendedPool.sol\":{\"keccak256\":\"0x797fd89a9528196df71a753f6846ed88810fe6e0defb53cb24a812b6db7754c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af4f5e614168a5e020291a5e1c96de49964a00185be06212ea93eade4176a05a\",\"dweb:/ipfs/QmULkkoANoj8MmW3WfaB4mttFWfyxMgQuvV3fknumdRGxA\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_liquidityAsset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_llFactory",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_lockupPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_apy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minInvestmentAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_withdrawThreshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_withdrawPeriod",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EnforcedPause"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExpectedPause"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "liquidityProvider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BalanceUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "investor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PendingReward",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PendingRewardConcluded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "investor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PendingWithdrawal",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "investor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PendingWithdrawalConcluded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "regPool",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RegPoolDeposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "investor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Reinvest",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RewardClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "investor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Withdrawal",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "WithdrawalOverThreshold",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NAME",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SYMBOL",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pool",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPool"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_pools",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPools"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "adminDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "availableToWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "borrower",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimReward",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "concludePendingReward"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "concludePendingWithdrawal"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_liquidityAsset",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteSecondaryLiquidityAsset"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "depositDate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_assetAddr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositSecondaryAsset"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "_holders",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distributeRewards"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "drawdown"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLL",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidityAsset",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidityLocker",
          "outputs": [
            {
              "internalType": "contract ILiquidityLocker",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingWithdrawals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lockupPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "apy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentPoolSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minInvestmentAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawThreshold",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pools",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "principalOut",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reinvest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pool",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removePool"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amountMissing",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requestLiquidityAssets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_liquidityAsset",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSecondaryLiquidityAsset"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_liquidityAssets",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSecondaryLiquidityAssets"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "superFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalDeposited",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalLA",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupplyLA",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userDeposits",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unlockTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint16[]",
              "name": "_indices",
              "type": "uint16[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_holder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "concludePendingReward(address)": {
            "params": {
              "_recipient": "address of the recipient who didn't get the reward"
            }
          },
          "concludePendingWithdrawal(address)": {
            "params": {
              "_recipient": "address of the recipient who didn't get the liquidity"
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "depositSecondaryAsset(uint256,address)": {
            "params": {
              "_assetAddr": "the address of the stablecoin"
            }
          },
          "distributeRewards(uint256,address[])": {
            "params": {
              "_amount": "the amount to be divided among investors",
              "_holders": "the list of investors must be provided externally due to Solidity limitations"
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "reinvest(uint256)": {
            "params": {
              "_amount": "the amount of rewards to be converted into LP"
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "withdraw(uint256[],uint16[])": {
            "params": {
              "_amounts": "the amount of LA to be withdrawn",
              "_indices": "the indices of the DepositInstance"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addPool(address)": {
            "notice": "Register a new pool to the Blended Pool"
          },
          "addPools(address[])": {
            "notice": "Register new pools in batch to the Blended Pool"
          },
          "adminDeposit(uint256)": {
            "notice": "Deposit LA without minimal threshold or getting LP in return"
          },
          "availableToWithdraw(address,uint256)": {
            "notice": "check how many funds"
          },
          "claimReward()": {
            "notice": "Used to transfer the investor's rewards to him"
          },
          "concludePendingReward(address)": {
            "notice": "Admin function used for unhappy path after reward claiming failure"
          },
          "concludePendingWithdrawal(address)": {
            "notice": "Admin function used for unhappy path after withdrawal failure"
          },
          "deposit(uint256)": {
            "notice": "the caller becomes an investor. For this to work the caller must set the allowance for this pool's address"
          },
          "depositSecondaryAsset(uint256,address)": {
            "notice": "used to deposit secondary liquidity assets (non-USDT)"
          },
          "distributeRewards(uint256,address[])": {
            "notice": "Used to distribute rewards among investors (LP token holders)"
          },
          "drawdown(address,uint256)": {
            "notice": "Use the pool's money for investment"
          },
          "reinvest(uint256)": {
            "notice": "Used to reinvest rewards into more LP tokens"
          },
          "removePool(address)": {
            "notice": "Remove a pool when it's no longer actual"
          },
          "requestLiquidityAssets(uint256)": {
            "notice": "Only called by a RegPool when it doesn't have enough LA"
          },
          "totalSupplyLA()": {
            "notice": "Get the amount of Liquidity Assets in the Blended Pool"
          },
          "withdraw(uint256[],uint16[])": {
            "notice": "withdraws the caller's liquidity assets"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/pool/BlendedPool.sol": "BlendedPool"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IHeliosGlobals.sol": {
        "keccak256": "0x84c736ad0406f9c3cd27bc6d88cbf9aeb61cfdf15f90d8be4819758d11517864",
        "urls": [
          "bzz-raw://0506b42ecf30d4cc65e94933b6a51c2800f3c5725c1a94a7b8de9513d3fceb1b",
          "dweb:/ipfs/QmZCAJLr7e5JP1WtQu6dH4YEkEnbr4t2nhjLNKYnMQ5MJj"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILiquidityLocker.sol": {
        "keccak256": "0xa3308ae7b23b5771923a8c7b7473b8c417bf75863b9b4bdcaa3cdcbcb18219b8",
        "urls": [
          "bzz-raw://0eac9f166301901c5a2ffc41f1f2025744276b7616dc99f23a0a5eb360f0ff98",
          "dweb:/ipfs/QmTgvM6jzx5jvu36XgUh8r7YPerr13HBvKUFFZ7Hy8hoHh"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILiquidityLockerFactory.sol": {
        "keccak256": "0x4505a4a98000560dd57d798ed1abe3a803fa9c51a12b21f2fbfe5824f8fa3297",
        "urls": [
          "bzz-raw://f2fb8becbb110fa1d79295927b48a69a28bbd11c578acc1b85c7faa1c37dd79b",
          "dweb:/ipfs/QmTdFHCeCc3LXkuRqPh6kHuKPtg4MUykgD4YtmH6fDuT8b"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IPoolFactory.sol": {
        "keccak256": "0xea0f981bf6d22c1f7cc921f7b6edbe82caace4896f33e9799218923604f99cc3",
        "urls": [
          "bzz-raw://ae0786dc73c5991331a3fc030a7b34d5db0125d05d5011d764f4341e6ab276ae",
          "dweb:/ipfs/QmSeH4cNNjUE5PBMDyjXjACXR8dkzrU6gEvpb41559s7gz"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ISubFactory.sol": {
        "keccak256": "0x0d1248426bbd5925e7a68ad2f68eca5783a91c5f7576915089789a73de536bc5",
        "urls": [
          "bzz-raw://b22d4333aff7e4bca69751cf2447d8e295d06ed72286c6ef790294a0144a9e6f",
          "dweb:/ipfs/QmY3zjMhWkuSzesHD5Vw2pP3LiNorUUSwMEGMztextnDag"
        ],
        "license": "MIT"
      },
      "contracts/pool/AbstractPool.sol": {
        "keccak256": "0x40c772eff53f0ab2900c88ae7cd3391b87f8f25fe184d9990676e967b1ee88ce",
        "urls": [
          "bzz-raw://44740b0b3195e96ec9e943cde46e1cd86eb330d235df4c5df54f2f40e903ef14",
          "dweb:/ipfs/Qmf3gtotjzt785fE5FjvEY6DAqhisTKcRtY1dYaR3KS5if"
        ],
        "license": "MIT"
      },
      "contracts/pool/BlendedPool.sol": {
        "keccak256": "0x797fd89a9528196df71a753f6846ed88810fe6e0defb53cb24a812b6db7754c2",
        "urls": [
          "bzz-raw://af4f5e614168a5e020291a5e1c96de49964a00185be06212ea93eade4176a05a",
          "dweb:/ipfs/QmULkkoANoj8MmW3WfaB4mttFWfyxMgQuvV3fknumdRGxA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Pausable.sol": {
        "keccak256": "0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd",
        "urls": [
          "bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc",
          "dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
        "keccak256": "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236",
        "urls": [
          "bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02",
          "dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe",
        "urls": [
          "bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c",
          "dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/pool/BlendedPool.sol",
    "id": 1765,
    "exportedSymbols": {
      "AbstractPool": [
        1248
      ],
      "BlendedPool": [
        1764
      ],
      "IERC20": [
        52613
      ],
      "IHeliosGlobals": [
        235
      ],
      "ILiquidityLocker": [
        283
      ],
      "ILiquidityLockerFactory": [
        297
      ],
      "IPoolFactory": [
        308
      ],
      "Math": [
        54524
      ],
      "SafeCast": [
        56279
      ],
      "SafeERC20": [
        52965
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5888:7",
    "nodes": [
      {
        "id": 1250,
        "nodeType": "PragmaDirective",
        "src": "32:23:7",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 1252,
        "nodeType": "ImportDirective",
        "src": "57:82:7",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1765,
        "sourceUnit": 52966,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1251,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52965,
              "src": "65:9:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1254,
        "nodeType": "ImportDirective",
        "src": "140:73:7",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeCast.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1765,
        "sourceUnit": 56280,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1253,
              "name": "SafeCast",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56279,
              "src": "148:8:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1256,
        "nodeType": "ImportDirective",
        "src": "214:65:7",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1765,
        "sourceUnit": 54525,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1255,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54524,
              "src": "222:4:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1258,
        "nodeType": "ImportDirective",
        "src": "280:70:7",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1765,
        "sourceUnit": 52614,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1257,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52613,
              "src": "288:6:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1260,
        "nodeType": "ImportDirective",
        "src": "352:64:7",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IHeliosGlobals.sol",
        "file": "../interfaces/IHeliosGlobals.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1765,
        "sourceUnit": 236,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1259,
              "name": "IHeliosGlobals",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 235,
              "src": "360:14:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1262,
        "nodeType": "ImportDirective",
        "src": "417:60:7",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IPoolFactory.sol",
        "file": "../interfaces/IPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1765,
        "sourceUnit": 309,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1261,
              "name": "IPoolFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 308,
              "src": "425:12:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1264,
        "nodeType": "ImportDirective",
        "src": "478:48:7",
        "nodes": [],
        "absolutePath": "contracts/pool/AbstractPool.sol",
        "file": "./AbstractPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1765,
        "sourceUnit": 1249,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1263,
              "name": "AbstractPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1248,
              "src": "486:12:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1266,
        "nodeType": "ImportDirective",
        "src": "527:68:7",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ILiquidityLocker.sol",
        "file": "../interfaces/ILiquidityLocker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1765,
        "sourceUnit": 284,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1265,
              "name": "ILiquidityLocker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 283,
              "src": "535:16:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1268,
        "nodeType": "ImportDirective",
        "src": "596:82:7",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ILiquidityLockerFactory.sol",
        "file": "../interfaces/ILiquidityLockerFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1765,
        "sourceUnit": 298,
        "symbolAliases": [
          {
            "foreign": {
              "id": 1267,
              "name": "ILiquidityLockerFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 297,
              "src": "604:23:7",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 1764,
        "nodeType": "ContractDefinition",
        "src": "704:5215:7",
        "nodes": [
          {
            "id": 1275,
            "nodeType": "UsingForDirective",
            "src": "747:27:7",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 1272,
              "name": "SafeERC20",
              "nameLocations": [
                "753:9:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52965,
              "src": "753:9:7"
            },
            "typeName": {
              "id": 1274,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1273,
                "name": "IERC20",
                "nameLocations": [
                  "767:6:7"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52613,
                "src": "767:6:7"
              },
              "referencedDeclaration": 52613,
              "src": "767:6:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$52613",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 1277,
            "nodeType": "VariableDeclaration",
            "src": "780:23:7",
            "nodes": [],
            "constant": false,
            "functionSelector": "7df1f1b9",
            "mutability": "mutable",
            "name": "borrower",
            "nameLocation": "795:8:7",
            "scope": 1764,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1276,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "780:7:7",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1281,
            "nodeType": "VariableDeclaration",
            "src": "847:37:7",
            "nodes": [],
            "constant": false,
            "functionSelector": "a4063dbc",
            "mutability": "mutable",
            "name": "pools",
            "nameLocation": "879:5:7",
            "scope": 1764,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1280,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 1278,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "855:7:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "847:24:7",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 1279,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "866:4:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 1287,
            "nodeType": "EventDefinition",
            "src": "891:62:7",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "babc2955520063ac5330d7fe65a85c54fce0d2c473be76d99e29fb7146ac96a0",
            "name": "RegPoolDeposit",
            "nameLocation": "897:14:7",
            "parameters": {
              "id": 1286,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1283,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "regPool",
                  "nameLocation": "928:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "912:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1282,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "912:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1285,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "945:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1287,
                  "src": "937:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1284,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "937:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "911:41:7"
            }
          },
          {
            "id": 1370,
            "nodeType": "FunctionDefinition",
            "src": "959:844:7",
            "nodes": [],
            "body": {
              "id": 1369,
              "nodeType": "Block",
              "src": "1318:485:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1315,
                          "name": "_liquidityAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1289,
                          "src": "1336:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1363:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1355:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1316,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1355:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1355:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1336:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42503a5a45524f5f4c49515f4153534554",
                        "id": 1321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1367:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a9de8df0284a39024252bc2c804da1a28624e403a817ea2be8855e4f7e18320",
                          "typeString": "literal_string \"BP:ZERO_LIQ_ASSET\""
                        },
                        "value": "BP:ZERO_LIQ_ASSET"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a9de8df0284a39024252bc2c804da1a28624e403a817ea2be8855e4f7e18320",
                          "typeString": "literal_string \"BP:ZERO_LIQ_ASSET\""
                        }
                      ],
                      "id": 1314,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1328:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1328:59:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1323,
                  "nodeType": "ExpressionStatement",
                  "src": "1328:59:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1325,
                          "name": "_llFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1291,
                          "src": "1405:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1427:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1327,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1419:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1326,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1419:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1419:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1405:24:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42503a5a45524f5f4c49515f4c4f434b45525f464143544f5259",
                        "id": 1331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1431:28:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bbcc8d0452085ac7903a9e70540c8a9f5ddb27dec25521540f2ec1eb2472b01a",
                          "typeString": "literal_string \"BP:ZERO_LIQ_LOCKER_FACTORY\""
                        },
                        "value": "BP:ZERO_LIQ_LOCKER_FACTORY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bbcc8d0452085ac7903a9e70540c8a9f5ddb27dec25521540f2ec1eb2472b01a",
                          "typeString": "literal_string \"BP:ZERO_LIQ_LOCKER_FACTORY\""
                        }
                      ],
                      "id": 1324,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1397:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1397:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1333,
                  "nodeType": "ExpressionStatement",
                  "src": "1397:63:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1339,
                            "name": "_liquidityAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1289,
                            "src": "1524:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1336,
                                "name": "superFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 368,
                                "src": "1488:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1335,
                              "name": "_globals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                1751
                              ],
                              "referencedDeclaration": 1751,
                              "src": "1479:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IHeliosGlobals_$235_$",
                                "typeString": "function (address) view returns (contract IHeliosGlobals)"
                              }
                            },
                            "id": 1337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1479:22:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHeliosGlobals_$235",
                              "typeString": "contract IHeliosGlobals"
                            }
                          },
                          "id": 1338,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1502:21:7",
                          "memberName": "isValidLiquidityAsset",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 227,
                          "src": "1479:44:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 1340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1479:61:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42503a494e56414c49445f4c49515f4153534554",
                        "id": 1341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1542:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96be11119f980b11bb484224e401820a41f55ae094b39f7eeb297de8a185914a",
                          "typeString": "literal_string \"BP:INVALID_LIQ_ASSET\""
                        },
                        "value": "BP:INVALID_LIQ_ASSET"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96be11119f980b11bb484224e401820a41f55ae094b39f7eeb297de8a185914a",
                          "typeString": "literal_string \"BP:INVALID_LIQ_ASSET\""
                        }
                      ],
                      "id": 1334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1471:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1471:94:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1343,
                  "nodeType": "ExpressionStatement",
                  "src": "1471:94:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1349,
                            "name": "_llFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1291,
                            "src": "1636:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1346,
                                "name": "superFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 368,
                                "src": "1592:12:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1345,
                              "name": "_globals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                1751
                              ],
                              "referencedDeclaration": 1751,
                              "src": "1583:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IHeliosGlobals_$235_$",
                                "typeString": "function (address) view returns (contract IHeliosGlobals)"
                              }
                            },
                            "id": 1347,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1583:22:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHeliosGlobals_$235",
                              "typeString": "contract IHeliosGlobals"
                            }
                          },
                          "id": 1348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1606:29:7",
                          "memberName": "isValidLiquidityLockerFactory",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 234,
                          "src": "1583:52:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 1350,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1583:64:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42503a494e56414c49445f4c4c5f464143544f5259",
                        "id": 1351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1649:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9551495642c8b1209a1b79993bc212d009d9cc1b1b754062cb06d653fcc54dd3",
                          "typeString": "literal_string \"BP:INVALID_LL_FACTORY\""
                        },
                        "value": "BP:INVALID_LL_FACTORY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9551495642c8b1209a1b79993bc212d009d9cc1b1b754062cb06d653fcc54dd3",
                          "typeString": "literal_string \"BP:INVALID_LL_FACTORY\""
                        }
                      ],
                      "id": 1344,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1575:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1575:98:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1353,
                  "nodeType": "ExpressionStatement",
                  "src": "1575:98:7"
                },
                {
                  "expression": {
                    "id": 1367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1354,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "1684:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$469_storage",
                        "typeString": "struct AbstractPool.PoolInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1356,
                          "name": "_lockupPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1293,
                          "src": "1704:13:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1357,
                          "name": "_apy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1295,
                          "src": "1719:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1358,
                          "name": "_duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1297,
                          "src": "1725:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1361,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1741:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1360,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1741:7:7",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 1359,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1736:4:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1362,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1736:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 1363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1750:3:7",
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "1736:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1364,
                          "name": "_minInvestmentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1299,
                          "src": "1755:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1365,
                          "name": "_withdrawThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1301,
                          "src": "1777:18:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1355,
                        "name": "PoolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "1695:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_PoolInfo_$469_storage_ptr_$",
                          "typeString": "type(struct AbstractPool.PoolInfo storage pointer)"
                        }
                      },
                      "id": 1366,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1695:101:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$469_memory_ptr",
                        "typeString": "struct AbstractPool.PoolInfo memory"
                      }
                    },
                    "src": "1684:112:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$469_storage",
                      "typeString": "struct AbstractPool.PoolInfo storage ref"
                    }
                  },
                  "id": 1368,
                  "nodeType": "ExpressionStatement",
                  "src": "1684:112:7"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1306,
                    "name": "_liquidityAsset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1289,
                    "src": "1238:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 1307,
                    "name": "_llFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1291,
                    "src": "1255:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 1308,
                    "name": "NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 347,
                    "src": "1267:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1309,
                    "name": "SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 350,
                    "src": "1273:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1310,
                    "name": "_withdrawThreshold",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1301,
                    "src": "1281:18:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 1311,
                    "name": "_withdrawPeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1303,
                    "src": "1301:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1312,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1305,
                  "name": "AbstractPool",
                  "nameLocations": [
                    "1225:12:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1248,
                  "src": "1225:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1225:92:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1304,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1289,
                  "mutability": "mutable",
                  "name": "_liquidityAsset",
                  "nameLocation": "988:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "980:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "980:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1291,
                  "mutability": "mutable",
                  "name": "_llFactory",
                  "nameLocation": "1021:10:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "1013:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1013:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1293,
                  "mutability": "mutable",
                  "name": "_lockupPeriod",
                  "nameLocation": "1049:13:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "1041:21:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1292,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1041:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1295,
                  "mutability": "mutable",
                  "name": "_apy",
                  "nameLocation": "1080:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "1072:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1294,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1297,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "1102:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "1094:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1296,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1094:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1299,
                  "mutability": "mutable",
                  "name": "_minInvestmentAmount",
                  "nameLocation": "1129:20:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "1121:28:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1121:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1301,
                  "mutability": "mutable",
                  "name": "_withdrawThreshold",
                  "nameLocation": "1167:18:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "1159:26:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1159:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1303,
                  "mutability": "mutable",
                  "name": "_withdrawPeriod",
                  "nameLocation": "1203:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1370,
                  "src": "1195:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1302,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1195:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "970:254:7"
            },
            "returnParameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1318:0:7"
            },
            "scope": 1764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1441,
            "nodeType": "FunctionDefinition",
            "src": "2055:513:7",
            "nodes": [],
            "body": {
              "id": 1440,
              "nodeType": "Block",
              "src": "2169:399:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1385,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1373,
                          "src": "2187:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2197:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2187:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42503a494e56414c49445f56414c5545",
                        "id": 1388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2200:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef3de7440d228c19b1d903ae21ebe0ed3b0b223936529fb378d437d72802ba66",
                          "typeString": "literal_string \"BP:INVALID_VALUE\""
                        },
                        "value": "BP:INVALID_VALUE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef3de7440d228c19b1d903ae21ebe0ed3b0b223936529fb378d437d72802ba66",
                          "typeString": "literal_string \"BP:INVALID_VALUE\""
                        }
                      ],
                      "id": 1384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2179:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2179:40:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1390,
                  "nodeType": "ExpressionStatement",
                  "src": "2179:40:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1392,
                            "name": "_holders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1376,
                            "src": "2237:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 1393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2246:6:7",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2237:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2255:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2237:19:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42503a5a45524f5f484f4c44455253",
                        "id": 1396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2258:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8524a9f2cc6aefa7bd8b31622bf8199771b66e08662b3cbf852a10e073533c2e",
                          "typeString": "literal_string \"BP:ZERO_HOLDERS\""
                        },
                        "value": "BP:ZERO_HOLDERS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8524a9f2cc6aefa7bd8b31622bf8199771b66e08662b3cbf852a10e073533c2e",
                          "typeString": "literal_string \"BP:ZERO_HOLDERS\""
                        }
                      ],
                      "id": 1391,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2229:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2229:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1398,
                  "nodeType": "ExpressionStatement",
                  "src": "2229:47:7"
                },
                {
                  "body": {
                    "id": 1438,
                    "nodeType": "Block",
                    "src": "2332:230:7",
                    "statements": [
                      {
                        "assignments": [
                          1411
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1411,
                            "mutability": "mutable",
                            "name": "holder",
                            "nameLocation": "2354:6:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1438,
                            "src": "2346:14:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1410,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2346:7:7",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1415,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1412,
                            "name": "_holders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1376,
                            "src": "2363:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 1414,
                          "indexExpression": {
                            "id": 1413,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1400,
                            "src": "2372:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2363:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2346:28:7"
                      },
                      {
                        "assignments": [
                          1417
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1417,
                            "mutability": "mutable",
                            "name": "holderBalance",
                            "nameLocation": "2397:13:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1438,
                            "src": "2389:21:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1416,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2389:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1421,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1419,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1411,
                              "src": "2423:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1418,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52121,
                            "src": "2413:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 1420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2413:17:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2389:41:7"
                      },
                      {
                        "assignments": [
                          1423
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1423,
                            "mutability": "mutable",
                            "name": "holderShare",
                            "nameLocation": "2452:11:7",
                            "nodeType": "VariableDeclaration",
                            "scope": 1438,
                            "src": "2444:19:7",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1422,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2444:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1431,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1424,
                                  "name": "_amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1373,
                                  "src": "2467:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1425,
                                  "name": "holderBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1417,
                                  "src": "2477:13:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2467:23:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1427,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2466:25:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1428,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 52108,
                              "src": "2494:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2494:13:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2466:41:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2444:63:7"
                      },
                      {
                        "expression": {
                          "id": 1436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1432,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "2521:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1434,
                            "indexExpression": {
                              "id": 1433,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1411,
                              "src": "2529:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2521:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1435,
                            "name": "holderShare",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1423,
                            "src": "2540:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2521:30:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1437,
                        "nodeType": "ExpressionStatement",
                        "src": "2521:30:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1403,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1400,
                      "src": "2306:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1404,
                        "name": "_holders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1376,
                        "src": "2310:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 1405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2319:6:7",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2310:15:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2306:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1439,
                  "initializationExpression": {
                    "assignments": [
                      1400
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1400,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2299:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1439,
                        "src": "2291:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1399,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2291:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1402,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2303:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2291:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1408,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2327:3:7",
                      "subExpression": {
                        "id": 1407,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1400,
                        "src": "2327:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1409,
                    "nodeType": "ExpressionStatement",
                    "src": "2327:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "2286:276:7"
                }
              ]
            },
            "baseFunctions": [
              980
            ],
            "documentation": {
              "id": 1371,
              "nodeType": "StructuredDocumentation",
              "src": "1809:241:7",
              "text": "@notice Used to distribute rewards among investors (LP token holders)\n @param  _amount the amount to be divided among investors\n @param  _holders the list of investors must be provided externally due to Solidity limitations"
            },
            "functionSelector": "1aa59542",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1380,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1379,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "2146:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1247,
                  "src": "2146:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2146:9:7"
              },
              {
                "id": 1382,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1381,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "2156:12:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53398,
                  "src": "2156:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "2156:12:7"
              }
            ],
            "name": "distributeRewards",
            "nameLocation": "2064:17:7",
            "overrides": {
              "id": 1378,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2137:8:7"
            },
            "parameters": {
              "id": 1377,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1373,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2090:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "2082:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1372,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2082:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1376,
                  "mutability": "mutable",
                  "name": "_holders",
                  "nameLocation": "2118:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1441,
                  "src": "2099:27:7",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1374,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "2099:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1375,
                    "nodeType": "ArrayTypeName",
                    "src": "2099:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2081:46:7"
            },
            "returnParameters": {
              "id": 1383,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2169:0:7"
            },
            "scope": 1764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1477,
            "nodeType": "FunctionDefinition",
            "src": "2574:285:7",
            "nodes": [],
            "body": {
              "id": 1476,
              "nodeType": "Block",
              "src": "2647:212:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1454,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1449,
                              "name": "depositDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "2665:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1451,
                            "indexExpression": {
                              "id": 1450,
                              "name": "_holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1443,
                              "src": "2677:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2665:20:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 1452,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "2688:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$469_storage",
                                "typeString": "struct AbstractPool.PoolInfo storage ref"
                              }
                            },
                            "id": 1453,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2697:12:7",
                            "memberName": "lockupPeriod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 458,
                            "src": "2688:21:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2665:44:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 1455,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "2713:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2719:9:7",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "2713:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2665:63:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42503a46554e44535f4c4f434b4544",
                        "id": 1458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2730:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70ca54f2e0691bba7b33c5cdbfcb4b99d5e2979706fae1d9838e9638d051d822",
                          "typeString": "literal_string \"BP:FUNDS_LOCKED\""
                        },
                        "value": "BP:FUNDS_LOCKED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70ca54f2e0691bba7b33c5cdbfcb4b99d5e2979706fae1d9838e9638d051d822",
                          "typeString": "literal_string \"BP:FUNDS_LOCKED\""
                        }
                      ],
                      "id": 1448,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2657:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2657:91:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1460,
                  "nodeType": "ExpressionStatement",
                  "src": "2657:91:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1467,
                                "name": "liquidityLocker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 357,
                                "src": "2808:15:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                                  "typeString": "contract ILiquidityLocker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                                  "typeString": "contract ILiquidityLocker"
                                }
                              ],
                              "id": 1466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2800:7:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1465,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2800:7:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2800:24:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1463,
                            "name": "liquidityAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 360,
                            "src": "2775:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$52613",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2790:9:7",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52570,
                          "src": "2775:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2775:50:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1472,
                            "name": "_holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1443,
                            "src": "2843:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1470,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "2827:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_BlendedPool_$1764_$",
                              "typeString": "type(contract super BlendedPool)"
                            }
                          },
                          "id": 1471,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2833:9:7",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52121,
                          "src": "2827:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 1473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2827:24:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1461,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54524,
                        "src": "2766:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$54524_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 1462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2771:3:7",
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53675,
                      "src": "2766:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2766:86:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1447,
                  "id": 1475,
                  "nodeType": "Return",
                  "src": "2759:93:7"
                }
              ]
            },
            "functionSelector": "fa8c00d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawableOf",
            "nameLocation": "2583:14:7",
            "parameters": {
              "id": 1444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1443,
                  "mutability": "mutable",
                  "name": "_holder",
                  "nameLocation": "2606:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1477,
                  "src": "2598:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1442,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2598:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2597:17:7"
            },
            "returnParameters": {
              "id": 1447,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1446,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1477,
                  "src": "2638:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1445,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2638:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2637:9:7"
            },
            "scope": 1764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1487,
            "nodeType": "FunctionDefinition",
            "src": "2865:105:7",
            "nodes": [],
            "body": {
              "id": 1486,
              "nodeType": "Block",
              "src": "2916:54:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1482,
                        "name": "liquidityLocker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "2933:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                          "typeString": "contract ILiquidityLocker"
                        }
                      },
                      "id": 1483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2949:12:7",
                      "memberName": "totalBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 253,
                      "src": "2933:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2933:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1481,
                  "id": 1485,
                  "nodeType": "Return",
                  "src": "2926:37:7"
                }
              ]
            },
            "functionSelector": "42103e8e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalLA",
            "nameLocation": "2874:7:7",
            "parameters": {
              "id": 1478,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2881:2:7"
            },
            "returnParameters": {
              "id": 1481,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1480,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1487,
                  "src": "2907:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1479,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2907:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2906:9:7"
            },
            "scope": 1764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1495,
            "nodeType": "FunctionDefinition",
            "src": "2976:93:7",
            "nodes": [],
            "body": {
              "id": 1494,
              "nodeType": "Block",
              "src": "3034:35:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1492,
                    "name": "totalMinted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 364,
                    "src": "3051:11:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1491,
                  "id": 1493,
                  "nodeType": "Return",
                  "src": "3044:18:7"
                }
              ]
            },
            "functionSelector": "ff50abdc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDeposited",
            "nameLocation": "2985:14:7",
            "parameters": {
              "id": 1488,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2999:2:7"
            },
            "returnParameters": {
              "id": 1491,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1490,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1495,
                  "src": "3025:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1489,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3025:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3024:9:7"
            },
            "scope": 1764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1507,
            "nodeType": "FunctionDefinition",
            "src": "3075:110:7",
            "nodes": [],
            "body": {
              "id": 1506,
              "nodeType": "Block",
              "src": "3132:53:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1503,
                        "name": "liquidityAssetDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3155:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3149:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 1501,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3149:5:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3149:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 1500,
                  "id": 1505,
                  "nodeType": "Return",
                  "src": "3142:36:7"
                }
              ]
            },
            "baseFunctions": [
              52099
            ],
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3084:8:7",
            "overrides": {
              "id": 1497,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3107:8:7"
            },
            "parameters": {
              "id": 1496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3092:2:7"
            },
            "returnParameters": {
              "id": 1500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1499,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1507,
                  "src": "3125:5:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1498,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3125:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3124:7:7"
            },
            "scope": 1764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1572,
            "nodeType": "FunctionDefinition",
            "src": "3254:594:7",
            "nodes": [],
            "body": {
              "id": 1571,
              "nodeType": "Block",
              "src": "3310:538:7",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1515
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1515,
                      "mutability": "mutable",
                      "name": "callerRewards",
                      "nameLocation": "3328:13:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1571,
                      "src": "3320:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1514,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3320:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1520,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1516,
                      "name": "rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "3344:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1519,
                    "indexExpression": {
                      "expression": {
                        "id": 1517,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3352:3:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3356:6:7",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3352:10:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3344:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3320:43:7"
                },
                {
                  "assignments": [
                    1522
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1522,
                      "mutability": "mutable",
                      "name": "totalBalance",
                      "nameLocation": "3381:12:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1571,
                      "src": "3373:20:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1521,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3373:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1526,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1523,
                        "name": "liquidityLocker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "3396:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                          "typeString": "contract ILiquidityLocker"
                        }
                      },
                      "id": 1524,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3412:12:7",
                      "memberName": "totalBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 253,
                      "src": "3396:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3396:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3373:53:7"
                },
                {
                  "expression": {
                    "id": 1532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1527,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "3436:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1530,
                      "indexExpression": {
                        "expression": {
                          "id": 1528,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3444:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3448:6:7",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3444:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3436:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3458:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3436:23:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1533,
                  "nodeType": "ExpressionStatement",
                  "src": "3436:23:7"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1534,
                      "name": "totalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1522,
                      "src": "3474:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1535,
                      "name": "callerRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1515,
                      "src": "3489:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3474:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1553,
                  "nodeType": "IfStatement",
                  "src": "3470:187:7",
                  "trueBody": {
                    "id": 1552,
                    "nodeType": "Block",
                    "src": "3504:153:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1537,
                              "name": "pendingRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 380,
                              "src": "3518:14:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1540,
                            "indexExpression": {
                              "expression": {
                                "id": 1538,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3533:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1539,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3537:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3533:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3518:26:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1541,
                            "name": "callerRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1515,
                            "src": "3548:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3518:43:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1543,
                        "nodeType": "ExpressionStatement",
                        "src": "3518:43:7"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1545,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "3594:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3598:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3594:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1547,
                              "name": "callerRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1515,
                              "src": "3606:13:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1544,
                            "name": "PendingReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 436,
                            "src": "3580:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3580:40:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1549,
                        "nodeType": "EmitStatement",
                        "src": "3575:45:7"
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 1550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3641:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1513,
                        "id": 1551,
                        "nodeType": "Return",
                        "src": "3634:12:7"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1556,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3705:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1557,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3709:6:7",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3705:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1558,
                            "name": "callerRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1515,
                            "src": "3717:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1555,
                          "name": "_transferLiquidityLockerFunds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "3675:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 1559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3675:56:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42503a4552524f525f5452414e5346455252494e475f524557415244",
                        "id": 1560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3733:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57e1f67c0618890630ef5c7e0f76ccf6bf181d547ec358ce18d9ec1d167e73a7",
                          "typeString": "literal_string \"BP:ERROR_TRANSFERRING_REWARD\""
                        },
                        "value": "BP:ERROR_TRANSFERRING_REWARD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57e1f67c0618890630ef5c7e0f76ccf6bf181d547ec358ce18d9ec1d167e73a7",
                          "typeString": "literal_string \"BP:ERROR_TRANSFERRING_REWARD\""
                        }
                      ],
                      "id": 1554,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3667:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3667:97:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1562,
                  "nodeType": "ExpressionStatement",
                  "src": "3667:97:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1564,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3794:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1565,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3798:6:7",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3794:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1566,
                        "name": "callerRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1515,
                        "src": "3806:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1563,
                      "name": "RewardClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 424,
                      "src": "3780:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3780:40:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1568,
                  "nodeType": "EmitStatement",
                  "src": "3775:45:7"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3837:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1513,
                  "id": 1570,
                  "nodeType": "Return",
                  "src": "3830:11:7"
                }
              ]
            },
            "baseFunctions": [
              1178
            ],
            "documentation": {
              "id": 1508,
              "nodeType": "StructuredDocumentation",
              "src": "3191:58:7",
              "text": "@notice Used to transfer the investor's rewards to him"
            },
            "functionSelector": "b88a802f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimReward",
            "nameLocation": "3263:11:7",
            "overrides": {
              "id": 1510,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3286:8:7"
            },
            "parameters": {
              "id": 1509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3274:2:7"
            },
            "returnParameters": {
              "id": 1513,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1512,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1572,
                  "src": "3304:4:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1511,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3304:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3303:6:7"
            },
            "scope": 1764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1619,
            "nodeType": "FunctionDefinition",
            "src": "3926:429:7",
            "nodes": [],
            "body": {
              "id": 1618,
              "nodeType": "Block",
              "src": "4000:355:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1581,
                          "name": "_amountMissing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1575,
                          "src": "4018:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4035:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4018:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42503a494e56414c49445f494e505554",
                        "id": 1584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4038:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77c1ae2073e10544b161ba55e32b808c6e6525ea79c30f779d24a43c92168284",
                          "typeString": "literal_string \"BP:INVALID_INPUT\""
                        },
                        "value": "BP:INVALID_INPUT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77c1ae2073e10544b161ba55e32b808c6e6525ea79c30f779d24a43c92168284",
                          "typeString": "literal_string \"BP:INVALID_INPUT\""
                        }
                      ],
                      "id": 1580,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4010:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4010:47:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1586,
                  "nodeType": "ExpressionStatement",
                  "src": "4010:47:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1588,
                            "name": "totalSupplyLA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1630,
                            "src": "4075:13:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4075:15:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1590,
                          "name": "_amountMissing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1575,
                          "src": "4094:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4075:33:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42503a4e4f545f454e4f5547485f4c415f4250",
                        "id": 1592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4110:21:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fcd2ebd0521e8a374c161bcc7d89efa9eea6e0692f6f6934fe92b561ccc59c8b",
                          "typeString": "literal_string \"BP:NOT_ENOUGH_LA_BP\""
                        },
                        "value": "BP:NOT_ENOUGH_LA_BP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fcd2ebd0521e8a374c161bcc7d89efa9eea6e0692f6f6934fe92b561ccc59c8b",
                          "typeString": "literal_string \"BP:NOT_ENOUGH_LA_BP\""
                        }
                      ],
                      "id": 1587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4067:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4067:65:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1594,
                  "nodeType": "ExpressionStatement",
                  "src": "4067:65:7"
                },
                {
                  "assignments": [
                    1596
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1596,
                      "mutability": "mutable",
                      "name": "poolLL",
                      "nameLocation": "4150:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1618,
                      "src": "4142:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1595,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4142:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1603,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1598,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4172:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1599,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4176:6:7",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4172:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1597,
                          "name": "AbstractPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1248,
                          "src": "4159:12:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AbstractPool_$1248_$",
                            "typeString": "type(contract AbstractPool)"
                          }
                        },
                        "id": 1600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4159:24:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AbstractPool_$1248",
                          "typeString": "contract AbstractPool"
                        }
                      },
                      "id": 1601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4184:5:7",
                      "memberName": "getLL",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1173,
                      "src": "4159:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 1602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4159:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4142:49:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1606,
                            "name": "poolLL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1596,
                            "src": "4239:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1607,
                            "name": "_amountMissing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1575,
                            "src": "4247:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1605,
                          "name": "_transferLiquidityLockerFunds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "4209:29:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 1608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4209:53:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42503a524551554553545f46524f4d5f42505f4641494c",
                        "id": 1609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4264:25:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a212b009efb3d87bb5d2287273939a9a6503b79c6a1000bce522fcd9e738a67d",
                          "typeString": "literal_string \"BP:REQUEST_FROM_BP_FAIL\""
                        },
                        "value": "BP:REQUEST_FROM_BP_FAIL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a212b009efb3d87bb5d2287273939a9a6503b79c6a1000bce522fcd9e738a67d",
                          "typeString": "literal_string \"BP:REQUEST_FROM_BP_FAIL\""
                        }
                      ],
                      "id": 1604,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4201:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4201:89:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1611,
                  "nodeType": "ExpressionStatement",
                  "src": "4201:89:7"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1613,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4321:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4325:6:7",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4321:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1615,
                        "name": "_amountMissing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1575,
                        "src": "4333:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1612,
                      "name": "RegPoolDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1287,
                      "src": "4306:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4306:42:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1617,
                  "nodeType": "EmitStatement",
                  "src": "4301:47:7"
                }
              ]
            },
            "documentation": {
              "id": 1573,
              "nodeType": "StructuredDocumentation",
              "src": "3854:67:7",
              "text": "@notice Only called by a RegPool when it doesn't have enough LA"
            },
            "functionSelector": "f48ccb04",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1578,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1577,
                  "name": "onlyPool",
                  "nameLocations": [
                    "3991:8:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1763,
                  "src": "3991:8:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "3991:8:7"
              }
            ],
            "name": "requestLiquidityAssets",
            "nameLocation": "3935:22:7",
            "parameters": {
              "id": 1576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1575,
                  "mutability": "mutable",
                  "name": "_amountMissing",
                  "nameLocation": "3966:14:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1619,
                  "src": "3958:22:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3958:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3957:24:7"
            },
            "returnParameters": {
              "id": 1579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4000:0:7"
            },
            "scope": 1764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1630,
            "nodeType": "FunctionDefinition",
            "src": "4432:109:7",
            "nodes": [],
            "body": {
              "id": 1629,
              "nodeType": "Block",
              "src": "4487:54:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1625,
                        "name": "liquidityLocker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "4504:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                          "typeString": "contract ILiquidityLocker"
                        }
                      },
                      "id": 1626,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4520:12:7",
                      "memberName": "totalBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 253,
                      "src": "4504:28:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4504:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1624,
                  "id": 1628,
                  "nodeType": "Return",
                  "src": "4497:37:7"
                }
              ]
            },
            "documentation": {
              "id": 1620,
              "nodeType": "StructuredDocumentation",
              "src": "4361:66:7",
              "text": "@notice Get the amount of Liquidity Assets in the Blended Pool"
            },
            "functionSelector": "7dfabf49",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupplyLA",
            "nameLocation": "4441:13:7",
            "parameters": {
              "id": 1621,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4454:2:7"
            },
            "returnParameters": {
              "id": 1624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1623,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1630,
                  "src": "4478:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1622,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4478:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4477:9:7"
            },
            "scope": 1764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1662,
            "nodeType": "FunctionDefinition",
            "src": "4670:267:7",
            "nodes": [],
            "body": {
              "id": 1661,
              "nodeType": "Block",
              "src": "4749:188:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1642,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1633,
                          "src": "4767:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 1643,
                            "name": "poolInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 480,
                            "src": "4778:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PoolInfo_$469_storage",
                              "typeString": "struct AbstractPool.PoolInfo storage ref"
                            }
                          },
                          "id": 1644,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4787:19:7",
                          "memberName": "minInvestmentAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 466,
                          "src": "4778:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4767:39:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42503a4445505f414d545f42454c4f575f4d494e",
                        "id": 1646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4808:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ac1021c7463491af0a9d6dafd57113d19a383be95e86028392acd5f227ae996c",
                          "typeString": "literal_string \"BP:DEP_AMT_BELOW_MIN\""
                        },
                        "value": "BP:DEP_AMT_BELOW_MIN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ac1021c7463491af0a9d6dafd57113d19a383be95e86028392acd5f227ae996c",
                          "typeString": "literal_string \"BP:DEP_AMT_BELOW_MIN\""
                        }
                      ],
                      "id": 1641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4759:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4759:72:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1648,
                  "nodeType": "ExpressionStatement",
                  "src": "4759:72:7"
                },
                {
                  "assignments": [
                    1651
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1651,
                      "mutability": "mutable",
                      "name": "mainLA",
                      "nameLocation": "4849:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1661,
                      "src": "4842:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$52613",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 1650,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1649,
                          "name": "IERC20",
                          "nameLocations": [
                            "4842:6:7"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52613,
                          "src": "4842:6:7"
                        },
                        "referencedDeclaration": 52613,
                        "src": "4842:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$52613",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1655,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1652,
                        "name": "liquidityLocker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "4858:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                          "typeString": "contract ILiquidityLocker"
                        }
                      },
                      "id": 1653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4874:14:7",
                      "memberName": "liquidityAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 259,
                      "src": "4858:30:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$52613_$",
                        "typeString": "function () view external returns (contract IERC20)"
                      }
                    },
                    "id": 1654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4858:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$52613",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4842:48:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1657,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1633,
                        "src": "4914:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1658,
                        "name": "mainLA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1651,
                        "src": "4923:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$52613",
                          "typeString": "contract IERC20"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$52613",
                          "typeString": "contract IERC20"
                        }
                      ],
                      "id": 1656,
                      "name": "depositLogic",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 687,
                      "src": "4901:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_contract$_IERC20_$52613_$returns$__$",
                        "typeString": "function (uint256,contract IERC20)"
                      }
                    },
                    "id": 1659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4901:29:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1660,
                  "nodeType": "ExpressionStatement",
                  "src": "4901:29:7"
                }
              ]
            },
            "baseFunctions": [
              580
            ],
            "documentation": {
              "id": 1631,
              "nodeType": "StructuredDocumentation",
              "src": "4547:118:7",
              "text": "@notice the caller becomes an investor. For this to work the caller must set the allowance for this pool's address"
            },
            "functionSelector": "b6b55f25",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1637,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1636,
                  "name": "whenNotPaused",
                  "nameLocations": [
                    "4722:13:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53290,
                  "src": "4722:13:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4722:13:7"
              },
              {
                "id": 1639,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1638,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "4736:12:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53398,
                  "src": "4736:12:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4736:12:7"
              }
            ],
            "name": "deposit",
            "nameLocation": "4679:7:7",
            "overrides": {
              "id": 1635,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4713:8:7"
            },
            "parameters": {
              "id": 1634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1633,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4695:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1662,
                  "src": "4687:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4687:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4686:17:7"
            },
            "returnParameters": {
              "id": 1640,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4749:0:7"
            },
            "scope": 1764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1677,
            "nodeType": "FunctionDefinition",
            "src": "4999:87:7",
            "nodes": [],
            "body": {
              "id": 1676,
              "nodeType": "Block",
              "src": "5050:36:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1670,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1281,
                        "src": "5060:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1672,
                      "indexExpression": {
                        "id": 1671,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1665,
                        "src": "5066:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5060:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1673,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5075:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5060:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1675,
                  "nodeType": "ExpressionStatement",
                  "src": "5060:19:7"
                }
              ]
            },
            "documentation": {
              "id": 1663,
              "nodeType": "StructuredDocumentation",
              "src": "4943:51:7",
              "text": "@notice Register a new pool to the Blended Pool"
            },
            "functionSelector": "d914cd4b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1668,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1667,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "5040:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1247,
                  "src": "5040:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5040:9:7"
              }
            ],
            "name": "addPool",
            "nameLocation": "5008:7:7",
            "parameters": {
              "id": 1666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1665,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "5024:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1677,
                  "src": "5016:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1664,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5016:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5015:15:7"
            },
            "returnParameters": {
              "id": 1669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5050:0:7"
            },
            "scope": 1764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1708,
            "nodeType": "FunctionDefinition",
            "src": "5156:170:7",
            "nodes": [],
            "body": {
              "id": 1707,
              "nodeType": "Block",
              "src": "5218:108:7",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 1705,
                    "nodeType": "Block",
                    "src": "5272:48:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 1703,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1697,
                              "name": "pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1281,
                              "src": "5286:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1701,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1698,
                                "name": "_pools",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1681,
                                "src": "5292:6:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1700,
                              "indexExpression": {
                                "id": 1699,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1687,
                                "src": "5299:1:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5292:9:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5286:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1702,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5305:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5286:23:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1704,
                        "nodeType": "ExpressionStatement",
                        "src": "5286:23:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1690,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1687,
                      "src": "5248:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1691,
                        "name": "_pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1681,
                        "src": "5252:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1692,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5259:6:7",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5252:13:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5248:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1706,
                  "initializationExpression": {
                    "assignments": [
                      1687
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1687,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5241:1:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 1706,
                        "src": "5233:9:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1686,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5233:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1689,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1688,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5245:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5233:13:7"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1695,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5267:3:7",
                      "subExpression": {
                        "id": 1694,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1687,
                        "src": "5267:1:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1696,
                    "nodeType": "ExpressionStatement",
                    "src": "5267:3:7"
                  },
                  "nodeType": "ForStatement",
                  "src": "5228:92:7"
                }
              ]
            },
            "documentation": {
              "id": 1678,
              "nodeType": "StructuredDocumentation",
              "src": "5092:59:7",
              "text": "@notice Register new pools in batch to the Blended Pool"
            },
            "functionSelector": "b36a4ab1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1684,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1683,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "5208:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1247,
                  "src": "5208:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5208:9:7"
              }
            ],
            "name": "addPools",
            "nameLocation": "5165:8:7",
            "parameters": {
              "id": 1682,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1681,
                  "mutability": "mutable",
                  "name": "_pools",
                  "nameLocation": "5191:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1708,
                  "src": "5174:23:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1679,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5174:7:7",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1680,
                    "nodeType": "ArrayTypeName",
                    "src": "5174:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5173:25:7"
            },
            "returnParameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5218:0:7"
            },
            "scope": 1764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1722,
            "nodeType": "FunctionDefinition",
            "src": "5389:90:7",
            "nodes": [],
            "body": {
              "id": 1721,
              "nodeType": "Block",
              "src": "5443:36:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "5453:19:7",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1716,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1281,
                        "src": "5460:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1718,
                      "indexExpression": {
                        "id": 1717,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1711,
                        "src": "5466:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5460:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1720,
                  "nodeType": "ExpressionStatement",
                  "src": "5453:19:7"
                }
              ]
            },
            "documentation": {
              "id": 1709,
              "nodeType": "StructuredDocumentation",
              "src": "5332:52:7",
              "text": "@notice Remove a pool when it's no longer actual"
            },
            "functionSelector": "3b7d0946",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1714,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1713,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "5433:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1247,
                  "src": "5433:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5433:9:7"
              }
            ],
            "name": "removePool",
            "nameLocation": "5398:10:7",
            "parameters": {
              "id": 1712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1711,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "5417:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1722,
                  "src": "5409:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1710,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5409:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5408:15:7"
            },
            "returnParameters": {
              "id": 1715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5443:0:7"
            },
            "scope": 1764,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1733,
            "nodeType": "FunctionDefinition",
            "src": "5529:126:7",
            "nodes": [],
            "body": {
              "id": 1732,
              "nodeType": "Block",
              "src": "5598:57:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1729,
                        "name": "liquidityLocker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "5632:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                          "typeString": "contract ILiquidityLocker"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                          "typeString": "contract ILiquidityLocker"
                        }
                      ],
                      "id": 1728,
                      "name": "ILiquidityLocker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "5615:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ILiquidityLocker_$283_$",
                        "typeString": "type(contract ILiquidityLocker)"
                      }
                    },
                    "id": 1730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5615:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                      "typeString": "contract ILiquidityLocker"
                    }
                  },
                  "functionReturnParameters": 1727,
                  "id": 1731,
                  "nodeType": "Return",
                  "src": "5608:40:7"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_liquidityLocker",
            "nameLocation": "5538:16:7",
            "parameters": {
              "id": 1723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5554:2:7"
            },
            "returnParameters": {
              "id": 1727,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1726,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1733,
                  "src": "5580:16:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                    "typeString": "contract ILiquidityLocker"
                  },
                  "typeName": {
                    "id": 1725,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1724,
                      "name": "ILiquidityLocker",
                      "nameLocations": [
                        "5580:16:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 283,
                      "src": "5580:16:7"
                    },
                    "referencedDeclaration": 283,
                    "src": "5580:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                      "typeString": "contract ILiquidityLocker"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5579:18:7"
            },
            "scope": 1764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1751,
            "nodeType": "FunctionDefinition",
            "src": "5661:162:7",
            "nodes": [],
            "body": {
              "id": 1750,
              "nodeType": "Block",
              "src": "5748:75:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 1744,
                                "name": "poolFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1735,
                                "src": "5793:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1743,
                              "name": "IPoolFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "5780:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPoolFactory_$308_$",
                                "typeString": "type(contract IPoolFactory)"
                              }
                            },
                            "id": 1745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5780:25:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPoolFactory_$308",
                              "typeString": "contract IPoolFactory"
                            }
                          },
                          "id": 1746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5806:7:7",
                          "memberName": "globals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 307,
                          "src": "5780:33:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IHeliosGlobals_$235_$",
                            "typeString": "function () view external returns (contract IHeliosGlobals)"
                          }
                        },
                        "id": 1747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5780:35:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHeliosGlobals_$235",
                          "typeString": "contract IHeliosGlobals"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IHeliosGlobals_$235",
                          "typeString": "contract IHeliosGlobals"
                        }
                      ],
                      "id": 1742,
                      "name": "IHeliosGlobals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 235,
                      "src": "5765:14:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IHeliosGlobals_$235_$",
                        "typeString": "type(contract IHeliosGlobals)"
                      }
                    },
                    "id": 1748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5765:51:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHeliosGlobals_$235",
                      "typeString": "contract IHeliosGlobals"
                    }
                  },
                  "functionReturnParameters": 1741,
                  "id": 1749,
                  "nodeType": "Return",
                  "src": "5758:58:7"
                }
              ]
            },
            "baseFunctions": [
              1232
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_globals",
            "nameLocation": "5670:8:7",
            "overrides": {
              "id": 1737,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5709:8:7"
            },
            "parameters": {
              "id": 1736,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1735,
                  "mutability": "mutable",
                  "name": "poolFactory",
                  "nameLocation": "5687:11:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1751,
                  "src": "5679:19:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5679:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5678:21:7"
            },
            "returnParameters": {
              "id": 1741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1740,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1751,
                  "src": "5732:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHeliosGlobals_$235",
                    "typeString": "contract IHeliosGlobals"
                  },
                  "typeName": {
                    "id": 1739,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1738,
                      "name": "IHeliosGlobals",
                      "nameLocations": [
                        "5732:14:7"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 235,
                      "src": "5732:14:7"
                    },
                    "referencedDeclaration": 235,
                    "src": "5732:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHeliosGlobals_$235",
                      "typeString": "contract IHeliosGlobals"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5731:16:7"
            },
            "scope": 1764,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1763,
            "nodeType": "ModifierDefinition",
            "src": "5829:88:7",
            "nodes": [],
            "body": {
              "id": 1762,
              "nodeType": "Block",
              "src": "5849:68:7",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1754,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1281,
                          "src": "5867:5:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1757,
                        "indexExpression": {
                          "expression": {
                            "id": 1755,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5873:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5877:6:7",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5873:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5867:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a4e4f545f504f4f4c",
                        "id": 1758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5886:12:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_522267f72cd7a1cfbf12e9f0730bb5a34373d2c801cc88aeb3d0857331505786",
                          "typeString": "literal_string \"P:NOT_POOL\""
                        },
                        "value": "P:NOT_POOL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_522267f72cd7a1cfbf12e9f0730bb5a34373d2c801cc88aeb3d0857331505786",
                          "typeString": "literal_string \"P:NOT_POOL\""
                        }
                      ],
                      "id": 1753,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5859:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5859:40:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1760,
                  "nodeType": "ExpressionStatement",
                  "src": "5859:40:7"
                },
                {
                  "id": 1761,
                  "nodeType": "PlaceholderStatement",
                  "src": "5909:1:7"
                }
              ]
            },
            "name": "onlyPool",
            "nameLocation": "5838:8:7",
            "parameters": {
              "id": 1752,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5846:2:7"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1270,
              "name": "AbstractPool",
              "nameLocations": [
                "728:12:7"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1248,
              "src": "728:12:7"
            },
            "id": 1271,
            "nodeType": "InheritanceSpecifier",
            "src": "728:12:7"
          }
        ],
        "canonicalName": "BlendedPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1269,
          "nodeType": "StructuredDocumentation",
          "src": "680:24:7",
          "text": "@title Blended Pool"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1764,
          1248,
          53365,
          53434,
          52535,
          51925,
          52639,
          52613,
          53248
        ],
        "name": "BlendedPool",
        "nameLocation": "713:11:7",
        "scope": 1765,
        "usedErrors": [
          51895,
          51900,
          51905,
          51914,
          51919,
          51924,
          52692,
          52973,
          52978,
          52981,
          53270,
          53273,
          53379
        ],
        "usedEvents": [
          400,
          406,
          412,
          418,
          424,
          430,
          436,
          442,
          448,
          456,
          1287,
          52547,
          52556,
          53262,
          53267
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 7
}