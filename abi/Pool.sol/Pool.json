{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidityAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_llFactory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_lockupPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_apy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_investmentPoolSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minInvestmentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawThreshold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawPeriod",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "allowance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientAllowance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "needed",
          "type": "uint256"
        }
      ],
      "name": "ERC20InsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidApprover",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidReceiver",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSender",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "ERC20InvalidSpender",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "EnforcedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ExpectedPause",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "ReentrancyGuardReentrantCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidityProvider",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "BalanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PendingReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PendingRewardConcluded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PendingWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PendingWithdrawalConcluded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "poolAdmin",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "allowed",
          "type": "bool"
        }
      ],
      "name": "PoolAdminSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Reinvest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalOverThreshold",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SYMBOL",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "adminDeposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "availableToWithdraw",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "blendedPool",
      "outputs": [
        {
          "internalType": "contract BlendedPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "canWithdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimReward",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "concludePendingReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "concludePendingWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidityAsset",
          "type": "address"
        }
      ],
      "name": "deleteSecondaryLiquidityAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "depositDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_assetAddr",
          "type": "address"
        }
      ],
      "name": "depositSecondaryAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_holders",
          "type": "address[]"
        }
      ],
      "name": "distributeRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "drawdown",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLL",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityAsset",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityLocker",
      "outputs": [
        {
          "internalType": "contract ILiquidityLocker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingWithdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lockupPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "apy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "investmentPoolSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minInvestmentAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawThreshold",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "principalOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "reinvest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_blendedPool",
          "type": "address"
        }
      ],
      "name": "setBlendedPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidityAsset",
          "type": "address"
        }
      ],
      "name": "setSecondaryLiquidityAsset",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_liquidityAssets",
          "type": "address[]"
        }
      ],
      "name": "setSecondaryLiquidityAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "superFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDeposited",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "userDeposits",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "unlockTime",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint16[]",
          "name": "_indices",
          "type": "uint16[]"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawPeriod",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_holder",
          "type": "address"
        }
      ],
      "name": "withdrawableOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101006040523480156200001257600080fd5b50604051620039ed380380620039ed8339810160408190526200003591620004ce565b88886040518060400160405280600f81526020016e12195b1a5bdcc81512d388141bdbdb608a1b815250604051806040016040528060058152602001640484c532d560dc1b815250858583838160039081620000929190620005f6565b506004620000a18282620005f6565b50506001600555506006805460ff191690556001600160a01b03861660a08190526040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa158015620000fe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001249190620006c2565b60ff1660c052604051630cf5bc1d60e11b81526001600160a01b0387811660048301528616906319eb783a906024016020604051808303816000875af115801562000173573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001999190620006ee565b6001600160a01b03908116608052600e92909255600f553360e0528d16935062000201925050505760405162461bcd60e51b815260206004820152601060248201526f140e96915493d7d3125457d054d4d15560821b60448201526064015b60405180910390fd5b6001600160a01b038816620002595760405162461bcd60e51b815260206004820152601960248201527f503a5a45524f5f4c49515f4c4f434b45525f464143544f5259000000000000006044820152606401620001f8565b6040805160c08101825288815260208101889052908101869052606081018590526080810184905260a00182905260108790556011869055601285905560138490556014839055601582905560e051620002b39062000448565b60405163434a88c560e11b81526001600160a01b038b811660048301529190911690638695118a90602401602060405180830381865afa158015620002fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200032291906200070e565b620003705760405162461bcd60e51b815260206004820152601360248201527f503a494e56414c49445f4c49515f4153534554000000000000000000000000006044820152606401620001f8565b60e0516200037e9062000448565b60405162041a9d60e51b81526001600160a01b038a811660048301529190911690628353a090602401602060405180830381865afa158015620003c5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620003eb91906200070e565b620004395760405162461bcd60e51b815260206004820152601460248201527f503a494e56414c49445f4c4c5f464143544f52590000000000000000000000006044820152606401620001f8565b50505050505050505062000732565b6000816001600160a01b031663c31245256040518163ffffffff1660e01b8152600401602060405180830381865afa15801562000489573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620004af9190620006ee565b92915050565b6001600160a01b0381168114620004cb57600080fd5b50565b60008060008060008060008060006101208a8c031215620004ee57600080fd5b8951620004fb81620004b5565b60208b01519099506200050e81620004b5565b8098505060408a0151965060608a0151955060808a0151945060a08a0151935060c08a0151925060e08a015191506101008a015190509295985092959850929598565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200057c57607f821691505b6020821081036200059d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620005f157600081815260208120601f850160051c81016020861015620005cc5750805b601f850160051c820191505b81811015620005ed57828155600101620005d8565b5050505b505050565b81516001600160401b0381111562000612576200061262000551565b6200062a8162000623845462000567565b84620005a3565b602080601f831160018114620006625760008415620006495750858301515b600019600386901b1c1916600185901b178555620005ed565b600085815260208120601f198616915b82811015620006935788860151825594840194600190910190840162000672565b5085821015620006b25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620006d557600080fd5b815160ff81168114620006e757600080fd5b9392505050565b6000602082840312156200070157600080fd5b8151620006e781620004b5565b6000602082840312156200072157600080fd5b81518015158114620006e757600080fd5b60805160a05160c05160e0516131b6620008376000396000818161033a015281816107ab01528181610a1b01528181610c520152818161133c0152818161141f015281816116c001526118bf015260006104320152600081816103b001528181610875015281816109650152818161206d015281816125090152612b590152600081816104e7015281816105b30152818161098801528181610d3601528181611076015281816111fc015281816114e80152818161152e015281816117a401528181611a5401528181611aff01528181611efc0152818161204101528181612498015281816125330152818161257e015281816126fb0152612b2e01526131b66000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c80636acab9da11610151578063ac641655116100c3578063f3f4370311610087578063f3f4370314610699578063f76f8d78146106b9578063f848d541146106dd578063fa8c00d4146106e6578063fbe85f06146106f9578063ff50abdc1461070c57600080fd5b8063ac64165514610629578063b6b55f2514610632578063b88a802f14610645578063c89547601461064d578063dd62ed3e1461066057600080fd5b80639264fd53116101155780639264fd531461059357806395d89b41146105a65780639759164a146105ae578063a3f4df7e146105d5578063a81b354514610603578063a9059cbb1461061657600080fd5b80636acab9da1461051e5780637050886b1461053157806370a082311461054457806374ee1ac41461056d57806383b4918b1461058057600080fd5b806323b872dd116101ea57806331d7a262116101ae57806331d7a2621461045c578063486b3ed31461047c5780635a2f3d091461048f5780635c975abb146104da57806366731639146104e557806366f294cf1461050b57600080fd5b806323b872dd146103d257806324b92e8e146103e557806328915483146104055780632dfbf50314610418578063313ce5671461042b57600080fd5b80630d49b38c1161023c5780630d49b38c1461033557806312eb4f9a1461037457806318160ddd1461037d5780631aa59542146103855780631e0a596714610398578063209b2bca146103ab57600080fd5b806306fdde03146102795780630700037d1461029757806308687794146102c557806308f43333146102da578063095ea7b314610312575b600080fd5b610281610714565b60405161028e9190612cf1565b60405180910390f35b6102b76102a5366004612d39565b60096020526000908152604090205481565b60405190815260200161028e565b6102d86102d3366004612d56565b6107a6565b005b6102ed6102e8366004612d6f565b6109b0565b604080516001600160a01b03909416845260208401929092529082015260600161028e565b610325610320366004612d6f565b6109fc565b604051901515815260200161028e565b61035c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161028e565b6102b7600f5481565b6002546102b7565b6102d8610393366004612de7565b610a16565b6102d86103a6366004612d39565b610c45565b61035c7f000000000000000000000000000000000000000000000000000000000000000081565b6103256103e0366004612e33565b610e3d565b6102b76103f3366004612d39565b600c6020526000908152604090205481565b6102d8610413366004612e74565b610e63565b60165461035c906001600160a01b031681565b60405160ff7f000000000000000000000000000000000000000000000000000000000000000016815260200161028e565b6102b761046a366004612d39565b600b6020526000908152604090205481565b6102d861048a366004612d39565b6111dd565b6010546011546012546013546014546015546104ad95949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00161028e565b60065460ff16610325565b7f000000000000000000000000000000000000000000000000000000000000000061035c565b6102b7610519366004612d6f565b611255565b6102d861052c366004612d6f565b611337565b6102d861053f366004612d39565b61141a565b6102b7610552366004612d39565b6001600160a01b031660009081526020819052604090205490565b6102d861057b366004612ee0565b611517565b6102d861058e366004612d56565b61159b565b6102d86105a1366004612d39565b6116b3565b6102816118ab565b61035c7f000000000000000000000000000000000000000000000000000000000000000081565b6102816040518060400160405280600f81526020016e12195b1a5bdcc81512d388141bdbdb608a1b81525081565b6102d8610611366004612d39565b6118ba565b610325610624366004612d6f565b61198b565b6102b760085481565b6102d8610640366004612d56565b611999565b610325611aeb565b6102d861065b366004612f22565b611e26565b6102b761066e366004612f52565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102b76106a7366004612d39565b600a6020526000908152604090205481565b610281604051806040016040528060058152602001640484c532d560dc1b81525081565b6102b7600e5481565b6102b76106f4366004612d39565b611fc1565b610325610707366004612d56565b6120f8565b6007546102b7565b60606003805461072390612f80565b80601f016020809104026020016040519081016040528092919081815260200182805461074f90612f80565b801561079c5780601f106107715761010080835404028352916020019161079c565b820191906000526020600020905b81548152906001019060200180831161077f57829003601f168201915b5050505050905090565b6107cf7f000000000000000000000000000000000000000000000000000000000000000061210c565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015610815573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108399190612fba565b61085e5760405162461bcd60e51b815260040161085590612fdc565b60405180910390fd5b6040516370a0823160e01b815233600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156108c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e89190613002565b101561092d5760405162461bcd60e51b8152602060048201526014602482015273503a4e4f545f454e4f5547485f42414c414e434560601b6044820152606401610855565b6008548110610940576000600855610958565b80600860008282546109529190613031565b90915550505b6109ad6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016337f000000000000000000000000000000000000000000000000000000000000000084612170565b50565b600d60205281600052604060002081815481106109cc57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116935090915083565b600033610a0a8185856121ca565b60019150505b92915050565b610a3f7f000000000000000000000000000000000000000000000000000000000000000061210c565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015610a85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa99190612fba565b610ac55760405162461bcd60e51b815260040161085590612fdc565b610acd6121d7565b60008311610b0f5760405162461bcd60e51b815260206004820152600f60248201526e503a494e56414c49445f56414c554560881b6044820152606401610855565b80610b4d5760405162461bcd60e51b815260206004820152600e60248201526d503a5a45524f5f484f4c4445525360901b6044820152606401610855565b60005b81811015610c35576000838383818110610b6c57610b6c613044565b9050602002016020810190610b819190612d39565b90506000610ba4826001600160a01b031660009081526020819052604090205490565b601354909150600090610bbf83670de0b6b3a764000061305a565b610bc99190613071565b90506000670de0b6b3a7640000610be0898461305a565b610bea9190613071565b6001600160a01b038516600090815260096020526040812080549293508392909190610c17908490613093565b92505081905550505050508080610c2d906130a6565b915050610b50565b50610c406001600555565b505050565b610c4d6121d7565b610c767f000000000000000000000000000000000000000000000000000000000000000061210c565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015610cbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce09190612fba565b610cfc5760405162461bcd60e51b815260040161085590612fdc565b6001600160a01b038181166000818152600a60205260409081902054905163a9059cbb60e01b8152600481019290925260248201819052917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da39190612fba565b610def5760405162461bcd60e51b815260206004820152601c60248201527f503a434f4e434c5544455f5749544844524157414c5f4641494c4544000000006044820152606401610855565b6001600160a01b0382166000818152600a6020526040808220829055518392917f2687ab3014fc32ee1bbb5acb4d4879d56644ad540a426c06d7deaa8f127b232391a3506109ad6001600555565b600033610e4b858285612201565b610e56858585612279565b60019150505b9392505050565b610e6b6122d8565b828114610eb25760405162461bcd60e51b8152602060048201526015602482015274140e905494905654d7d25390d3d394d254d5115395605a1b6044820152606401610855565b60005b818110156111d6576000838383818110610ed157610ed1613044565b9050602002016020810190610ee691906130bf565b61ffff1690506000868684818110610f0057610f00613044565b336000908152600d6020908152604090912054910292909201359250508210610f5d5760405162461bcd60e51b815260206004820152600f60248201526e0a074929cac82989288be929c888ab608b1b6044820152606401610855565b336000908152600d60205260408120805484908110610f7e57610f7e613044565b600091825260209182902060408051606081018252600390930290910180546001600160a01b0316835260018101549383019390935260029092015491810182905291504210156110035760405162461bcd60e51b815260206004820152600f60248201526e140e9513d2d15394d7d313d0d2d151608a1b6044820152606401610855565b818160200151101580156110265750336000908152602081905260409020548211155b6110695760405162461bcd60e51b8152602060048201526014602482015273503a494e53554646494349454e545f46554e445360601b6044820152606401610855565b61107333836122fe565b817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f69190613002565b101561115557336000908152600a60205260408120805484929061111b908490613093565b9091555050604051829033907f39d9cf4ffb93650d8ce789639cb8cf3c8d7b039e1f9795c038af55b4ae643fca90600090a35050506111c4565b81816020018181516111679190613031565b9052506020810151600003611180576111803384612334565b61118a338361246f565b50611193612507565b604051829033907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6590600090a35050505b806111ce816130a6565b915050610eb5565b5050505050565b60405163486b3ed360e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063486b3ed3906024015b600060405180830381600087803b15801561124157600080fd5b505af11580156111d6573d6000803e3d6000fd5b6001600160a01b0382166000908152600d602052604081205482106112ae5760405162461bcd60e51b815260206004820152600f60248201526e0a074929cac82989288be929c888ab608b1b6044820152606401610855565b6001600160a01b0383166000908152600d602052604081208054849081106112d8576112d8613044565b600091825260209182902060408051606081018252600390930290910180546001600160a01b031683526001810154938301939093526002909201549181018290529150421061132d57602001519050610a10565b6000915050610a10565b6113607f000000000000000000000000000000000000000000000000000000000000000061210c565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa1580156113a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ca9190612fba565b6113e65760405162461bcd60e51b815260040161085590612fdc565b80600860008282546113f89190613093565b9091555060009050611408612611565b9050611414838261246f565b50505050565b6114437f000000000000000000000000000000000000000000000000000000000000000061210c565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015611489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ad9190612fba565b6114c95760405162461bcd60e51b815260040161085590612fdc565b604051637050886b60e01b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690637050886b90602401611227565b604051631d3b86b160e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906374ee1ac49061156590859085906004016130e3565b600060405180830381600087803b15801561157f57600080fd5b505af1158015611593573d6000803e3d6000fd5b505050505050565b600081116115dd5760405162461bcd60e51b815260206004820152600f60248201526e503a494e56414c49445f56414c554560881b6044820152606401610855565b336000908152600960205260409020548111156116355760405162461bcd60e51b8152602060048201526016602482015275503a494e53554646494349454e545f42414c414e434560501b6044820152606401610855565b61163f338261262e565b80600760008282546116519190613093565b90915550503360009081526009602052604081208054839290611675908490613031565b909155506116839050612507565b604051819033907fbd654390d0d973e8c8376ed6053be8658870df892687852cc5c914d700291b8790600090a350565b6116bb6121d7565b6116e47f000000000000000000000000000000000000000000000000000000000000000061210c565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa15801561172a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174e9190612fba565b61176a5760405162461bcd60e51b815260040161085590612fdc565b6001600160a01b038181166000818152600b60205260409081902054905163a9059cbb60e01b8152600481019290925260248201819052917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156117ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118119190612fba565b61185d5760405162461bcd60e51b815260206004820152601860248201527f503a434f4e434c5544455f5245574152445f4641494c454400000000000000006044820152606401610855565b6001600160a01b0382166000818152600b6020526040808220829055518392917f3c7e767b6741d1e3a8f90a3c95937bb07453eaf2dfee591a5a308f04f498e8b891a3506109ad6001600555565b60606004805461072390612f80565b6118e37f000000000000000000000000000000000000000000000000000000000000000061210c565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015611929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194d9190612fba565b6119695760405162461bcd60e51b815260040161085590612fdc565b601680546001600160a01b0319166001600160a01b0392909216919091179055565b600033610a0a818585612279565b6119a16122d8565b6119a96121d7565b6014548110156119f15760405162461bcd60e51b8152602060048201526013602482015272281d2222a82fa0a6aa2fa122a627abafa6a4a760691b6044820152606401610855565b601354816119fe60025490565b611a089190613093565b1115611a505760405162461bcd60e51b8152602060048201526017602482015276140e93505617d413d3d317d4d2569157d4915050d21151604a1b6044820152606401610855565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663209b2bca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad49190613131565b9050611ae08282612664565b506109ad6001600555565b3360009081526009602052604081205460007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b7f9190613002565b33600090815260096020526040812055905081811015611d9a576000611ba58284613031565b905080601660009054906101000a90046001600160a01b03166001600160a01b03166342103e8e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1f9190613002565b1015611c8057336000908152600b602052604081208054859290611c44908490613093565b9091555050604051839033907f19adda954c72f22df5078ae925d620d455e095989b72be2f895e10473b53797790600090a36000935050505090565b601654604051633d2332c160e21b8152600481018390526001600160a01b039091169063f48ccb0490602401600060405180830381600087803b158015611cc657600080fd5b505af1158015611cda573d6000803e3d6000fd5b5050601654611cf592506001600160a01b031690508261262e565b8060076000828254611d079190613093565b90915550611d179050338461246f565b611d635760405162461bcd60e51b815260206004820152601b60248201527f503a4552524f525f5452414e5346455252494e475f52455741524400000000006044820152606401610855565b604051839033907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724190600090a36001935050505090565b611da4338361246f565b611df05760405162461bcd60e51b815260206004820152601b60248201527f503a4552524f525f5452414e5346455252494e475f52455741524400000000006044820152606401610855565b604051829033907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724190600090a360019250505090565b611e2e6122d8565b611e366121d7565b601454821015611e7e5760405162461bcd60e51b8152602060048201526013602482015272281d2222a82fa0a6aa2fa122a627abafa6a4a760691b6044820152606401610855565b60135482611e8b60025490565b611e959190613093565b1115611edd5760405162461bcd60e51b8152602060048201526017602482015276140e93505617d413d3d317d4d2569157d4915050d21151604a1b6044820152606401610855565b60405163029333f560e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063029333f5906024016020604051808303816000875af1158015611f45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f699190612fba565b611fa75760405162461bcd60e51b815260206004820152600f60248201526e140e955392d393d5d397d054d4d155608a1b6044820152606401610855565b80611fb28382612664565b50611fbd6001600555565b5050565b6010546001600160a01b0382166000908152600c602052604081205490914291611feb9190613093565b111561202a5760405162461bcd60e51b815260206004820152600e60248201526d140e9195539114d7d313d0d2d15160921b6044820152606401610855565b6040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152610a10917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa1580156120b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120da9190613002565b6001600160a01b03841660009081526020819052604090205461277b565b60006121043383612791565b506001919050565b6000816001600160a01b031663c31245256040518163ffffffff1660e01b8152600401602060405180830381865afa15801561214c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a109190613131565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526114149085906128b5565b610c408383836001612918565b6002600554036121fa57604051633ee5aeb560e01b815260040160405180910390fd5b6002600555565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114611414578181101561226a57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610855565b61141484848484036000612918565b6001600160a01b0383166122a357604051634b637e8f60e11b815260006004820152602401610855565b6001600160a01b0382166122cd5760405163ec442f0560e01b815260006004820152602401610855565b610c408383836129ed565b60065460ff16156122fc5760405163d93c066560e01b815260040160405180910390fd5b565b6001600160a01b03821661232857604051634b637e8f60e11b815260006004820152602401610855565b611fbd826000836129ed565b6001600160a01b0382166000908152600d602052604081205461235990600190613031565b9050808214612413576001600160a01b0383166000908152600d6020526040902080548290811061238c5761238c613044565b9060005260206000209060030201600d6000856001600160a01b03166001600160a01b0316815260200190815260200160002083815481106123d0576123d0613044565b60009182526020909120825460039092020180546001600160a01b0319166001600160a01b03909216919091178155600180830154908201556002918201549101555b6001600160a01b0383166000908152600d6020526040902080548061243a5761243a61314e565b60008281526020812060036000199093019283020180546001600160a01b031916815560018101829055600201559055505050565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af11580156124e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5c9190612fba565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f2047d1633ff7768462ae07d28cb16e484203bfd6d85ce832494270ebcd9081a27f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125fe9190613002565b60405190815260200160405180910390a3565b600060085461261f60025490565b6126299190613031565b905090565b6001600160a01b0382166126585760405163ec442f0560e01b815260006004820152602401610855565b611fbd600083836129ed565b336000908152600d602090815260409182902082516060810184526001600160a01b0385168152918201859052600f5490928201906126a39042613093565b90528154600180820184556000938452602093849020835160039093020180546001600160a01b0319166001600160a01b039384161781559383015190840155604090910151600290920191909155612720908216337f000000000000000000000000000000000000000000000000000000000000000085612170565b61272a338361262e565b816007600082825461273c9190613093565b9091555061274a9050612507565b604051829033907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c90600090a35050565b600081831061278a5781610e5c565b5090919050565b6010546001600160a01b0383166000908152600c602052604090205442916127b891613093565b11156127f75760405162461bcd60e51b815260206004820152600e60248201526d140e9195539114d7d313d0d2d15160921b6044820152606401610855565b80612817836001600160a01b031660009081526020819052604090205490565b101561285e5760405162461bcd60e51b8152602060048201526016602482015275503a494e53554646494349454e545f42414c414e434560501b6044820152606401610855565b612866612b17565b811115611fbd5760405162461bcd60e51b815260206004820152601860248201527f503a494e53554646494349454e545f4c495155494449545900000000000000006044820152606401610855565b60006128ca6001600160a01b03841683612bc6565b905080516000141580156128ef5750808060200190518101906128ed9190612fba565b155b15610c4057604051635274afe760e01b81526001600160a01b0384166004820152602401610855565b6001600160a01b0384166129425760405163e602df0560e01b815260006004820152602401610855565b6001600160a01b03831661296c57604051634a1406b160e11b815260006004820152602401610855565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561141457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516129df91815260200190565b60405180910390a350505050565b6001600160a01b038316612a18578060026000828254612a0d9190613093565b90915550612a8a9050565b6001600160a01b03831660009081526020819052604090205481811015612a6b5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610855565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216612aa657600280548290039055612ac5565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612b0a91815260200190565b60405180910390a3505050565b6040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa158015612ba2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126299190613002565b6060610e5c8383600084600080856001600160a01b03168486604051612bec9190613164565b60006040518083038185875af1925050503d8060008114612c29576040519150601f19603f3d011682016040523d82523d6000602084013e612c2e565b606091505b5091509150612c3e868383612c48565b9695505050505050565b606082612c5d57612c5882612ca4565b610e5c565b8151158015612c7457506001600160a01b0384163b155b15612c9d57604051639996b31560e01b81526001600160a01b0385166004820152602401610855565b5080610e5c565b805115612cb45780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60005b83811015612ce8578181015183820152602001612cd0565b50506000910152565b6020815260008251806020840152612d10816040850160208701612ccd565b601f01601f19169190910160400192915050565b6001600160a01b03811681146109ad57600080fd5b600060208284031215612d4b57600080fd5b8135610e5c81612d24565b600060208284031215612d6857600080fd5b5035919050565b60008060408385031215612d8257600080fd5b8235612d8d81612d24565b946020939093013593505050565b60008083601f840112612dad57600080fd5b50813567ffffffffffffffff811115612dc557600080fd5b6020830191508360208260051b8501011115612de057600080fd5b9250929050565b600080600060408486031215612dfc57600080fd5b83359250602084013567ffffffffffffffff811115612e1a57600080fd5b612e2686828701612d9b565b9497909650939450505050565b600080600060608486031215612e4857600080fd5b8335612e5381612d24565b92506020840135612e6381612d24565b929592945050506040919091013590565b60008060008060408587031215612e8a57600080fd5b843567ffffffffffffffff80821115612ea257600080fd5b612eae88838901612d9b565b90965094506020870135915080821115612ec757600080fd5b50612ed487828801612d9b565b95989497509550505050565b60008060208385031215612ef357600080fd5b823567ffffffffffffffff811115612f0a57600080fd5b612f1685828601612d9b565b90969095509350505050565b60008060408385031215612f3557600080fd5b823591506020830135612f4781612d24565b809150509250929050565b60008060408385031215612f6557600080fd5b8235612f7081612d24565b91506020830135612f4781612d24565b600181811c90821680612f9457607f821691505b602082108103612fb457634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215612fcc57600080fd5b81518015158114610e5c57600080fd5b6020808252600c908201526b28231d2727aa2fa0a226a4a760a11b604082015260600190565b60006020828403121561301457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610a1057610a1061301b565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610a1057610a1061301b565b60008261308e57634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610a1057610a1061301b565b6000600182016130b8576130b861301b565b5060010190565b6000602082840312156130d157600080fd5b813561ffff81168114610e5c57600080fd5b60208082528181018390526000908460408401835b8681101561312657823561310b81612d24565b6001600160a01b0316825291830191908301906001016130f8565b509695505050505050565b60006020828403121561314357600080fd5b8151610e5c81612d24565b634e487b7160e01b600052603160045260246000fd5b60008251613176818460208701612ccd565b919091019291505056fea26469706673582212207b5cb95d8234d0159ad947145b21b06cc80994d51967e8c2aa795bfd6183337964736f6c63430008140033",
    "sourceMap": "864:5302:10:-:0;;;1120:890;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1436:15;1453:10;1465:4;;;;;;;;;;;;;-1:-1:-1;;;1465:4:10;;;1471:6;;;;;;;;;;;;;-1:-1:-1;;;1471:6:10;;;1479:18;1499:15;3340:9:6;3351:11;1970:5:45;1962;:13;;;;;;:::i;:::-;-1:-1:-1;1985:7:45;:17;1995:7;1985;:17;:::i;:::-;-1:-1:-1;;1713:1:53;1917:7;:21;-1:-1:-1;1231:7:52;:15;;-1:-1:-1;;1231:15:52;;;-1:-1:-1;;;;;3374:40:6;::::1;;::::0;;;3449:33:::1;::::0;;-1:-1:-1;;;3449:33:6;;;;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;3374:40;3449:33:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3424:58;;;::::0;3527:62:::1;::::0;-1:-1:-1;;;3527:62:6;;-1:-1:-1;;;;;4136:32:60;;;3527:62:6::1;::::0;::::1;4118:51:60::0;3527:45:6;::::1;::::0;::::1;::::0;4091:18:60;;3527:62:6::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;3492:98:6;;::::1;;::::0;3600:13:::1;:30:::0;;;;3640:14:::1;:32:::0;3697:10:::1;3682:25;::::0;1534:29:10;::::1;::::0;-1:-1:-1;1526:58:10::1;::::0;-1:-1:-1;;;1526:58:10::1;;::::0;-1:-1:-1;;;1526:58:10;;4638:2:60;1526:58:10::1;::::0;::::1;4620:21:60::0;4677:2;4657:18;;;4650:30;-1:-1:-1;;;4696:18:60;;;4689:46;4752:18;;1526:58:10::1;;;;;;;;;-1:-1:-1::0;;;;;1602:24:10;::::1;1594:62;;;::::0;-1:-1:-1;;;1594:62:10;;4983:2:60;1594:62:10::1;::::0;::::1;4965:21:60::0;5022:2;5002:18;;;4995:30;5061:27;5041:18;;;5034:55;5106:18;;1594:62:10::1;4781:349:60::0;1594:62:10::1;1689:103;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;1666:8:::1;:126:::0;;;;;;;;;;;;;;;;;;;;;;;1820:12:::1;::::0;1811:22:::1;::::0;:8:::1;:22::i;:::-;:61;::::0;-1:-1:-1;;;1811:61:10;;-1:-1:-1;;;;;4136:32:60;;;1811:61:10::1;::::0;::::1;4118:51:60::0;1811:44:10;;;::::1;::::0;::::1;::::0;4091:18:60;;1811:61:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1803:93;;;::::0;-1:-1:-1;;;1803:93:10;;5619:2:60;1803:93:10::1;::::0;::::1;5601:21:60::0;5658:2;5638:18;;;5631:30;5697:21;5677:18;;;5670:49;5736:18;;1803:93:10::1;5417:343:60::0;1803:93:10::1;1923:12;::::0;1914:22:::1;::::0;:8:::1;:22::i;:::-;:64;::::0;-1:-1:-1;;;1914:64:10;;-1:-1:-1;;;;;4136:32:60;;;1914:64:10::1;::::0;::::1;4118:51:60::0;1914:52:10;;;::::1;::::0;::::1;::::0;4091:18:60;;1914:64:10::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1906:97;;;::::0;-1:-1:-1;;;1906:97:10;;5967:2:60;1906:97:10::1;::::0;::::1;5949:21:60::0;6006:2;5986:18;;;5979:30;6045:22;6025:18;;;6018:50;6085:18;;1906:97:10::1;5765:344:60::0;1906:97:10::1;1120:890:::0;;;;;;;;;864:5302;;6002:162;6073:14;6134:11;-1:-1:-1;;;;;6121:33:10;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6099:58;6002:162;-1:-1:-1;;6002:162:10:o;14:131:60:-;-1:-1:-1;;;;;89:31:60;;79:42;;69:70;;135:1;132;125:12;69:70;14:131;:::o;150:818::-;292:6;300;308;316;324;332;340;348;356;409:3;397:9;388:7;384:23;380:33;377:53;;;426:1;423;416:12;377:53;458:9;452:16;477:31;502:5;477:31;:::i;:::-;577:2;562:18;;556:25;527:5;;-1:-1:-1;590:33:60;556:25;590:33;:::i;:::-;642:7;632:17;;;689:2;678:9;674:18;668:25;658:35;;733:2;722:9;718:18;712:25;702:35;;777:3;766:9;762:19;756:26;746:36;;822:3;811:9;807:19;801:26;791:36;;867:3;856:9;852:19;846:26;836:36;;912:3;901:9;897:19;891:26;881:36;;957:3;946:9;942:19;936:26;926:36;;150:818;;;;;;;;;;;:::o;973:127::-;1034:10;1029:3;1025:20;1022:1;1015:31;1065:4;1062:1;1055:15;1089:4;1086:1;1079:15;1105:380;1184:1;1180:12;;;;1227;;;1248:61;;1302:4;1294:6;1290:17;1280:27;;1248:61;1355:2;1347:6;1344:14;1324:18;1321:38;1318:161;;1401:10;1396:3;1392:20;1389:1;1382:31;1436:4;1433:1;1426:15;1464:4;1461:1;1454:15;1318:161;;1105:380;;;:::o;1616:545::-;1718:2;1713:3;1710:11;1707:448;;;1754:1;1779:5;1775:2;1768:17;1824:4;1820:2;1810:19;1894:2;1882:10;1878:19;1875:1;1871:27;1865:4;1861:38;1930:4;1918:10;1915:20;1912:47;;;-1:-1:-1;1953:4:60;1912:47;2008:2;2003:3;1999:12;1996:1;1992:20;1986:4;1982:31;1972:41;;2063:82;2081:2;2074:5;2071:13;2063:82;;;2126:17;;;2107:1;2096:13;2063:82;;;2067:3;;;1707:448;1616:545;;;:::o;2337:1352::-;2457:10;;-1:-1:-1;;;;;2479:30:60;;2476:56;;;2512:18;;:::i;:::-;2541:97;2631:6;2591:38;2623:4;2617:11;2591:38;:::i;:::-;2585:4;2541:97;:::i;:::-;2693:4;;2757:2;2746:14;;2774:1;2769:663;;;;3476:1;3493:6;3490:89;;;-1:-1:-1;3545:19:60;;;3539:26;3490:89;-1:-1:-1;;2294:1:60;2290:11;;;2286:24;2282:29;2272:40;2318:1;2314:11;;;2269:57;3592:81;;2739:944;;2769:663;1563:1;1556:14;;;1600:4;1587:18;;-1:-1:-1;;2805:20:60;;;2923:236;2937:7;2934:1;2931:14;2923:236;;;3026:19;;;3020:26;3005:42;;3118:27;;;;3086:1;3074:14;;;;2953:19;;2923:236;;;2927:3;3187:6;3178:7;3175:19;3172:201;;;3248:19;;;3242:26;-1:-1:-1;;3331:1:60;3327:14;;;3343:3;3323:24;3319:37;3315:42;3300:58;3285:74;;3172:201;-1:-1:-1;;;;;3419:1:60;3403:14;;;3399:22;3386:36;;-1:-1:-1;2337:1352:60:o;3694:273::-;3762:6;3815:2;3803:9;3794:7;3790:23;3786:32;3783:52;;;3831:1;3828;3821:12;3783:52;3863:9;3857:16;3913:4;3906:5;3902:16;3895:5;3892:27;3882:55;;3933:1;3930;3923:12;3882:55;3956:5;3694:273;-1:-1:-1;;;3694:273:60:o;4180:251::-;4250:6;4303:2;4291:9;4282:7;4278:23;4274:32;4271:52;;;4319:1;4316;4309:12;4271:52;4351:9;4345:16;4370:31;4395:5;4370:31;:::i;5135:277::-;5202:6;5255:2;5243:9;5234:7;5230:23;5226:32;5223:52;;;5271:1;5268;5261:12;5223:52;5303:9;5297:16;5356:5;5349:13;5342:21;5335:5;5332:32;5322:60;;5378:1;5375;5368:12;6114:273;864:5302:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102745760003560e01c80636acab9da11610151578063ac641655116100c3578063f3f4370311610087578063f3f4370314610699578063f76f8d78146106b9578063f848d541146106dd578063fa8c00d4146106e6578063fbe85f06146106f9578063ff50abdc1461070c57600080fd5b8063ac64165514610629578063b6b55f2514610632578063b88a802f14610645578063c89547601461064d578063dd62ed3e1461066057600080fd5b80639264fd53116101155780639264fd531461059357806395d89b41146105a65780639759164a146105ae578063a3f4df7e146105d5578063a81b354514610603578063a9059cbb1461061657600080fd5b80636acab9da1461051e5780637050886b1461053157806370a082311461054457806374ee1ac41461056d57806383b4918b1461058057600080fd5b806323b872dd116101ea57806331d7a262116101ae57806331d7a2621461045c578063486b3ed31461047c5780635a2f3d091461048f5780635c975abb146104da57806366731639146104e557806366f294cf1461050b57600080fd5b806323b872dd146103d257806324b92e8e146103e557806328915483146104055780632dfbf50314610418578063313ce5671461042b57600080fd5b80630d49b38c1161023c5780630d49b38c1461033557806312eb4f9a1461037457806318160ddd1461037d5780631aa59542146103855780631e0a596714610398578063209b2bca146103ab57600080fd5b806306fdde03146102795780630700037d1461029757806308687794146102c557806308f43333146102da578063095ea7b314610312575b600080fd5b610281610714565b60405161028e9190612cf1565b60405180910390f35b6102b76102a5366004612d39565b60096020526000908152604090205481565b60405190815260200161028e565b6102d86102d3366004612d56565b6107a6565b005b6102ed6102e8366004612d6f565b6109b0565b604080516001600160a01b03909416845260208401929092529082015260600161028e565b610325610320366004612d6f565b6109fc565b604051901515815260200161028e565b61035c7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161028e565b6102b7600f5481565b6002546102b7565b6102d8610393366004612de7565b610a16565b6102d86103a6366004612d39565b610c45565b61035c7f000000000000000000000000000000000000000000000000000000000000000081565b6103256103e0366004612e33565b610e3d565b6102b76103f3366004612d39565b600c6020526000908152604090205481565b6102d8610413366004612e74565b610e63565b60165461035c906001600160a01b031681565b60405160ff7f000000000000000000000000000000000000000000000000000000000000000016815260200161028e565b6102b761046a366004612d39565b600b6020526000908152604090205481565b6102d861048a366004612d39565b6111dd565b6010546011546012546013546014546015546104ad95949392919086565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00161028e565b60065460ff16610325565b7f000000000000000000000000000000000000000000000000000000000000000061035c565b6102b7610519366004612d6f565b611255565b6102d861052c366004612d6f565b611337565b6102d861053f366004612d39565b61141a565b6102b7610552366004612d39565b6001600160a01b031660009081526020819052604090205490565b6102d861057b366004612ee0565b611517565b6102d861058e366004612d56565b61159b565b6102d86105a1366004612d39565b6116b3565b6102816118ab565b61035c7f000000000000000000000000000000000000000000000000000000000000000081565b6102816040518060400160405280600f81526020016e12195b1a5bdcc81512d388141bdbdb608a1b81525081565b6102d8610611366004612d39565b6118ba565b610325610624366004612d6f565b61198b565b6102b760085481565b6102d8610640366004612d56565b611999565b610325611aeb565b6102d861065b366004612f22565b611e26565b6102b761066e366004612f52565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6102b76106a7366004612d39565b600a6020526000908152604090205481565b610281604051806040016040528060058152602001640484c532d560dc1b81525081565b6102b7600e5481565b6102b76106f4366004612d39565b611fc1565b610325610707366004612d56565b6120f8565b6007546102b7565b60606003805461072390612f80565b80601f016020809104026020016040519081016040528092919081815260200182805461074f90612f80565b801561079c5780601f106107715761010080835404028352916020019161079c565b820191906000526020600020905b81548152906001019060200180831161077f57829003601f168201915b5050505050905090565b6107cf7f000000000000000000000000000000000000000000000000000000000000000061210c565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015610815573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108399190612fba565b61085e5760405162461bcd60e51b815260040161085590612fdc565b60405180910390fd5b6040516370a0823160e01b815233600482015281907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a0823190602401602060405180830381865afa1580156108c4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e89190613002565b101561092d5760405162461bcd60e51b8152602060048201526014602482015273503a4e4f545f454e4f5547485f42414c414e434560601b6044820152606401610855565b6008548110610940576000600855610958565b80600860008282546109529190613031565b90915550505b6109ad6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016337f000000000000000000000000000000000000000000000000000000000000000084612170565b50565b600d60205281600052604060002081815481106109cc57600080fd5b60009182526020909120600390910201805460018201546002909201546001600160a01b03909116935090915083565b600033610a0a8185856121ca565b60019150505b92915050565b610a3f7f000000000000000000000000000000000000000000000000000000000000000061210c565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015610a85573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa99190612fba565b610ac55760405162461bcd60e51b815260040161085590612fdc565b610acd6121d7565b60008311610b0f5760405162461bcd60e51b815260206004820152600f60248201526e503a494e56414c49445f56414c554560881b6044820152606401610855565b80610b4d5760405162461bcd60e51b815260206004820152600e60248201526d503a5a45524f5f484f4c4445525360901b6044820152606401610855565b60005b81811015610c35576000838383818110610b6c57610b6c613044565b9050602002016020810190610b819190612d39565b90506000610ba4826001600160a01b031660009081526020819052604090205490565b601354909150600090610bbf83670de0b6b3a764000061305a565b610bc99190613071565b90506000670de0b6b3a7640000610be0898461305a565b610bea9190613071565b6001600160a01b038516600090815260096020526040812080549293508392909190610c17908490613093565b92505081905550505050508080610c2d906130a6565b915050610b50565b50610c406001600555565b505050565b610c4d6121d7565b610c767f000000000000000000000000000000000000000000000000000000000000000061210c565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015610cbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce09190612fba565b610cfc5760405162461bcd60e51b815260040161085590612fdc565b6001600160a01b038181166000818152600a60205260409081902054905163a9059cbb60e01b8152600481019290925260248201819052917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da39190612fba565b610def5760405162461bcd60e51b815260206004820152601c60248201527f503a434f4e434c5544455f5749544844524157414c5f4641494c4544000000006044820152606401610855565b6001600160a01b0382166000818152600a6020526040808220829055518392917f2687ab3014fc32ee1bbb5acb4d4879d56644ad540a426c06d7deaa8f127b232391a3506109ad6001600555565b600033610e4b858285612201565b610e56858585612279565b60019150505b9392505050565b610e6b6122d8565b828114610eb25760405162461bcd60e51b8152602060048201526015602482015274140e905494905654d7d25390d3d394d254d5115395605a1b6044820152606401610855565b60005b818110156111d6576000838383818110610ed157610ed1613044565b9050602002016020810190610ee691906130bf565b61ffff1690506000868684818110610f0057610f00613044565b336000908152600d6020908152604090912054910292909201359250508210610f5d5760405162461bcd60e51b815260206004820152600f60248201526e0a074929cac82989288be929c888ab608b1b6044820152606401610855565b336000908152600d60205260408120805484908110610f7e57610f7e613044565b600091825260209182902060408051606081018252600390930290910180546001600160a01b0316835260018101549383019390935260029092015491810182905291504210156110035760405162461bcd60e51b815260206004820152600f60248201526e140e9513d2d15394d7d313d0d2d151608a1b6044820152606401610855565b818160200151101580156110265750336000908152602081905260409020548211155b6110695760405162461bcd60e51b8152602060048201526014602482015273503a494e53554646494349454e545f46554e445360601b6044820152606401610855565b61107333836122fe565b817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f69190613002565b101561115557336000908152600a60205260408120805484929061111b908490613093565b9091555050604051829033907f39d9cf4ffb93650d8ce789639cb8cf3c8d7b039e1f9795c038af55b4ae643fca90600090a35050506111c4565b81816020018181516111679190613031565b9052506020810151600003611180576111803384612334565b61118a338361246f565b50611193612507565b604051829033907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b6590600090a35050505b806111ce816130a6565b915050610eb5565b5050505050565b60405163486b3ed360e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063486b3ed3906024015b600060405180830381600087803b15801561124157600080fd5b505af11580156111d6573d6000803e3d6000fd5b6001600160a01b0382166000908152600d602052604081205482106112ae5760405162461bcd60e51b815260206004820152600f60248201526e0a074929cac82989288be929c888ab608b1b6044820152606401610855565b6001600160a01b0383166000908152600d602052604081208054849081106112d8576112d8613044565b600091825260209182902060408051606081018252600390930290910180546001600160a01b031683526001810154938301939093526002909201549181018290529150421061132d57602001519050610a10565b6000915050610a10565b6113607f000000000000000000000000000000000000000000000000000000000000000061210c565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa1580156113a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113ca9190612fba565b6113e65760405162461bcd60e51b815260040161085590612fdc565b80600860008282546113f89190613093565b9091555060009050611408612611565b9050611414838261246f565b50505050565b6114437f000000000000000000000000000000000000000000000000000000000000000061210c565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015611489573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ad9190612fba565b6114c95760405162461bcd60e51b815260040161085590612fdc565b604051637050886b60e01b81526001600160a01b0382811660048301527f00000000000000000000000000000000000000000000000000000000000000001690637050886b90602401611227565b604051631d3b86b160e21b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906374ee1ac49061156590859085906004016130e3565b600060405180830381600087803b15801561157f57600080fd5b505af1158015611593573d6000803e3d6000fd5b505050505050565b600081116115dd5760405162461bcd60e51b815260206004820152600f60248201526e503a494e56414c49445f56414c554560881b6044820152606401610855565b336000908152600960205260409020548111156116355760405162461bcd60e51b8152602060048201526016602482015275503a494e53554646494349454e545f42414c414e434560501b6044820152606401610855565b61163f338261262e565b80600760008282546116519190613093565b90915550503360009081526009602052604081208054839290611675908490613031565b909155506116839050612507565b604051819033907fbd654390d0d973e8c8376ed6053be8658870df892687852cc5c914d700291b8790600090a350565b6116bb6121d7565b6116e47f000000000000000000000000000000000000000000000000000000000000000061210c565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa15801561172a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061174e9190612fba565b61176a5760405162461bcd60e51b815260040161085590612fdc565b6001600160a01b038181166000818152600b60205260409081902054905163a9059cbb60e01b8152600481019290925260248201819052917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156117ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118119190612fba565b61185d5760405162461bcd60e51b815260206004820152601860248201527f503a434f4e434c5544455f5245574152445f4641494c454400000000000000006044820152606401610855565b6001600160a01b0382166000818152600b6020526040808220829055518392917f3c7e767b6741d1e3a8f90a3c95937bb07453eaf2dfee591a5a308f04f498e8b891a3506109ad6001600555565b60606004805461072390612f80565b6118e37f000000000000000000000000000000000000000000000000000000000000000061210c565b604051630935e01b60e21b81523360048201526001600160a01b0391909116906324d7806c90602401602060405180830381865afa158015611929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061194d9190612fba565b6119695760405162461bcd60e51b815260040161085590612fdc565b601680546001600160a01b0319166001600160a01b0392909216919091179055565b600033610a0a818585612279565b6119a16122d8565b6119a96121d7565b6014548110156119f15760405162461bcd60e51b8152602060048201526013602482015272281d2222a82fa0a6aa2fa122a627abafa6a4a760691b6044820152606401610855565b601354816119fe60025490565b611a089190613093565b1115611a505760405162461bcd60e51b8152602060048201526017602482015276140e93505617d413d3d317d4d2569157d4915050d21151604a1b6044820152606401610855565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663209b2bca6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ab0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ad49190613131565b9050611ae08282612664565b506109ad6001600555565b3360009081526009602052604081205460007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b5b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b7f9190613002565b33600090815260096020526040812055905081811015611d9a576000611ba58284613031565b905080601660009054906101000a90046001600160a01b03166001600160a01b03166342103e8e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c1f9190613002565b1015611c8057336000908152600b602052604081208054859290611c44908490613093565b9091555050604051839033907f19adda954c72f22df5078ae925d620d455e095989b72be2f895e10473b53797790600090a36000935050505090565b601654604051633d2332c160e21b8152600481018390526001600160a01b039091169063f48ccb0490602401600060405180830381600087803b158015611cc657600080fd5b505af1158015611cda573d6000803e3d6000fd5b5050601654611cf592506001600160a01b031690508261262e565b8060076000828254611d079190613093565b90915550611d179050338461246f565b611d635760405162461bcd60e51b815260206004820152601b60248201527f503a4552524f525f5452414e5346455252494e475f52455741524400000000006044820152606401610855565b604051839033907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724190600090a36001935050505090565b611da4338361246f565b611df05760405162461bcd60e51b815260206004820152601b60248201527f503a4552524f525f5452414e5346455252494e475f52455741524400000000006044820152606401610855565b604051829033907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f724190600090a360019250505090565b611e2e6122d8565b611e366121d7565b601454821015611e7e5760405162461bcd60e51b8152602060048201526013602482015272281d2222a82fa0a6aa2fa122a627abafa6a4a760691b6044820152606401610855565b60135482611e8b60025490565b611e959190613093565b1115611edd5760405162461bcd60e51b8152602060048201526017602482015276140e93505617d413d3d317d4d2569157d4915050d21151604a1b6044820152606401610855565b60405163029333f560e01b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063029333f5906024016020604051808303816000875af1158015611f45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f699190612fba565b611fa75760405162461bcd60e51b815260206004820152600f60248201526e140e955392d393d5d397d054d4d155608a1b6044820152606401610855565b80611fb28382612664565b50611fbd6001600555565b5050565b6010546001600160a01b0382166000908152600c602052604081205490914291611feb9190613093565b111561202a5760405162461bcd60e51b815260206004820152600e60248201526d140e9195539114d7d313d0d2d15160921b6044820152606401610855565b6040516370a0823160e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152610a10917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa1580156120b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120da9190613002565b6001600160a01b03841660009081526020819052604090205461277b565b60006121043383612791565b506001919050565b6000816001600160a01b031663c31245256040518163ffffffff1660e01b8152600401602060405180830381865afa15801561214c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a109190613131565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b1790526114149085906128b5565b610c408383836001612918565b6002600554036121fa57604051633ee5aeb560e01b815260040160405180910390fd5b6002600555565b6001600160a01b038381166000908152600160209081526040808320938616835292905220546000198114611414578181101561226a57604051637dc7a0d960e11b81526001600160a01b03841660048201526024810182905260448101839052606401610855565b61141484848484036000612918565b6001600160a01b0383166122a357604051634b637e8f60e11b815260006004820152602401610855565b6001600160a01b0382166122cd5760405163ec442f0560e01b815260006004820152602401610855565b610c408383836129ed565b60065460ff16156122fc5760405163d93c066560e01b815260040160405180910390fd5b565b6001600160a01b03821661232857604051634b637e8f60e11b815260006004820152602401610855565b611fbd826000836129ed565b6001600160a01b0382166000908152600d602052604081205461235990600190613031565b9050808214612413576001600160a01b0383166000908152600d6020526040902080548290811061238c5761238c613044565b9060005260206000209060030201600d6000856001600160a01b03166001600160a01b0316815260200190815260200160002083815481106123d0576123d0613044565b60009182526020909120825460039092020180546001600160a01b0319166001600160a01b03909216919091178155600180830154908201556002918201549101555b6001600160a01b0383166000908152600d6020526040902080548061243a5761243a61314e565b60008281526020812060036000199093019283020180546001600160a01b031916815560018101829055600201559055505050565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af11580156124e3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e5c9190612fba565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f2047d1633ff7768462ae07d28cb16e484203bfd6d85ce832494270ebcd9081a27f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125fe9190613002565b60405190815260200160405180910390a3565b600060085461261f60025490565b6126299190613031565b905090565b6001600160a01b0382166126585760405163ec442f0560e01b815260006004820152602401610855565b611fbd600083836129ed565b336000908152600d602090815260409182902082516060810184526001600160a01b0385168152918201859052600f5490928201906126a39042613093565b90528154600180820184556000938452602093849020835160039093020180546001600160a01b0319166001600160a01b039384161781559383015190840155604090910151600290920191909155612720908216337f000000000000000000000000000000000000000000000000000000000000000085612170565b61272a338361262e565b816007600082825461273c9190613093565b9091555061274a9050612507565b604051829033907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c90600090a35050565b600081831061278a5781610e5c565b5090919050565b6010546001600160a01b0383166000908152600c602052604090205442916127b891613093565b11156127f75760405162461bcd60e51b815260206004820152600e60248201526d140e9195539114d7d313d0d2d15160921b6044820152606401610855565b80612817836001600160a01b031660009081526020819052604090205490565b101561285e5760405162461bcd60e51b8152602060048201526016602482015275503a494e53554646494349454e545f42414c414e434560501b6044820152606401610855565b612866612b17565b811115611fbd5760405162461bcd60e51b815260206004820152601860248201527f503a494e53554646494349454e545f4c495155494449545900000000000000006044820152606401610855565b60006128ca6001600160a01b03841683612bc6565b905080516000141580156128ef5750808060200190518101906128ed9190612fba565b155b15610c4057604051635274afe760e01b81526001600160a01b0384166004820152602401610855565b6001600160a01b0384166129425760405163e602df0560e01b815260006004820152602401610855565b6001600160a01b03831661296c57604051634a1406b160e11b815260006004820152602401610855565b6001600160a01b038085166000908152600160209081526040808320938716835292905220829055801561141457826001600160a01b0316846001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040516129df91815260200190565b60405180910390a350505050565b6001600160a01b038316612a18578060026000828254612a0d9190613093565b90915550612a8a9050565b6001600160a01b03831660009081526020819052604090205481811015612a6b5760405163391434e360e21b81526001600160a01b03851660048201526024810182905260448101839052606401610855565b6001600160a01b03841660009081526020819052604090209082900390555b6001600160a01b038216612aa657600280548290039055612ac5565b6001600160a01b03821660009081526020819052604090208054820190555b816001600160a01b0316836001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051612b0a91815260200190565b60405180910390a3505050565b6040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa158015612ba2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126299190613002565b6060610e5c8383600084600080856001600160a01b03168486604051612bec9190613164565b60006040518083038185875af1925050503d8060008114612c29576040519150601f19603f3d011682016040523d82523d6000602084013e612c2e565b606091505b5091509150612c3e868383612c48565b9695505050505050565b606082612c5d57612c5882612ca4565b610e5c565b8151158015612c7457506001600160a01b0384163b155b15612c9d57604051639996b31560e01b81526001600160a01b0385166004820152602401610855565b5080610e5c565b805115612cb45780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60005b83811015612ce8578181015183820152602001612cd0565b50506000910152565b6020815260008251806020840152612d10816040850160208701612ccd565b601f01601f19169190910160400192915050565b6001600160a01b03811681146109ad57600080fd5b600060208284031215612d4b57600080fd5b8135610e5c81612d24565b600060208284031215612d6857600080fd5b5035919050565b60008060408385031215612d8257600080fd5b8235612d8d81612d24565b946020939093013593505050565b60008083601f840112612dad57600080fd5b50813567ffffffffffffffff811115612dc557600080fd5b6020830191508360208260051b8501011115612de057600080fd5b9250929050565b600080600060408486031215612dfc57600080fd5b83359250602084013567ffffffffffffffff811115612e1a57600080fd5b612e2686828701612d9b565b9497909650939450505050565b600080600060608486031215612e4857600080fd5b8335612e5381612d24565b92506020840135612e6381612d24565b929592945050506040919091013590565b60008060008060408587031215612e8a57600080fd5b843567ffffffffffffffff80821115612ea257600080fd5b612eae88838901612d9b565b90965094506020870135915080821115612ec757600080fd5b50612ed487828801612d9b565b95989497509550505050565b60008060208385031215612ef357600080fd5b823567ffffffffffffffff811115612f0a57600080fd5b612f1685828601612d9b565b90969095509350505050565b60008060408385031215612f3557600080fd5b823591506020830135612f4781612d24565b809150509250929050565b60008060408385031215612f6557600080fd5b8235612f7081612d24565b91506020830135612f4781612d24565b600181811c90821680612f9457607f821691505b602082108103612fb457634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215612fcc57600080fd5b81518015158114610e5c57600080fd5b6020808252600c908201526b28231d2727aa2fa0a226a4a760a11b604082015260600190565b60006020828403121561301457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b81810381811115610a1057610a1061301b565b634e487b7160e01b600052603260045260246000fd5b8082028115828204841417610a1057610a1061301b565b60008261308e57634e487b7160e01b600052601260045260246000fd5b500490565b80820180821115610a1057610a1061301b565b6000600182016130b8576130b861301b565b5060010190565b6000602082840312156130d157600080fd5b813561ffff81168114610e5c57600080fd5b60208082528181018390526000908460408401835b8681101561312657823561310b81612d24565b6001600160a01b0316825291830191908301906001016130f8565b509695505050505050565b60006020828403121561314357600080fd5b8151610e5c81612d24565b634e487b7160e01b600052603160045260246000fd5b60008251613176818460208701612ccd565b919091019291505056fea26469706673582212207b5cb95d8234d0159ad947145b21b06cc80994d51967e8c2aa795bfd6183337964736f6c63430008140033",
    "sourceMap": "864:5302:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89:45;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1455:42:6;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1204:25:60;;;1192:2;1177:18;1455:42:6;1058:177:60;9744:377:6;;;;;;:::i;:::-;;:::i;:::-;;1743:57;;;;;;:::i;:::-;;:::i;:::-;;;;-1:-1:-1;;;;;1981:32:60;;;1963:51;;2045:2;2030:18;;2023:34;;;;2073:18;;;2066:34;1951:2;1936:18;1743:57:6;1745:361:60;4293:186:45;;;;;;:::i;:::-;;:::i;:::-;;;2276:14:60;;2269:22;2251:41;;2239:2;2224:18;4293:186:45;2111:187:60;1372:37:6;;;;;;;;-1:-1:-1;;;;;2467:32:60;;;2449:51;;2437:2;2422:18;1372:37:6;2303:203:60;1893:29:6;;;;;;3144:97:45;3222:12;;3144:97;;4130:590:10;;;;;;:::i;:::-;;:::i;8442:405:6:-;;;;;;:::i;:::-;;:::i;1085:38::-;;;;;5039:244:45;;;;;;:::i;:::-;;:::i;1656:46:6:-;;;;;;:::i;:::-;;;;;;;;;;;;;;5445:1500;;;;;;:::i;:::-;;:::i;933:30:10:-;;;;;-1:-1:-1;;;;;933:30:10;;;3768:110;;;5255:4:60;3848:22:10;5243:17:60;5225:36;;5213:2;5198:18;3768:110:10;5083:184:60;1562:49:6;;;;;;:::i;:::-;;;;;;;;;;;;;;10289:152;;;;;;:::i;:::-;;:::i;3091:24::-;;;;;;;;;;;;;;;;;;;;;;;;;;5559:25:60;;;5615:2;5600:18;;5593:34;;;;5643:18;;;5636:34;;;;5701:2;5686:18;;5679:34;5744:3;5729:19;;5722:35;5788:3;5773:19;;5766:35;5546:3;5531:19;3091:24:6;5272:535:60;1850:84:52;1920:7;;;;1850:84;;10614:97:6;10688:15;10614:97;;7779:403;;;;;;:::i;:::-;;:::i;9457:203::-;;;;;;:::i;:::-;;:::i;10127:156::-;;;;;;:::i;:::-;;:::i;3299:116:45:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:45;3364:7;3390:18;;;;;;;;;;;;3299:116;10447:161:6;;;;;;:::i;:::-;;:::i;7371:365::-;;;;;;:::i;:::-;;:::i;9013:385::-;;;;;;:::i;:::-;;:::i;2276:93:45:-;;;:::i;984:49:6:-;;;;;852:47;;;;;;;;;;;;;;;-1:-1:-1;;;852:47:6;;;;;4726:121:10;;;;;;:::i;:::-;;:::i;3610:178:45:-;;;;;;:::i;:::-;;:::i;1338:27:6:-;;;;;;3843:365;;;;;;:::i;:::-;;:::i;2079:1152:10:-;;;:::i;4340:461:6:-;;;;;;:::i;:::-;;:::i;3846:140:45:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3952:18:45;;;3926:7;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3846:140;1503:53:6;;;;;;:::i;:::-;;;;;;;;;;;;;;905:39;;;;;;;;;;;;;;;-1:-1:-1;;;905:39:6;;;;;1807:28;;;;;;3379:284:10;;;;;;:::i;:::-;;:::i;3237:136::-;;;;;;:::i;:::-;;:::i;3669:93::-;3744:11;;3669:93;;2074:89:45;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;9744:377:6:-;11561:22;11570:12;11561:8;:22::i;:::-;:42;;-1:-1:-1;;;11561:42:6;;11592:10;11561:42;;;2449:51:60;-1:-1:-1;;;;;11561:30:6;;;;;;;2422:18:60;;11561:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1;;;11553:67:6;;;;;;;:::i;:::-;;;;;;;;;9820:36:::1;::::0;-1:-1:-1;;;9820:36:6;;9845:10:::1;9820:36;::::0;::::1;2449:51:60::0;9860:7:6;;9820:14:::1;-1:-1:-1::0;;;;;9820:24:6::1;::::0;::::1;::::0;2422:18:60;;9820:36:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;9812:80;;;::::0;-1:-1:-1;;;9812:80:6;;8598:2:60;9812:80:6::1;::::0;::::1;8580:21:60::0;8637:2;8617:18;;;8610:30;-1:-1:-1;;;8656:18:60;;;8649:50;8716:18;;9812:80:6::1;8396:344:60::0;9812:80:6::1;9917:12;;9906:7;:23;9902:124;;9960:1;9945:12;:16:::0;9902:124:::1;;;10008:7;9992:12;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;9902:124:6::1;10036:78;-1:-1:-1::0;;;;;10036:14:6::1;:31;10068:10;10088:15;10106:7:::0;10036:31:::1;:78::i;:::-;9744:377:::0;:::o;1743:57::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1743:57:6;;;;-1:-1:-1;1743:57:6;;-1:-1:-1;1743:57:6;:::o;4293:186:45:-;4366:4;735:10:51;4420:31:45;735:10:51;4436:7:45;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;;:::o;4130:590:10:-;11561:22:6;11570:12;11561:8;:22::i;:::-;:42;;-1:-1:-1;;;11561:42:6;;11592:10;11561:42;;;2449:51:60;-1:-1:-1;;;;;11561:30:6;;;;;;;2422:18:60;;11561:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1;;;11553:67:6;;;;;;;:::i;:::-;2356:21:53::1;:19;:21::i;:::-;4272:1:10::2;4262:7;:11;4254:39;;;::::0;-1:-1:-1;;;4254:39:10;;9212:2:60;4254:39:10::2;::::0;::::2;9194:21:60::0;9251:2;9231:18;;;9224:30;-1:-1:-1;;;9270:18:60;;;9263:45;9325:18;;4254:39:10::2;9010:339:60::0;4254:39:10::2;4311:19:::0;4303:46:::2;;;::::0;-1:-1:-1;;;4303:46:10;;9556:2:60;4303:46:10::2;::::0;::::2;9538:21:60::0;9595:2;9575:18;;;9568:30;-1:-1:-1;;;9614:18:60;;;9607:44;9668:18;;4303:46:10::2;9354:338:60::0;4303:46:10::2;4364:9;4359:355;4379:19:::0;;::::2;4359:355;;;4419:14;4436:8;;4445:1;4436:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4419:28;;4462:21;4486:17;4496:6;-1:-1:-1::0;;;;;3390:18:45;3364:7;3390:18;;;;;;;;;;;;3299:116;4486:17:10::2;4564:27:::0;;4462:41;;-1:-1:-1;4517:19:10::2;::::0;4540:20:::2;4462:41:::0;4556:4:::2;4540:20;:::i;:::-;4539:52;;;;:::i;:::-;4517:74:::0;-1:-1:-1;4605:21:10::2;4653:4;4629:21;4643:7:::0;4517:74;4629:21:::2;:::i;:::-;:28;;;;:::i;:::-;-1:-1:-1::0;;;;;4671:15:10;::::2;;::::0;;;:7:::2;:15;::::0;;;;:32;;4605:52;;-1:-1:-1;4605:52:10;;4671:15;;;:32:::2;::::0;4605:52;;4671:32:::2;:::i;:::-;;;;;;;;4405:309;;;;4400:3;;;;;:::i;:::-;;;;4359:355;;;;2398:20:53::1;1713:1:::0;2924:7;:21;2744:208;2398:20:::1;4130:590:10::0;;;:::o;8442:405:6:-;2356:21:53;:19;:21::i;:::-;11561:22:6::1;11570:12;11561:8;:22::i;:::-;:42;::::0;-1:-1:-1;;;11561:42:6;;11592:10:::1;11561:42;::::0;::::1;2449:51:60::0;-1:-1:-1;;;;;11561:30:6;;;::::1;::::0;::::1;::::0;2422:18:60;;11561:42:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1::0;;;11553:67:6::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;8556:30:6;;::::2;8539:14;8556:30:::0;;;:18:::2;:30;::::0;;;;;;;8604:44;;-1:-1:-1;;;8604:44:6;;::::2;::::0;::::2;10668:51:60::0;;;;10735:18;;;10728:34;;;8556:30:6;8604:15:::2;:24;::::0;::::2;::::0;10641:18:60;;8604:44:6::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8596:85;;;::::0;-1:-1:-1;;;8596:85:6;;10975:2:60;8596:85:6::2;::::0;::::2;10957:21:60::0;11014:2;10994:18;;;10987:30;11053;11033:18;;;11026:58;11101:18;;8596:85:6::2;10773:352:60::0;8596:85:6::2;-1:-1:-1::0;;;;;8749:30:6;::::2;;::::0;;;:18:::2;:30;::::0;;;;;8742:37;;;8794:46;8833:6;;8749:30;8794:46:::2;::::0;::::2;8529:318;2398:20:53::0;1713:1;2924:7;:21;2744:208;5039:244:45;5126:4;735:10:51;5182:37:45;5198:4;735:10:51;5213:5:45;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;;:::o;5445:1500:6:-;1474:19:52;:17;:19::i;:::-;5559:34:6;;::::1;5551:68;;;::::0;-1:-1:-1;;;5551:68:6;;11332:2:60;5551:68:6::1;::::0;::::1;11314:21:60::0;11371:2;11351:18;;;11344:30;-1:-1:-1;;;11390:18:60;;;11383:51;11451:18;;5551:68:6::1;11130:345:60::0;5551:68:6::1;5634:9;5629:1310;5649:19:::0;;::::1;5629:1310;;;5689:14;5706:8;;5715:1;5706:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;5689:28;;;;5731:15;5749:8;;5758:1;5749:11;;;;;;;:::i;:::-;5804:10;5791:24;::::0;;;:12:::1;5749:11;5791:24:::0;;;;;;;:31;5749:11;::::1;::::0;;;::::1;;::::0;-1:-1:-1;;5782:40:6;::::1;5774:68;;;::::0;-1:-1:-1;;;5774:68:6;;11959:2:60;5774:68:6::1;::::0;::::1;11941:21:60::0;11998:2;11978:18;;;11971:30;-1:-1:-1;;;12017:18:60;;;12010:45;12072:18;;5774:68:6::1;11757:339:60::0;5774:68:6::1;5903:10;5856:31;5890:24:::0;;;:12:::1;:24;::::0;;;;:32;;5915:6;;5890:32;::::1;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;5856:66:::1;::::0;;::::1;::::0;::::1;::::0;;5890:32:::1;::::0;;::::1;::::0;;::::1;5856:66:::0;;-1:-1:-1;;;;;5856:66:6::1;::::0;;;;::::1;::::0;;;::::1;::::0;;;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;5944:15:6::1;:38;;5936:66;;;::::0;-1:-1:-1;;;5936:66:6;;12303:2:60;5936:66:6::1;::::0;::::1;12285:21:60::0;12342:2;12322:18;;;12315:30;-1:-1:-1;;;12361:18:60;;;12354:45;12416:18;;5936:66:6::1;12101:339:60::0;5936:66:6::1;6043:7;6024:8;:15;;;:26;;:62;;;;-1:-1:-1::0;6064:10:6::1;3364:7:45::0;3390:18;;;;;;;;;;;6079:7:6;-1:-1:-1;6054:32:6::1;6024:62;6016:95;;;::::0;-1:-1:-1;;;6016:95:6;;12647:2:60;6016:95:6::1;::::0;::::1;12629:21:60::0;12686:2;12666:18;;;12659:30;-1:-1:-1;;;12705:18:60;;;12698:50;12765:18;;6016:95:6::1;12445:344:60::0;6016:95:6::1;6126:26;6132:10;6144:7;6126:5;:26::i;:::-;6308:7;6275:15;-1:-1:-1::0;;;;;6275:28:6::1;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;6271:207;;;6354:10;6335:30;::::0;;;:18:::1;:30;::::0;;;;:41;;6369:7;;6335:30;:41:::1;::::0;6369:7;;6335:41:::1;:::i;:::-;::::0;;;-1:-1:-1;;6399:38:6::1;::::0;6429:7;;6417:10:::1;::::0;6399:38:::1;::::0;;;::::1;6455:8;;;;;6271:207;6511:7;6492:8;:15;;:26;;;;;;;:::i;:::-;::::0;;-1:-1:-1;6686:15:6::1;::::0;::::1;::::0;6705:1:::1;6686:20:::0;6682:92:::1;;6726:33;6740:10;6752:6;6726:13;:33::i;:::-;6788:50;6818:10;6830:7;6788:29;:50::i;:::-;;6852:26;:24;:26::i;:::-;6897:31;::::0;6920:7;;6908:10:::1;::::0;6897:31:::1;::::0;;;::::1;5675:1264;;;5629:1310;5670:3:::0;::::1;::::0;::::1;:::i;:::-;;;;5629:1310;;;;5445:1500:::0;;;;:::o;10289:152::-;10372:62;;-1:-1:-1;;;10372:62:6;;-1:-1:-1;;;;;2467:32:60;;;10372:62:6;;;2449:51:60;10372:15:6;:45;;;;2422:18:60;;10372:62:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7779:403;-1:-1:-1;;;;;7898:19:6;;7862:7;7898:19;;;:12;:19;;;;;:26;7889:35;;7881:63;;;;-1:-1:-1;;;7881:63:6;;11959:2:60;7881:63:6;;;11941:21:60;11998:2;11978:18;;;11971:30;-1:-1:-1;;;12017:18:60;;;12010:45;12072:18;;7881:63:6;11757:339:60;7881:63:6;-1:-1:-1;;;;;7995:19:6;;7954:38;7995:19;;;:12;:19;;;;;:27;;8015:6;;7995:27;;;;;;:::i;:::-;;;;;;;;;;7954:68;;;;;;;;7995:27;;;;;;;7954:68;;-1:-1:-1;;;;;7954:68:6;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8036:15:6;:45;8032:144;;8104:22;;;;-1:-1:-1;8097:29:6;;8032:144;8164:1;8157:8;;;;;9457:203;11561:22;11570:12;11561:8;:22::i;:::-;:42;;-1:-1:-1;;;11561:42:6;;11592:10;11561:42;;;2449:51:60;-1:-1:-1;;;;;11561:30:6;;;;;;;2422:18:60;;11561:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1;;;11553:67:6;;;;;;;:::i;:::-;9550:7:::1;9534:12;;:23;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;9567:14:6::1;::::0;-1:-1:-1;9584:17:6::1;:15;:17::i;:::-;9567:34;;9611:42;9641:3;9646:6;9611:29;:42::i;:::-;;9524:136;9457:203:::0;;:::o;10127:156::-;11561:22;11570:12;11561:8;:22::i;:::-;:42;;-1:-1:-1;;;11561:42:6;;11592:10;11561:42;;;2449:51:60;-1:-1:-1;;;;;11561:30:6;;;;;;;2422:18:60;;11561:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1;;;11553:67:6;;;;;;;:::i;:::-;10217:59:::1;::::0;-1:-1:-1;;;10217:59:6;;-1:-1:-1;;;;;2467:32:60;;;10217:59:6::1;::::0;::::1;2449:51:60::0;10217:15:6::1;:42;::::0;::::1;::::0;2422:18:60;;10217:59:6::1;2303:203:60::0;10447:161:6;10540:61;;-1:-1:-1;;;10540:61:6;;-1:-1:-1;;;;;10540:15:6;:43;;;;:61;;10584:16;;;;10540:61;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10447:161;;:::o;7371:365::-;7443:1;7433:7;:11;7425:39;;;;-1:-1:-1;;;7425:39:6;;9212:2:60;7425:39:6;;;9194:21:60;9251:2;9231:18;;;9224:30;-1:-1:-1;;;9270:18:60;;;9263:45;9325:18;;7425:39:6;9010:339:60;7425:39:6;7490:10;7482:19;;;;:7;:19;;;;;;:30;-1:-1:-1;7482:30:6;7474:65;;;;-1:-1:-1;;;7474:65:6;;13706:2:60;7474:65:6;;;13688:21:60;13745:2;13725:18;;;13718:30;-1:-1:-1;;;13764:18:60;;;13757:52;13826:18;;7474:65:6;13504:346:60;7474:65:6;7550:26;7556:10;7568:7;7550:5;:26::i;:::-;7601:7;7586:11;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;7627:10:6;7619:19;;;;:7;:19;;;;;:30;;7642:7;;7619:19;:30;;7642:7;;7619:30;:::i;:::-;;;;-1:-1:-1;7659:26:6;;-1:-1:-1;7659:24:6;:26::i;:::-;7700:29;;7721:7;;7709:10;;7700:29;;;;;7371:365;:::o;9013:385::-;2356:21:53;:19;:21::i;:::-;11561:22:6::1;11570:12;11561:8;:22::i;:::-;:42;::::0;-1:-1:-1;;;11561:42:6;;11592:10:::1;11561:42;::::0;::::1;2449:51:60::0;-1:-1:-1;;;;;11561:30:6;;;::::1;::::0;::::1;::::0;2422:18:60;;11561:42:6::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1::0;;;11553:67:6::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9123:26:6;;::::2;9106:14;9123:26:::0;;;:14:::2;:26;::::0;;;;;;;9167:44;;-1:-1:-1;;;9167:44:6;;::::2;::::0;::::2;10668:51:60::0;;;;10735:18;;;10728:34;;;9123:26:6;9167:15:::2;:24;::::0;::::2;::::0;10641:18:60;;9167:44:6::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9159:81;;;::::0;-1:-1:-1;;;9159:81:6;;14057:2:60;9159:81:6::2;::::0;::::2;14039:21:60::0;14096:2;14076:18;;;14069:30;14135:26;14115:18;;;14108:54;14179:18;;9159:81:6::2;13855:348:60::0;9159:81:6::2;-1:-1:-1::0;;;;;9308:26:6;::::2;;::::0;;;:14:::2;:26;::::0;;;;;9301:33;;;9349:42;9384:6;;9308:26;9349:42:::2;::::0;::::2;9096:302;2398:20:53::0;1713:1;2924:7;:21;2744:208;2276:93:45;2323:13;2355:7;2348:14;;;;;:::i;4726:121:10:-;11561:22:6;11570:12;11561:8;:22::i;:::-;:42;;-1:-1:-1;;;11561:42:6;;11592:10;11561:42;;;2449:51:60;-1:-1:-1;;;;;11561:30:6;;;;;;;2422:18:60;;11561:42:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11553:67;;;;-1:-1:-1;;;11553:67:6;;;;;;;:::i;:::-;4801:11:10::1;:39:::0;;-1:-1:-1;;;;;;4801:39:10::1;-1:-1:-1::0;;;;;4801:39:10;;;::::1;::::0;;;::::1;::::0;;4726:121::o;3610:178:45:-;3679:4;735:10:51;3733:27:45;735:10:51;3750:2:45;3754:5;3733:9;:27::i;3843:365:6:-;1474:19:52;:17;:19::i;:::-;2356:21:53::1;:19;:21::i;:::-;3950:28:6::0;;3939:39;::::2;;3931:71;;;::::0;-1:-1:-1;;;3931:71:6;;14410:2:60;3931:71:6::2;::::0;::::2;14392:21:60::0;14449:2;14429:18;;;14422:30;-1:-1:-1;;;14468:18:60;;;14461:49;14527:18;;3931:71:6::2;14208:343:60::0;3931:71:6::2;4047:27:::0;;4036:7;4020:13:::2;3222:12:45::0;;;3144:97;4020:13:6::2;:23;;;;:::i;:::-;:54;;4012:90;;;::::0;-1:-1:-1;;;4012:90:6;;14758:2:60;4012:90:6::2;::::0;::::2;14740:21:60::0;14797:2;14777:18;;;14770:30;-1:-1:-1;;;14816:18:60;;;14809:53;14879:18;;4012:90:6::2;14556:347:60::0;4012:90:6::2;4113:13;4129:15;-1:-1:-1::0;;;;;4129:30:6::2;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4113:48;;4172:29;4185:7;4194:6;4172:12;:29::i;:::-;3921:287;2398:20:53::1;1713:1:::0;2924:7;:21;2744:208;2079:1152:10;2177:10;2129:4;2169:19;;;:7;:19;;;;;;2251:20;2274:15;-1:-1:-1;;;;;2274:28:10;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2322:10;2336:1;2314:19;;;:7;:19;;;;;:23;2251:53;-1:-1:-1;2352:28:10;;;2348:693;;;2396:21;2420:28;2436:12;2420:13;:28;:::i;:::-;2396:52;;2491:13;2467:11;;;;;;;;;-1:-1:-1;;;;;2467:11:10;-1:-1:-1;;;;;2467:19:10;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:37;2463:212;;;2539:10;2524:26;;;;:14;:26;;;;;:43;;2554:13;;2524:26;:43;;2554:13;;2524:43;:::i;:::-;;;;-1:-1:-1;;2590:40:10;;2616:13;;2604:10;;2590:40;;;;;2655:5;2648:12;;;;;2079:1152;:::o;2463:212::-;2688:11;;:49;;-1:-1:-1;;;2688:49:10;;;;;1204:25:60;;;-1:-1:-1;;;;;2688:11:10;;;;:34;;1177:18:60;;2688:49:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2765:11:10;;2751:42;;-1:-1:-1;;;;;;2765:11:10;;-1:-1:-1;2779:13:10;2751:5;:42::i;:::-;2822:13;2807:11;;:28;;;;;;;:::i;:::-;;;;-1:-1:-1;2857:56:10;;-1:-1:-1;2887:10:10;2899:13;2857:29;:56::i;:::-;2849:96;;;;-1:-1:-1;;;2849:96:10;;15723:2:60;2849:96:10;;;15705:21:60;15762:2;15742:18;;;15735:30;15801:29;15781:18;;;15774:57;15848:18;;2849:96:10;15521:351:60;2849:96:10;2965:40;;2991:13;;2979:10;;2965:40;;;;;3026:4;3019:11;;;;;2079:1152;:::o;2348:693::-;3059:56;3089:10;3101:13;3059:29;:56::i;:::-;3051:96;;;;-1:-1:-1;;;3051:96:10;;15723:2:60;3051:96:10;;;15705:21:60;15762:2;15742:18;;;15735:30;15801:29;15781:18;;;15774:57;15848:18;;3051:96:10;15521:351:60;3051:96:10;3163:40;;3189:13;;3177:10;;3163:40;;;;;3220:4;3213:11;;;;2079:1152;:::o;4340:461:6:-;1474:19:52;:17;:19::i;:::-;2356:21:53::1;:19;:21::i;:::-;4473:28:6::0;;4462:39;::::2;;4454:71;;;::::0;-1:-1:-1;;;4454:71:6;;14410:2:60;4454:71:6::2;::::0;::::2;14392:21:60::0;14449:2;14429:18;;;14422:30;-1:-1:-1;;;14468:18:60;;;14461:49;14527:18;;4454:71:6::2;14208:343:60::0;4454:71:6::2;4570:27:::0;;4559:7;4543:13:::2;3222:12:45::0;;;3144:97;4543:13:6::2;:23;;;;:::i;:::-;:54;;4535:90;;;::::0;-1:-1:-1;;;4535:90:6;;14758:2:60;4535:90:6::2;::::0;::::2;14740:21:60::0;14797:2;14777:18;;;14770:30;-1:-1:-1;;;14816:18:60;;;14809:53;14879:18;;4535:90:6::2;14556:347:60::0;4535:90:6::2;4643:48;::::0;-1:-1:-1;;;4643:48:6;;-1:-1:-1;;;;;2467:32:60;;;4643:48:6::2;::::0;::::2;2449:51:60::0;4643:15:6::2;:36;::::0;::::2;::::0;2422:18:60;;4643:48:6::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4635:76;;;::::0;-1:-1:-1;;;4635:76:6;;16079:2:60;4635:76:6::2;::::0;::::2;16061:21:60::0;16118:2;16098:18;;;16091:30;-1:-1:-1;;;16137:18:60;;;16130:45;16192:18;;4635:76:6::2;15877:339:60::0;4635:76:6::2;4744:10:::0;4766:28:::2;4779:7:::0;4744:10;4766:12:::2;:28::i;:::-;4444:357;2398:20:53::1;1713:1:::0;2924:7;:21;2744:208;2398:20:::1;4340:461:6::0;;:::o;3379:284:10:-;3493:8;:21;-1:-1:-1;;;;;3470:20:10;;3443:7;3470:20;;;:11;:20;;;;;;3443:7;;3518:15;;3470:44;;3493:21;3470:44;:::i;:::-;:63;;3462:90;;;;-1:-1:-1;;;3462:90:10;;16423:2:60;3462:90:10;;;16405:21:60;16462:2;16442:18;;;16435:30;-1:-1:-1;;;16481:18:60;;;16474:44;16535:18;;3462:90:10;16221:338:60;3462:90:10;3579:50;;-1:-1:-1;;;3579:50:10;;-1:-1:-1;;;;;3612:15:10;2467:32:60;;3579:50:10;;;2449:51:60;3570:86:10;;3579:14;:24;;;;;;2422:18:60;;3579:50:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3390:18:45;;3364:7;3390:18;;;;;;;;;;;3570:8:10;:86::i;3237:136::-;3297:4;3313:32;3326:10;3338:6;3313:12;:32::i;:::-;-1:-1:-1;3362:4:10;;3237:136;-1:-1:-1;3237:136:10:o;6002:162::-;6073:14;6134:11;-1:-1:-1;;;;;6121:33:10;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;1702:188:49:-;1829:53;;;-1:-1:-1;;;;;17100:15:60;;;1829:53:49;;;17082:34:60;17152:15;;17132:18;;;17125:43;17184:18;;;;17177:34;;;1829:53:49;;;;;;;;;;17017:18:60;;;;1829:53:49;;;;;;;;-1:-1:-1;;;;;1829:53:49;-1:-1:-1;;;1829:53:49;;;1802:81;;1822:5;;1802:19;:81::i;8989:128:45:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;2431:307:53:-;1755:1;2558:7;;:18;2554:86;;2599:30;;-1:-1:-1;;;2599:30:53;;;;;;;;;;;2554:86;1755:1;2714:7;:17;2431:307::o;10663:477:45:-;-1:-1:-1;;;;;3952:18:45;;;10762:24;3952:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;10828:37:45;;10824:310;;10904:5;10885:16;:24;10881:130;;;10936:60;;-1:-1:-1;;;10936:60:45;;-1:-1:-1;;;;;1981:32:60;;10936:60:45;;;1963:51:60;2030:18;;;2023:34;;;2073:18;;;2066:34;;;1936:18;;10936:60:45;1745:361:60;10881:130:45;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;5656:300::-;-1:-1:-1;;;;;5739:18:45;;5735:86;;5780:30;;-1:-1:-1;;;5780:30:45;;5807:1;5780:30;;;2449:51:60;2422:18;;5780:30:45;2303:203:60;5735:86:45;-1:-1:-1;;;;;5834:16:45;;5830:86;;5873:32;;-1:-1:-1;;;5873:32:45;;5902:1;5873:32;;;2449:51:60;2422:18;;5873:32:45;2303:203:60;5830:86:45;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;2002:128:52:-;1920:7;;;;2063:61;;;2098:15;;-1:-1:-1;;;2098:15:52;;;;;;;;;;;2063:61;2002:128::o;8247:206:45:-;-1:-1:-1;;;;;8317:21:45;;8313:89;;8361:30;;-1:-1:-1;;;8361:30:45;;8388:1;8361:30;;;2449:51:60;2422:18;;8361:30:45;2303:203:60;8313:89:45;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;6951:283:6:-;-1:-1:-1;;;;;7043:19:6;;7023:17;7043:19;;;:12;:19;;;;;:26;:30;;7072:1;;7043:30;:::i;:::-;7023:50;;7097:9;7087:6;:19;7083:110;;-1:-1:-1;;;;;7152:19:6;;;;;;:12;:19;;;;;:30;;7172:9;;7152:30;;;;;;:::i;:::-;;;;;;;;;;;7122:12;:19;7135:5;-1:-1:-1;;;;;7122:19:6;-1:-1:-1;;;;;7122:19:6;;;;;;;;;;;;7142:6;7122:27;;;;;;;;:::i;:::-;;;;;;;;;:60;;:27;;;;;:60;;-1:-1:-1;;;;;;7122:60:6;-1:-1:-1;;;;;7122:60:6;;;;;;;;;;;;;;;;;;;;;;;;;;7083:110;-1:-1:-1;;;;;7202:19:6;;;;;;:12;:19;;;;;:25;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;7202:25:6;;;;;;;;;-1:-1:-1;;;;;;7202:25:6;;;;;;;;;;;;;;-1:-1:-1;;;6951:283:6:o;10851:149::-;10958:35;;-1:-1:-1;;;10958:35:6;;-1:-1:-1;;;;;10686:32:60;;;10958:35:6;;;10668:51:60;10735:18;;;10728:34;;;10935:4:6;;10958:15;:24;;;;;;10641:18:60;;10958:35:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;11218:164::-;11327:14;-1:-1:-1;;;;;11278:97:6;11301:15;-1:-1:-1;;;;;11278:97:6;;11344:15;-1:-1:-1;;;;;11344:28:6;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11278:97;;1204:25:60;;;1192:2;1177:18;11278:97:6;;;;;;;11218:164::o;11043:111::-;11093:7;11135:12;;11119:13;3222:12:45;;;3144:97;11119:13:6;:28;;;;:::i;:::-;11112:35;;11043:111;:::o;7721:208:45:-;-1:-1:-1;;;;;7791:21:45;;7787:91;;7835:32;;-1:-1:-1;;;7835:32:45;;7864:1;7835:32;;;2449:51:60;2422:18;;7835:32:45;2303:203:60;7787:91:45;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;4807:458:6:-;4893:10;4880:24;;;;:12;:24;;;;;;;;;4923:95;;;;;;;-1:-1:-1;;;;;4923:95:6;;;;;;;;;;5002:14;;4880:24;;4923:95;;;4984:32;;:15;:32;:::i;:::-;4923:95;;4880:148;;;;;;;;-1:-1:-1;4880:148:6;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4880:148:6;-1:-1:-1;;;;;4880:148:6;;;;;;;;;;;;;;;;;;;;;;;;;;;5039:70;;:23;;5063:10;5083:15;5101:7;5039:23;:70::i;:::-;5120:26;5126:10;5138:7;5120:5;:26::i;:::-;5171:7;5156:11;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;5189:26:6;;-1:-1:-1;5189:24:6;:26::i;:::-;5230:28;;5250:7;;5238:10;;5230:28;;;;;4807:458;;:::o;2557:104:56:-;2615:7;2645:1;2641;:5;:13;;2653:1;2641:13;;;-1:-1:-1;2649:1:56;;2557:104;-1:-1:-1;2557:104:56:o;4853:333:10:-;4963:8;:21;-1:-1:-1;;;;;4940:20:10;;4963:21;4940:20;;;:11;:20;;;;;;4988:15;;4940:44;;;:::i;:::-;:63;;4932:90;;;;-1:-1:-1;;;4932:90:10;;16423:2:60;4932:90:10;;;16405:21:60;16462:2;16442:18;;;16435:30;-1:-1:-1;;;16481:18:60;;;16474:44;16535:18;;4932:90:10;16221:338:60;4932:90:10;5062:6;5040:18;5050:7;-1:-1:-1;;;;;3390:18:45;3364:7;3390:18;;;;;;;;;;;;3299:116;5040:18:10;:28;;5032:63;;;;-1:-1:-1;;;5032:63:10;;13706:2:60;5032:63:10;;;13688:21:60;13745:2;13725:18;;;13718:30;-1:-1:-1;;;13764:18:60;;;13757:52;13826:18;;5032:63:10;13504:346:60;5032:63:10;5123:27;:25;:27::i;:::-;5113:6;:37;;5105:74;;;;-1:-1:-1;;;5105:74:10;;17906:2:60;5105:74:10;;;17888:21:60;17945:2;17925:18;;;17918:30;17984:26;17964:18;;;17957:54;18028:18;;5105:74:10;17704:348:60;4059:629:49;4478:23;4504:33;-1:-1:-1;;;;;4504:27:49;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;-1:-1:-1;;;4631:40:49;;-1:-1:-1;;;;;2467:32:60;;4631:40:49;;;2449:51:60;2422:18;;4631:40:49;2303:203:60;9949:432:45;-1:-1:-1;;;;;10061:19:45;;10057:89;;10103:32;;-1:-1:-1;;;10103:32:45;;10132:1;10103:32;;;2449:51:60;2422:18;;10103:32:45;2303:203:60;10057:89:45;-1:-1:-1;;;;;10159:21:45;;10155:90;;10203:31;;-1:-1:-1;;;10203:31:45;;10231:1;10203:31;;;2449:51:60;2422:18;;10203:31:45;2303:203:60;10155:90:45;-1:-1:-1;;;;;10254:18:45;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;:35;;;10299:76;;;;10349:7;-1:-1:-1;;;;;10333:31:45;10342:5;-1:-1:-1;;;;;10333:31:45;;10358:5;10333:31;;;;1204:25:60;;1192:2;1177:18;;1058:177;10333:31:45;;;;;;;;9949:432;;;;:::o;6271:1107::-;-1:-1:-1;;;;;6360:18:45;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;6356:540:45;;-1:-1:-1;6356:540:45;;-1:-1:-1;;;;;6570:15:45;;6548:19;6570:15;;;;;;;;;;;6603:19;;;6599:115;;;6649:50;;-1:-1:-1;;;6649:50:45;;-1:-1:-1;;;;;1981:32:60;;6649:50:45;;;1963:51:60;2030:18;;;2023:34;;;2073:18;;;2066:34;;;1936:18;;6649:50:45;1745:361:60;6599:115:45;-1:-1:-1;;;;;6834:15:45;;:9;:15;;;;;;;;;;6852:19;;;;6834:37;;6356:540;-1:-1:-1;;;;;6910:16:45;;6906:425;;7073:12;:21;;;;;;;6906:425;;;-1:-1:-1;;;;;7284:13:45;;:9;:13;;;;;;;;;;:22;;;;;;6906:425;7361:2;-1:-1:-1;;;;;7346:25:45;7355:4;-1:-1:-1;;;;;7346:25:45;;7365:5;7346:25;;;;1204::60;;1192:2;1177:18;;1058:177;7346:25:45;;;;;;;;6271:1107;;;:::o;5227:143:10:-;5313:50;;-1:-1:-1;;;5313:50:10;;-1:-1:-1;;;;;5346:15:10;2467:32:60;;5313:50:10;;;2449:51:60;-1:-1:-1;;5313:14:10;:24;;;;;;2422:18:60;;5313:50:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2705:151:50:-;2780:12;2811:38;2833:6;2841:4;2847:1;2780:12;3421;3435:23;3462:6;-1:-1:-1;;;;;3462:11:50;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;3180:392;-1:-1:-1;;;;;;3180:392:50:o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:50;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:50;;-1:-1:-1;;;;;2467:32:60;;5121:24:50;;;2449:51:60;2422:18;;5121:24:50;2303:203:60;5041:119:50;-1:-1:-1;5180:10:50;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:50;;;;;;;;;;;14:250:60;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:60;238:16;;231:27;14:250::o;269:396::-;418:2;407:9;400:21;381:4;450:6;444:13;493:6;488:2;477:9;473:18;466:34;509:79;581:6;576:2;565:9;561:18;556:2;548:6;544:15;509:79;:::i;:::-;649:2;628:15;-1:-1:-1;;624:29:60;609:45;;;;656:2;605:54;;269:396;-1:-1:-1;;269:396:60:o;670:131::-;-1:-1:-1;;;;;745:31:60;;735:42;;725:70;;791:1;788;781:12;806:247;865:6;918:2;906:9;897:7;893:23;889:32;886:52;;;934:1;931;924:12;886:52;973:9;960:23;992:31;1017:5;992:31;:::i;1240:180::-;1299:6;1352:2;1340:9;1331:7;1327:23;1323:32;1320:52;;;1368:1;1365;1358:12;1320:52;-1:-1:-1;1391:23:60;;1240:180;-1:-1:-1;1240:180:60:o;1425:315::-;1493:6;1501;1554:2;1542:9;1533:7;1529:23;1525:32;1522:52;;;1570:1;1567;1560:12;1522:52;1609:9;1596:23;1628:31;1653:5;1628:31;:::i;:::-;1678:5;1730:2;1715:18;;;;1702:32;;-1:-1:-1;;;1425:315:60:o;2511:367::-;2574:8;2584:6;2638:3;2631:4;2623:6;2619:17;2615:27;2605:55;;2656:1;2653;2646:12;2605:55;-1:-1:-1;2679:20:60;;2722:18;2711:30;;2708:50;;;2754:1;2751;2744:12;2708:50;2791:4;2783:6;2779:17;2767:29;;2851:3;2844:4;2834:6;2831:1;2827:14;2819:6;2815:27;2811:38;2808:47;2805:67;;;2868:1;2865;2858:12;2805:67;2511:367;;;;;:::o;2883:505::-;2978:6;2986;2994;3047:2;3035:9;3026:7;3022:23;3018:32;3015:52;;;3063:1;3060;3053:12;3015:52;3099:9;3086:23;3076:33;;3160:2;3149:9;3145:18;3132:32;3187:18;3179:6;3176:30;3173:50;;;3219:1;3216;3209:12;3173:50;3258:70;3320:7;3311:6;3300:9;3296:22;3258:70;:::i;:::-;2883:505;;3347:8;;-1:-1:-1;3232:96:60;;-1:-1:-1;;;;2883:505:60:o;3617:456::-;3694:6;3702;3710;3763:2;3751:9;3742:7;3738:23;3734:32;3731:52;;;3779:1;3776;3769:12;3731:52;3818:9;3805:23;3837:31;3862:5;3837:31;:::i;:::-;3887:5;-1:-1:-1;3944:2:60;3929:18;;3916:32;3957:33;3916:32;3957:33;:::i;:::-;3617:456;;4009:7;;-1:-1:-1;;;4063:2:60;4048:18;;;;4035:32;;3617:456::o;4078:772::-;4199:6;4207;4215;4223;4276:2;4264:9;4255:7;4251:23;4247:32;4244:52;;;4292:1;4289;4282:12;4244:52;4332:9;4319:23;4361:18;4402:2;4394:6;4391:14;4388:34;;;4418:1;4415;4408:12;4388:34;4457:70;4519:7;4510:6;4499:9;4495:22;4457:70;:::i;:::-;4546:8;;-1:-1:-1;4431:96:60;-1:-1:-1;4634:2:60;4619:18;;4606:32;;-1:-1:-1;4650:16:60;;;4647:36;;;4679:1;4676;4669:12;4647:36;;4718:72;4782:7;4771:8;4760:9;4756:24;4718:72;:::i;:::-;4078:772;;;;-1:-1:-1;4809:8:60;-1:-1:-1;;;;4078:772:60:o;5812:437::-;5898:6;5906;5959:2;5947:9;5938:7;5934:23;5930:32;5927:52;;;5975:1;5972;5965:12;5927:52;6015:9;6002:23;6048:18;6040:6;6037:30;6034:50;;;6080:1;6077;6070:12;6034:50;6119:70;6181:7;6172:6;6161:9;6157:22;6119:70;:::i;:::-;6208:8;;6093:96;;-1:-1:-1;5812:437:60;-1:-1:-1;;;;5812:437:60:o;6486:315::-;6554:6;6562;6615:2;6603:9;6594:7;6590:23;6586:32;6583:52;;;6631:1;6628;6621:12;6583:52;6667:9;6654:23;6644:33;;6727:2;6716:9;6712:18;6699:32;6740:31;6765:5;6740:31;:::i;:::-;6790:5;6780:15;;;6486:315;;;;;:::o;6806:388::-;6874:6;6882;6935:2;6923:9;6914:7;6910:23;6906:32;6903:52;;;6951:1;6948;6941:12;6903:52;6990:9;6977:23;7009:31;7034:5;7009:31;:::i;:::-;7059:5;-1:-1:-1;7116:2:60;7101:18;;7088:32;7129:33;7088:32;7129:33;:::i;7199:380::-;7278:1;7274:12;;;;7321;;;7342:61;;7396:4;7388:6;7384:17;7374:27;;7342:61;7449:2;7441:6;7438:14;7418:18;7415:38;7412:161;;7495:10;7490:3;7486:20;7483:1;7476:31;7530:4;7527:1;7520:15;7558:4;7555:1;7548:15;7412:161;;7199:380;;;:::o;7584:277::-;7651:6;7704:2;7692:9;7683:7;7679:23;7675:32;7672:52;;;7720:1;7717;7710:12;7672:52;7752:9;7746:16;7805:5;7798:13;7791:21;7784:5;7781:32;7771:60;;7827:1;7824;7817:12;7866:336;8068:2;8050:21;;;8107:2;8087:18;;;8080:30;-1:-1:-1;;;8141:2:60;8126:18;;8119:42;8193:2;8178:18;;7866:336::o;8207:184::-;8277:6;8330:2;8318:9;8309:7;8305:23;8301:32;8298:52;;;8346:1;8343;8336:12;8298:52;-1:-1:-1;8369:16:60;;8207:184;-1:-1:-1;8207:184:60:o;8745:127::-;8806:10;8801:3;8797:20;8794:1;8787:31;8837:4;8834:1;8827:15;8861:4;8858:1;8851:15;8877:128;8944:9;;;8965:11;;;8962:37;;;8979:18;;:::i;9697:127::-;9758:10;9753:3;9749:20;9746:1;9739:31;9789:4;9786:1;9779:15;9813:4;9810:1;9803:15;9829:168;9902:9;;;9933;;9950:15;;;9944:22;;9930:37;9920:71;;9971:18;;:::i;10002:217::-;10042:1;10068;10058:132;;10112:10;10107:3;10103:20;10100:1;10093:31;10147:4;10144:1;10137:15;10175:4;10172:1;10165:15;10058:132;-1:-1:-1;10204:9:60;;10002:217::o;10224:125::-;10289:9;;;10310:10;;;10307:36;;;10323:18;;:::i;10354:135::-;10393:3;10414:17;;;10411:43;;10434:18;;:::i;:::-;-1:-1:-1;10481:1:60;10470:13;;10354:135::o;11480:272::-;11538:6;11591:2;11579:9;11570:7;11566:23;11562:32;11559:52;;;11607:1;11604;11597:12;11559:52;11646:9;11633:23;11696:6;11689:5;11685:18;11678:5;11675:29;11665:57;;11718:1;11715;11708:12;12794:705;12975:2;13027:21;;;13000:18;;;13083:22;;;12946:4;;13162:6;13136:2;13121:18;;12946:4;13196:277;13210:6;13207:1;13204:13;13196:277;;;13285:6;13272:20;13305:31;13330:5;13305:31;:::i;:::-;-1:-1:-1;;;;;13361:31:60;13349:44;;13448:15;;;;13413:12;;;;13389:1;13225:9;13196:277;;;-1:-1:-1;13490:3:60;12794:705;-1:-1:-1;;;;;;12794:705:60:o;14908:267::-;14994:6;15047:2;15035:9;15026:7;15022:23;15018:32;15015:52;;;15063:1;15060;15053:12;15015:52;15095:9;15089:16;15114:31;15139:5;15114:31;:::i;17572:127::-;17633:10;17628:3;17624:20;17621:1;17614:31;17664:4;17661:1;17654:15;17688:4;17685:1;17678:15;18057:287;18186:3;18224:6;18218:13;18240:66;18299:6;18294:3;18287:4;18279:6;18275:17;18240:66;:::i;:::-;18322:16;;;;;18057:287;-1:-1:-1;;18057:287:60:o",
    "linkReferences": {},
    "immutableReferences": {
      "357": [
        {
          "start": 1255,
          "length": 32
        },
        {
          "start": 1459,
          "length": 32
        },
        {
          "start": 2440,
          "length": 32
        },
        {
          "start": 3382,
          "length": 32
        },
        {
          "start": 4214,
          "length": 32
        },
        {
          "start": 4604,
          "length": 32
        },
        {
          "start": 5352,
          "length": 32
        },
        {
          "start": 5422,
          "length": 32
        },
        {
          "start": 6052,
          "length": 32
        },
        {
          "start": 6740,
          "length": 32
        },
        {
          "start": 6911,
          "length": 32
        },
        {
          "start": 7932,
          "length": 32
        },
        {
          "start": 8257,
          "length": 32
        },
        {
          "start": 9368,
          "length": 32
        },
        {
          "start": 9523,
          "length": 32
        },
        {
          "start": 9598,
          "length": 32
        },
        {
          "start": 9979,
          "length": 32
        },
        {
          "start": 11054,
          "length": 32
        }
      ],
      "360": [
        {
          "start": 944,
          "length": 32
        },
        {
          "start": 2165,
          "length": 32
        },
        {
          "start": 2405,
          "length": 32
        },
        {
          "start": 8301,
          "length": 32
        },
        {
          "start": 9481,
          "length": 32
        },
        {
          "start": 11097,
          "length": 32
        }
      ],
      "362": [
        {
          "start": 1074,
          "length": 32
        }
      ],
      "368": [
        {
          "start": 826,
          "length": 32
        },
        {
          "start": 1963,
          "length": 32
        },
        {
          "start": 2587,
          "length": 32
        },
        {
          "start": 3154,
          "length": 32
        },
        {
          "start": 4924,
          "length": 32
        },
        {
          "start": 5151,
          "length": 32
        },
        {
          "start": 5824,
          "length": 32
        },
        {
          "start": 6335,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "NAME()": "a3f4df7e",
    "SYMBOL()": "f76f8d78",
    "adminDeposit(uint256)": "08687794",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "availableToWithdraw(address,uint256)": "66f294cf",
    "balanceOf(address)": "70a08231",
    "blendedPool()": "2dfbf503",
    "canWithdraw(uint256)": "fbe85f06",
    "claimReward()": "b88a802f",
    "concludePendingReward(address)": "9264fd53",
    "concludePendingWithdrawal(address)": "1e0a5967",
    "decimals()": "313ce567",
    "deleteSecondaryLiquidityAsset(address)": "486b3ed3",
    "deposit(uint256)": "b6b55f25",
    "depositDate(address)": "24b92e8e",
    "depositSecondaryAsset(uint256,address)": "c8954760",
    "distributeRewards(uint256,address[])": "1aa59542",
    "drawdown(address,uint256)": "6acab9da",
    "getLL()": "66731639",
    "liquidityAsset()": "209b2bca",
    "liquidityLocker()": "9759164a",
    "name()": "06fdde03",
    "paused()": "5c975abb",
    "pendingRewards(address)": "31d7a262",
    "pendingWithdrawals(address)": "f3f43703",
    "poolInfo()": "5a2f3d09",
    "principalOut()": "ac641655",
    "reinvest(uint256)": "83b4918b",
    "rewards(address)": "0700037d",
    "setBlendedPool(address)": "a81b3545",
    "setSecondaryLiquidityAsset(address)": "7050886b",
    "setSecondaryLiquidityAssets(address[])": "74ee1ac4",
    "superFactory()": "0d49b38c",
    "symbol()": "95d89b41",
    "totalDeposited()": "ff50abdc",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "userDeposits(address,uint256)": "08f43333",
    "withdraw(uint256[],uint16[])": "28915483",
    "withdrawLimit()": "f848d541",
    "withdrawPeriod()": "12eb4f9a",
    "withdrawableOf(address)": "fa8c00d4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_llFactory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_lockupPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_investmentPoolSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawPeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"BalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PendingReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PendingRewardConcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PendingWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PendingWithdrawalConcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"poolAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"PoolAdminSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Reinvest\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrawalOverThreshold\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SYMBOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"adminDeposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"availableToWithdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"blendedPool\",\"outputs\":[{\"internalType\":\"contract BlendedPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"canWithdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"concludePendingReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"concludePendingWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityAsset\",\"type\":\"address\"}],\"name\":\"deleteSecondaryLiquidityAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_assetAddr\",\"type\":\"address\"}],\"name\":\"depositSecondaryAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_holders\",\"type\":\"address[]\"}],\"name\":\"distributeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"drawdown\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLL\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityLocker\",\"outputs\":[{\"internalType\":\"contract ILiquidityLocker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lockupPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentPoolSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInvestmentAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawThreshold\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"principalOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"reinvest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_blendedPool\",\"type\":\"address\"}],\"name\":\"setBlendedPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityAsset\",\"type\":\"address\"}],\"name\":\"setSecondaryLiquidityAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_liquidityAssets\",\"type\":\"address[]\"}],\"name\":\"setSecondaryLiquidityAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userDeposits\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint16[]\",\"name\":\"_indices\",\"type\":\"uint16[]\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawPeriod\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"withdrawableOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"concludePendingReward(address)\":{\"params\":{\"_recipient\":\"address of the recipient who didn't get the reward\"}},\"concludePendingWithdrawal(address)\":{\"params\":{\"_recipient\":\"address of the recipient who didn't get the liquidity\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"depositSecondaryAsset(uint256,address)\":{\"params\":{\"_assetAddr\":\"the address of the stablecoin\"}},\"distributeRewards(uint256,address[])\":{\"params\":{\"_amount\":\"the amount to be divided among investors\",\"_holders\":\"the list of investors must be provided externally due to Solidity limitations\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"reinvest(uint256)\":{\"params\":{\"_amount\":\"the amount of rewards to be converted into LP\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"withdraw(uint256[],uint16[])\":{\"params\":{\"_amounts\":\"the amount of LA to be withdrawn\",\"_indices\":\"the indices of the DepositInstance\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"adminDeposit(uint256)\":{\"notice\":\"Deposit LA without minimal threshold or getting LP in return\"},\"availableToWithdraw(address,uint256)\":{\"notice\":\"check how many funds\"},\"claimReward()\":{\"notice\":\"Used to transfer the investor's rewards to him\"},\"concludePendingReward(address)\":{\"notice\":\"Admin function used for unhappy path after reward claiming failure\"},\"concludePendingWithdrawal(address)\":{\"notice\":\"Admin function used for unhappy path after withdrawal failure\"},\"deposit(uint256)\":{\"notice\":\"the caller becomes an investor. For this to work the caller must set the allowance for this pool's address\"},\"depositSecondaryAsset(uint256,address)\":{\"notice\":\"used to deposit secondary liquidity assets (non-USDT)\"},\"distributeRewards(uint256,address[])\":{\"notice\":\"Used to distribute rewards among investors (LP token holders)\"},\"drawdown(address,uint256)\":{\"notice\":\"Use the pool's money for investment\"},\"reinvest(uint256)\":{\"notice\":\"Used to reinvest rewards into more LP tokens\"},\"withdraw(uint256[],uint16[])\":{\"notice\":\"withdraws the caller's liquidity assets\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pool/Pool.sol\":\"Pool\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"contracts/interfaces/IHeliosGlobals.sol\":{\"keccak256\":\"0x84c736ad0406f9c3cd27bc6d88cbf9aeb61cfdf15f90d8be4819758d11517864\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0506b42ecf30d4cc65e94933b6a51c2800f3c5725c1a94a7b8de9513d3fceb1b\",\"dweb:/ipfs/QmZCAJLr7e5JP1WtQu6dH4YEkEnbr4t2nhjLNKYnMQ5MJj\"]},\"contracts/interfaces/ILiquidityLocker.sol\":{\"keccak256\":\"0xa3308ae7b23b5771923a8c7b7473b8c417bf75863b9b4bdcaa3cdcbcb18219b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0eac9f166301901c5a2ffc41f1f2025744276b7616dc99f23a0a5eb360f0ff98\",\"dweb:/ipfs/QmTgvM6jzx5jvu36XgUh8r7YPerr13HBvKUFFZ7Hy8hoHh\"]},\"contracts/interfaces/ILiquidityLockerFactory.sol\":{\"keccak256\":\"0x4505a4a98000560dd57d798ed1abe3a803fa9c51a12b21f2fbfe5824f8fa3297\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f2fb8becbb110fa1d79295927b48a69a28bbd11c578acc1b85c7faa1c37dd79b\",\"dweb:/ipfs/QmTdFHCeCc3LXkuRqPh6kHuKPtg4MUykgD4YtmH6fDuT8b\"]},\"contracts/interfaces/IPoolFactory.sol\":{\"keccak256\":\"0xea0f981bf6d22c1f7cc921f7b6edbe82caace4896f33e9799218923604f99cc3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae0786dc73c5991331a3fc030a7b34d5db0125d05d5011d764f4341e6ab276ae\",\"dweb:/ipfs/QmSeH4cNNjUE5PBMDyjXjACXR8dkzrU6gEvpb41559s7gz\"]},\"contracts/interfaces/ISubFactory.sol\":{\"keccak256\":\"0x0d1248426bbd5925e7a68ad2f68eca5783a91c5f7576915089789a73de536bc5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b22d4333aff7e4bca69751cf2447d8e295d06ed72286c6ef790294a0144a9e6f\",\"dweb:/ipfs/QmY3zjMhWkuSzesHD5Vw2pP3LiNorUUSwMEGMztextnDag\"]},\"contracts/pool/AbstractPool.sol\":{\"keccak256\":\"0x40c772eff53f0ab2900c88ae7cd3391b87f8f25fe184d9990676e967b1ee88ce\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44740b0b3195e96ec9e943cde46e1cd86eb330d235df4c5df54f2f40e903ef14\",\"dweb:/ipfs/Qmf3gtotjzt785fE5FjvEY6DAqhisTKcRtY1dYaR3KS5if\"]},\"contracts/pool/BlendedPool.sol\":{\"keccak256\":\"0x797fd89a9528196df71a753f6846ed88810fe6e0defb53cb24a812b6db7754c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af4f5e614168a5e020291a5e1c96de49964a00185be06212ea93eade4176a05a\",\"dweb:/ipfs/QmULkkoANoj8MmW3WfaB4mttFWfyxMgQuvV3fknumdRGxA\"]},\"contracts/pool/Pool.sol\":{\"keccak256\":\"0xd9f79aa667c33a6d34a5617091334e0439b8af3cd15cb75566ddcd10a9747065\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8ef976ab09cfede2465e4ad846e5e791fccf2e5f10010c06f2b3ee78081864b\",\"dweb:/ipfs/QmQZ7oBcWtGRUwZzvpMaDHzcRWMhRG3SHes7LSzc6NseMP\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.20+commit.a1b79de6"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_liquidityAsset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_llFactory",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_lockupPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_apy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_investmentPoolSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minInvestmentAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_withdrawThreshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_withdrawPeriod",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "allowance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientAllowance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "needed",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC20InsufficientBalance"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC20InvalidSpender"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "EnforcedPause"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ExpectedPause"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "FailedInnerCall"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "token",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "liquidityProvider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BalanceUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "investor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PendingReward",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PendingRewardConcluded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "investor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PendingWithdrawal",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "investor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "PendingWithdrawalConcluded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "poolAdmin",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "allowed",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PoolAdminSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "investor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Reinvest",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RewardClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "investor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Withdrawal",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "caller",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "WithdrawalOverThreshold",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "NAME",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SYMBOL",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "adminDeposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_user",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_index",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "availableToWithdraw",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "blendedPool",
          "outputs": [
            {
              "internalType": "contract BlendedPool",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "canWithdraw",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimReward",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "concludePendingReward"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "concludePendingWithdrawal"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_liquidityAsset",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deleteSecondaryLiquidityAsset"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "depositDate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_assetAddr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositSecondaryAsset"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "_holders",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distributeRewards"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "drawdown"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLL",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidityAsset",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidityLocker",
          "outputs": [
            {
              "internalType": "contract ILiquidityLocker",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingWithdrawals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lockupPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "apy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentPoolSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minInvestmentAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "withdrawThreshold",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "principalOut",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reinvest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_blendedPool",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setBlendedPool"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_liquidityAsset",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSecondaryLiquidityAsset"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_liquidityAssets",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSecondaryLiquidityAssets"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "superFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalDeposited",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userDeposits",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "unlockTime",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "_amounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint16[]",
              "name": "_indices",
              "type": "uint16[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawLimit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawPeriod",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_holder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "concludePendingReward(address)": {
            "params": {
              "_recipient": "address of the recipient who didn't get the reward"
            }
          },
          "concludePendingWithdrawal(address)": {
            "params": {
              "_recipient": "address of the recipient who didn't get the liquidity"
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "depositSecondaryAsset(uint256,address)": {
            "params": {
              "_assetAddr": "the address of the stablecoin"
            }
          },
          "distributeRewards(uint256,address[])": {
            "params": {
              "_amount": "the amount to be divided among investors",
              "_holders": "the list of investors must be provided externally due to Solidity limitations"
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "reinvest(uint256)": {
            "params": {
              "_amount": "the amount of rewards to be converted into LP"
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
          },
          "withdraw(uint256[],uint16[])": {
            "params": {
              "_amounts": "the amount of LA to be withdrawn",
              "_indices": "the indices of the DepositInstance"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "adminDeposit(uint256)": {
            "notice": "Deposit LA without minimal threshold or getting LP in return"
          },
          "availableToWithdraw(address,uint256)": {
            "notice": "check how many funds"
          },
          "claimReward()": {
            "notice": "Used to transfer the investor's rewards to him"
          },
          "concludePendingReward(address)": {
            "notice": "Admin function used for unhappy path after reward claiming failure"
          },
          "concludePendingWithdrawal(address)": {
            "notice": "Admin function used for unhappy path after withdrawal failure"
          },
          "deposit(uint256)": {
            "notice": "the caller becomes an investor. For this to work the caller must set the allowance for this pool's address"
          },
          "depositSecondaryAsset(uint256,address)": {
            "notice": "used to deposit secondary liquidity assets (non-USDT)"
          },
          "distributeRewards(uint256,address[])": {
            "notice": "Used to distribute rewards among investors (LP token holders)"
          },
          "drawdown(address,uint256)": {
            "notice": "Use the pool's money for investment"
          },
          "reinvest(uint256)": {
            "notice": "Used to reinvest rewards into more LP tokens"
          },
          "withdraw(uint256[],uint16[])": {
            "notice": "withdraws the caller's liquidity assets"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/pool/Pool.sol": "Pool"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IHeliosGlobals.sol": {
        "keccak256": "0x84c736ad0406f9c3cd27bc6d88cbf9aeb61cfdf15f90d8be4819758d11517864",
        "urls": [
          "bzz-raw://0506b42ecf30d4cc65e94933b6a51c2800f3c5725c1a94a7b8de9513d3fceb1b",
          "dweb:/ipfs/QmZCAJLr7e5JP1WtQu6dH4YEkEnbr4t2nhjLNKYnMQ5MJj"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILiquidityLocker.sol": {
        "keccak256": "0xa3308ae7b23b5771923a8c7b7473b8c417bf75863b9b4bdcaa3cdcbcb18219b8",
        "urls": [
          "bzz-raw://0eac9f166301901c5a2ffc41f1f2025744276b7616dc99f23a0a5eb360f0ff98",
          "dweb:/ipfs/QmTgvM6jzx5jvu36XgUh8r7YPerr13HBvKUFFZ7Hy8hoHh"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILiquidityLockerFactory.sol": {
        "keccak256": "0x4505a4a98000560dd57d798ed1abe3a803fa9c51a12b21f2fbfe5824f8fa3297",
        "urls": [
          "bzz-raw://f2fb8becbb110fa1d79295927b48a69a28bbd11c578acc1b85c7faa1c37dd79b",
          "dweb:/ipfs/QmTdFHCeCc3LXkuRqPh6kHuKPtg4MUykgD4YtmH6fDuT8b"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IPoolFactory.sol": {
        "keccak256": "0xea0f981bf6d22c1f7cc921f7b6edbe82caace4896f33e9799218923604f99cc3",
        "urls": [
          "bzz-raw://ae0786dc73c5991331a3fc030a7b34d5db0125d05d5011d764f4341e6ab276ae",
          "dweb:/ipfs/QmSeH4cNNjUE5PBMDyjXjACXR8dkzrU6gEvpb41559s7gz"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ISubFactory.sol": {
        "keccak256": "0x0d1248426bbd5925e7a68ad2f68eca5783a91c5f7576915089789a73de536bc5",
        "urls": [
          "bzz-raw://b22d4333aff7e4bca69751cf2447d8e295d06ed72286c6ef790294a0144a9e6f",
          "dweb:/ipfs/QmY3zjMhWkuSzesHD5Vw2pP3LiNorUUSwMEGMztextnDag"
        ],
        "license": "MIT"
      },
      "contracts/pool/AbstractPool.sol": {
        "keccak256": "0x40c772eff53f0ab2900c88ae7cd3391b87f8f25fe184d9990676e967b1ee88ce",
        "urls": [
          "bzz-raw://44740b0b3195e96ec9e943cde46e1cd86eb330d235df4c5df54f2f40e903ef14",
          "dweb:/ipfs/Qmf3gtotjzt785fE5FjvEY6DAqhisTKcRtY1dYaR3KS5if"
        ],
        "license": "MIT"
      },
      "contracts/pool/BlendedPool.sol": {
        "keccak256": "0x797fd89a9528196df71a753f6846ed88810fe6e0defb53cb24a812b6db7754c2",
        "urls": [
          "bzz-raw://af4f5e614168a5e020291a5e1c96de49964a00185be06212ea93eade4176a05a",
          "dweb:/ipfs/QmULkkoANoj8MmW3WfaB4mttFWfyxMgQuvV3fknumdRGxA"
        ],
        "license": "MIT"
      },
      "contracts/pool/Pool.sol": {
        "keccak256": "0xd9f79aa667c33a6d34a5617091334e0439b8af3cd15cb75566ddcd10a9747065",
        "urls": [
          "bzz-raw://f8ef976ab09cfede2465e4ad846e5e791fccf2e5f10010c06f2b3ee78081864b",
          "dweb:/ipfs/QmQZ7oBcWtGRUwZzvpMaDHzcRWMhRG3SHes7LSzc6NseMP"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Pausable.sol": {
        "keccak256": "0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd",
        "urls": [
          "bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc",
          "dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
        "keccak256": "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236",
        "urls": [
          "bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02",
          "dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe",
        "urls": [
          "bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c",
          "dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/pool/Pool.sol",
    "id": 2574,
    "exportedSymbols": {
      "AbstractPool": [
        1248
      ],
      "BlendedPool": [
        1764
      ],
      "ERC20": [
        52535
      ],
      "IERC20": [
        52613
      ],
      "IHeliosGlobals": [
        235
      ],
      "ILiquidityLocker": [
        283
      ],
      "ILiquidityLockerFactory": [
        297
      ],
      "IPoolFactory": [
        308
      ],
      "Math": [
        54524
      ],
      "Pool": [
        2573
      ],
      "SafeCast": [
        56279
      ],
      "SafeERC20": [
        52965
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:6135:10",
    "nodes": [
      {
        "id": 2052,
        "nodeType": "PragmaDirective",
        "src": "32:23:10",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".20"
        ]
      },
      {
        "id": 2054,
        "nodeType": "ImportDirective",
        "src": "57:82:10",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2574,
        "sourceUnit": 52966,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2053,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52965,
              "src": "65:9:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2056,
        "nodeType": "ImportDirective",
        "src": "140:73:10",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/SafeCast.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeCast.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2574,
        "sourceUnit": 56280,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2055,
              "name": "SafeCast",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56279,
              "src": "148:8:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2058,
        "nodeType": "ImportDirective",
        "src": "214:65:10",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2574,
        "sourceUnit": 54525,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2057,
              "name": "Math",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 54524,
              "src": "222:4:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2060,
        "nodeType": "ImportDirective",
        "src": "280:68:10",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2574,
        "sourceUnit": 52536,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2059,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52535,
              "src": "288:5:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2062,
        "nodeType": "ImportDirective",
        "src": "349:70:10",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2574,
        "sourceUnit": 52614,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2061,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52613,
              "src": "357:6:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2064,
        "nodeType": "ImportDirective",
        "src": "421:60:10",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IPoolFactory.sol",
        "file": "../interfaces/IPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2574,
        "sourceUnit": 309,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2063,
              "name": "IPoolFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 308,
              "src": "429:12:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2066,
        "nodeType": "ImportDirective",
        "src": "482:82:10",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ILiquidityLockerFactory.sol",
        "file": "../interfaces/ILiquidityLockerFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2574,
        "sourceUnit": 298,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2065,
              "name": "ILiquidityLockerFactory",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 297,
              "src": "490:23:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2068,
        "nodeType": "ImportDirective",
        "src": "565:68:10",
        "nodes": [],
        "absolutePath": "contracts/interfaces/ILiquidityLocker.sol",
        "file": "../interfaces/ILiquidityLocker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2574,
        "sourceUnit": 284,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2067,
              "name": "ILiquidityLocker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 283,
              "src": "573:16:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2070,
        "nodeType": "ImportDirective",
        "src": "634:64:10",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IHeliosGlobals.sol",
        "file": "../interfaces/IHeliosGlobals.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2574,
        "sourceUnit": 236,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2069,
              "name": "IHeliosGlobals",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 235,
              "src": "642:14:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2072,
        "nodeType": "ImportDirective",
        "src": "699:48:10",
        "nodes": [],
        "absolutePath": "contracts/pool/AbstractPool.sol",
        "file": "./AbstractPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2574,
        "sourceUnit": 1249,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2071,
              "name": "AbstractPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1248,
              "src": "707:12:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2074,
        "nodeType": "ImportDirective",
        "src": "748:46:10",
        "nodes": [],
        "absolutePath": "contracts/pool/BlendedPool.sol",
        "file": "./BlendedPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 2574,
        "sourceUnit": 1765,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2073,
              "name": "BlendedPool",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1764,
              "src": "756:11:10",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 2573,
        "nodeType": "ContractDefinition",
        "src": "864:5302:10",
        "nodes": [
          {
            "id": 2080,
            "nodeType": "UsingForDirective",
            "src": "900:27:10",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 2077,
              "name": "SafeERC20",
              "nameLocations": [
                "906:9:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 52965,
              "src": "906:9:10"
            },
            "typeName": {
              "id": 2079,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2078,
                "name": "IERC20",
                "nameLocations": [
                  "920:6:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52613,
                "src": "920:6:10"
              },
              "referencedDeclaration": 52613,
              "src": "920:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$52613",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 2083,
            "nodeType": "VariableDeclaration",
            "src": "933:30:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "2dfbf503",
            "mutability": "mutable",
            "name": "blendedPool",
            "nameLocation": "952:11:10",
            "scope": 2573,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BlendedPool_$1764",
              "typeString": "contract BlendedPool"
            },
            "typeName": {
              "id": 2082,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2081,
                "name": "BlendedPool",
                "nameLocations": [
                  "933:11:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1764,
                "src": "933:11:10"
              },
              "referencedDeclaration": 1764,
              "src": "933:11:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BlendedPool_$1764",
                "typeString": "contract BlendedPool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 2087,
            "nodeType": "EnumDefinition",
            "src": "970:78:10",
            "nodes": [],
            "canonicalName": "Pool.State",
            "members": [
              {
                "id": 2084,
                "name": "Initialized",
                "nameLocation": "991:11:10",
                "nodeType": "EnumValue",
                "src": "991:11:10"
              },
              {
                "id": 2085,
                "name": "Finalized",
                "nameLocation": "1012:9:10",
                "nodeType": "EnumValue",
                "src": "1012:9:10"
              },
              {
                "id": 2086,
                "name": "Deactivated",
                "nameLocation": "1031:11:10",
                "nodeType": "EnumValue",
                "src": "1031:11:10"
              }
            ],
            "name": "State",
            "nameLocation": "975:5:10"
          },
          {
            "id": 2093,
            "nodeType": "EventDefinition",
            "src": "1054:60:10",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "353578bbc0ab907b7018b0f7b50b5f822d31dc9fcf4c16fffa780e109ca7c930",
            "name": "PoolAdminSet",
            "nameLocation": "1060:12:10",
            "parameters": {
              "id": 2092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2089,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "poolAdmin",
                  "nameLocation": "1089:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2093,
                  "src": "1073:25:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1073:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2091,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "allowed",
                  "nameLocation": "1105:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2093,
                  "src": "1100:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2090,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1100:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1072:41:10"
            }
          },
          {
            "id": 2174,
            "nodeType": "FunctionDefinition",
            "src": "1120:890:10",
            "nodes": [],
            "body": {
              "id": 2173,
              "nodeType": "Block",
              "src": "1516:494:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2123,
                          "name": "_liquidityAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2095,
                          "src": "1534:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2126,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1561:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2125,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1553:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2124,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1553:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2127,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1553:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1534:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a5a45524f5f4c49515f4153534554",
                        "id": 2129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1565:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_366313afd1ec446c4d1175ad8be281a22d40e6ab54e1935e0dbd577b32f53a1c",
                          "typeString": "literal_string \"P:ZERO_LIQ_ASSET\""
                        },
                        "value": "P:ZERO_LIQ_ASSET"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_366313afd1ec446c4d1175ad8be281a22d40e6ab54e1935e0dbd577b32f53a1c",
                          "typeString": "literal_string \"P:ZERO_LIQ_ASSET\""
                        }
                      ],
                      "id": 2122,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1526:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1526:58:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2131,
                  "nodeType": "ExpressionStatement",
                  "src": "1526:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2138,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2133,
                          "name": "_llFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2097,
                          "src": "1602:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 2136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1624:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 2135,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1616:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 2134,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1616:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1616:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1602:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a5a45524f5f4c49515f4c4f434b45525f464143544f5259",
                        "id": 2139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1628:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dbee40140f9c738468a2cbeedb25f06786a185b157f855e06551622b950d759",
                          "typeString": "literal_string \"P:ZERO_LIQ_LOCKER_FACTORY\""
                        },
                        "value": "P:ZERO_LIQ_LOCKER_FACTORY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dbee40140f9c738468a2cbeedb25f06786a185b157f855e06551622b950d759",
                          "typeString": "literal_string \"P:ZERO_LIQ_LOCKER_FACTORY\""
                        }
                      ],
                      "id": 2132,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1594:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1594:62:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2141,
                  "nodeType": "ExpressionStatement",
                  "src": "1594:62:10"
                },
                {
                  "expression": {
                    "id": 2151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2142,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 480,
                      "src": "1666:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$469_storage",
                        "typeString": "struct AbstractPool.PoolInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2144,
                          "name": "_lockupPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2099,
                          "src": "1698:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2145,
                          "name": "_apy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2101,
                          "src": "1713:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2146,
                          "name": "_duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2103,
                          "src": "1719:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2147,
                          "name": "_investmentPoolSize",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2105,
                          "src": "1730:19:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2148,
                          "name": "_minInvestmentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2107,
                          "src": "1751:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 2149,
                          "name": "_withdrawThreshold",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2109,
                          "src": "1773:18:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 2143,
                        "name": "PoolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "1689:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_PoolInfo_$469_storage_ptr_$",
                          "typeString": "type(struct AbstractPool.PoolInfo storage pointer)"
                        }
                      },
                      "id": 2150,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1689:103:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$469_memory_ptr",
                        "typeString": "struct AbstractPool.PoolInfo memory"
                      }
                    },
                    "src": "1666:126:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$469_storage",
                      "typeString": "struct AbstractPool.PoolInfo storage ref"
                    }
                  },
                  "id": 2152,
                  "nodeType": "ExpressionStatement",
                  "src": "1666:126:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2158,
                            "name": "_liquidityAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2095,
                            "src": "1856:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 2155,
                                "name": "superFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 368,
                                "src": "1820:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2154,
                              "name": "_globals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                2572
                              ],
                              "referencedDeclaration": 2572,
                              "src": "1811:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IHeliosGlobals_$235_$",
                                "typeString": "function (address) view returns (contract IHeliosGlobals)"
                              }
                            },
                            "id": 2156,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1811:22:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHeliosGlobals_$235",
                              "typeString": "contract IHeliosGlobals"
                            }
                          },
                          "id": 2157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1834:21:10",
                          "memberName": "isValidLiquidityAsset",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 227,
                          "src": "1811:44:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 2159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1811:61:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a494e56414c49445f4c49515f4153534554",
                        "id": 2160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1874:21:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b8b63b5878fdb07e6ad33728b6c71ada5bbdd2a67c51849ce807aff8f8ea75c",
                          "typeString": "literal_string \"P:INVALID_LIQ_ASSET\""
                        },
                        "value": "P:INVALID_LIQ_ASSET"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b8b63b5878fdb07e6ad33728b6c71ada5bbdd2a67c51849ce807aff8f8ea75c",
                          "typeString": "literal_string \"P:INVALID_LIQ_ASSET\""
                        }
                      ],
                      "id": 2153,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1803:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1803:93:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2162,
                  "nodeType": "ExpressionStatement",
                  "src": "1803:93:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2168,
                            "name": "_llFactory",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2097,
                            "src": "1967:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "id": 2165,
                                "name": "superFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 368,
                                "src": "1923:12:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2164,
                              "name": "_globals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                2572
                              ],
                              "referencedDeclaration": 2572,
                              "src": "1914:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IHeliosGlobals_$235_$",
                                "typeString": "function (address) view returns (contract IHeliosGlobals)"
                              }
                            },
                            "id": 2166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1914:22:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IHeliosGlobals_$235",
                              "typeString": "contract IHeliosGlobals"
                            }
                          },
                          "id": 2167,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1937:29:10",
                          "memberName": "isValidLiquidityLockerFactory",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 234,
                          "src": "1914:52:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 2169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1914:64:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a494e56414c49445f4c4c5f464143544f5259",
                        "id": 2170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1980:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f1f91042620f0bd63861b925770850eb061022b2dec40f73fb54ddbf45d6b51a",
                          "typeString": "literal_string \"P:INVALID_LL_FACTORY\""
                        },
                        "value": "P:INVALID_LL_FACTORY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f1f91042620f0bd63861b925770850eb061022b2dec40f73fb54ddbf45d6b51a",
                          "typeString": "literal_string \"P:INVALID_LL_FACTORY\""
                        }
                      ],
                      "id": 2163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1906:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1906:97:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2172,
                  "nodeType": "ExpressionStatement",
                  "src": "1906:97:10"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2114,
                    "name": "_liquidityAsset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2095,
                    "src": "1436:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2115,
                    "name": "_llFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2097,
                    "src": "1453:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2116,
                    "name": "NAME",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 347,
                    "src": "1465:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2117,
                    "name": "SYMBOL",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 350,
                    "src": "1471:6:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 2118,
                    "name": "_withdrawThreshold",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2109,
                    "src": "1479:18:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "id": 2119,
                    "name": "_withdrawPeriod",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2111,
                    "src": "1499:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2120,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 2113,
                  "name": "AbstractPool",
                  "nameLocations": [
                    "1423:12:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1248,
                  "src": "1423:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1423:92:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 2112,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2095,
                  "mutability": "mutable",
                  "name": "_liquidityAsset",
                  "nameLocation": "1149:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2174,
                  "src": "1141:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2094,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1141:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2097,
                  "mutability": "mutable",
                  "name": "_llFactory",
                  "nameLocation": "1182:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2174,
                  "src": "1174:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1174:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2099,
                  "mutability": "mutable",
                  "name": "_lockupPeriod",
                  "nameLocation": "1210:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2174,
                  "src": "1202:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2098,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1202:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2101,
                  "mutability": "mutable",
                  "name": "_apy",
                  "nameLocation": "1241:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2174,
                  "src": "1233:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2100,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1233:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2103,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "1263:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2174,
                  "src": "1255:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2102,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1255:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2105,
                  "mutability": "mutable",
                  "name": "_investmentPoolSize",
                  "nameLocation": "1290:19:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2174,
                  "src": "1282:27:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1282:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2107,
                  "mutability": "mutable",
                  "name": "_minInvestmentAmount",
                  "nameLocation": "1327:20:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2174,
                  "src": "1319:28:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1319:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2109,
                  "mutability": "mutable",
                  "name": "_withdrawThreshold",
                  "nameLocation": "1365:18:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2174,
                  "src": "1357:26:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2108,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1357:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2111,
                  "mutability": "mutable",
                  "name": "_withdrawPeriod",
                  "nameLocation": "1401:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2174,
                  "src": "1393:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2110,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1393:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1131:291:10"
            },
            "returnParameters": {
              "id": 2121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1516:0:10"
            },
            "scope": 2573,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2294,
            "nodeType": "FunctionDefinition",
            "src": "2079:1152:10",
            "nodes": [],
            "body": {
              "id": 2293,
              "nodeType": "Block",
              "src": "2135:1096:10",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    2182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2182,
                      "mutability": "mutable",
                      "name": "callerRewards",
                      "nameLocation": "2153:13:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 2293,
                      "src": "2145:21:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2181,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2145:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2187,
                  "initialValue": {
                    "baseExpression": {
                      "id": 2183,
                      "name": "rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 372,
                      "src": "2169:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 2186,
                    "indexExpression": {
                      "expression": {
                        "id": 2184,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2177:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2181:6:10",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2177:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2169:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2145:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2189,
                          "name": "callerRewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2182,
                          "src": "2206:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2190,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2223:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2206:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a4e4f545f484f4c444552",
                        "id": 2192,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2226:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e40db76a92b91768e6d3de5b6c8034e7af8a9dd019ae112a3620fc045d0ec9e",
                          "typeString": "literal_string \"P:NOT_HOLDER\""
                        },
                        "value": "P:NOT_HOLDER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e40db76a92b91768e6d3de5b6c8034e7af8a9dd019ae112a3620fc045d0ec9e",
                          "typeString": "literal_string \"P:NOT_HOLDER\""
                        }
                      ],
                      "id": 2188,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2198:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2198:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2194,
                  "nodeType": "ExpressionStatement",
                  "src": "2198:43:10"
                },
                {
                  "assignments": [
                    2196
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2196,
                      "mutability": "mutable",
                      "name": "totalBalance",
                      "nameLocation": "2259:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 2293,
                      "src": "2251:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2195,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2251:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 2200,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 2197,
                        "name": "liquidityLocker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "2274:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                          "typeString": "contract ILiquidityLocker"
                        }
                      },
                      "id": 2198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2290:12:10",
                      "memberName": "totalBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 253,
                      "src": "2274:28:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 2199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2274:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2251:53:10"
                },
                {
                  "expression": {
                    "id": 2206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 2201,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "2314:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 2204,
                      "indexExpression": {
                        "expression": {
                          "id": 2202,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2322:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2326:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2322:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2314:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 2205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2336:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2314:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2207,
                  "nodeType": "ExpressionStatement",
                  "src": "2314:23:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2208,
                      "name": "totalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2196,
                      "src": "2352:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 2209,
                      "name": "callerRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2182,
                      "src": "2367:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2352:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2275,
                  "nodeType": "IfStatement",
                  "src": "2348:693:10",
                  "trueBody": {
                    "id": 2274,
                    "nodeType": "Block",
                    "src": "2382:659:10",
                    "statements": [
                      {
                        "assignments": [
                          2212
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2212,
                            "mutability": "mutable",
                            "name": "amountMissing",
                            "nameLocation": "2404:13:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2274,
                            "src": "2396:21:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2211,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "2396:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2216,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2213,
                            "name": "callerRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2182,
                            "src": "2420:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 2214,
                            "name": "totalBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2196,
                            "src": "2436:12:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2420:28:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2396:52:10"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 2217,
                                "name": "blendedPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2083,
                                "src": "2467:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_BlendedPool_$1764",
                                  "typeString": "contract BlendedPool"
                                }
                              },
                              "id": 2218,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2479:7:10",
                              "memberName": "totalLA",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1487,
                              "src": "2467:19:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 2219,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2467:21:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2220,
                            "name": "amountMissing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2212,
                            "src": "2491:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2467:37:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2238,
                        "nodeType": "IfStatement",
                        "src": "2463:212:10",
                        "trueBody": {
                          "id": 2237,
                          "nodeType": "Block",
                          "src": "2506:169:10",
                          "statements": [
                            {
                              "expression": {
                                "id": 2227,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 2222,
                                    "name": "pendingRewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 380,
                                    "src": "2524:14:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 2225,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 2223,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2539:3:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2224,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2543:6:10",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2539:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "2524:26:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "id": 2226,
                                  "name": "callerRewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2182,
                                  "src": "2554:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "2524:43:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 2228,
                              "nodeType": "ExpressionStatement",
                              "src": "2524:43:10"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 2230,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "2604:3:10",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 2231,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2608:6:10",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "2604:10:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 2232,
                                    "name": "callerRewards",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2182,
                                    "src": "2616:13:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 2229,
                                  "name": "PendingReward",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 436,
                                  "src": "2590:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,uint256)"
                                  }
                                },
                                "id": 2233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2590:40:10",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 2234,
                              "nodeType": "EmitStatement",
                              "src": "2585:45:10"
                            },
                            {
                              "expression": {
                                "hexValue": "66616c7365",
                                "id": 2235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2655:5:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "functionReturnParameters": 2180,
                              "id": 2236,
                              "nodeType": "Return",
                              "src": "2648:12:10"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 2242,
                              "name": "amountMissing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2212,
                              "src": "2723:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 2239,
                              "name": "blendedPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2083,
                              "src": "2688:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BlendedPool_$1764",
                                "typeString": "contract BlendedPool"
                              }
                            },
                            "id": 2241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2700:22:10",
                            "memberName": "requestLiquidityAssets",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1619,
                            "src": "2688:34:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256) external"
                            }
                          },
                          "id": 2243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2688:49:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2244,
                        "nodeType": "ExpressionStatement",
                        "src": "2688:49:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 2248,
                                  "name": "blendedPool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2083,
                                  "src": "2765:11:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_BlendedPool_$1764",
                                    "typeString": "contract BlendedPool"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_BlendedPool_$1764",
                                    "typeString": "contract BlendedPool"
                                  }
                                ],
                                "id": 2247,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2757:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 2246,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2757:7:10",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 2249,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2757:20:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2250,
                              "name": "amountMissing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2212,
                              "src": "2779:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2245,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52375,
                            "src": "2751:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2751:42:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2252,
                        "nodeType": "ExpressionStatement",
                        "src": "2751:42:10"
                      },
                      {
                        "expression": {
                          "id": 2255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2253,
                            "name": "totalMinted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 364,
                            "src": "2807:11:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2254,
                            "name": "amountMissing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2212,
                            "src": "2822:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2807:28:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2256,
                        "nodeType": "ExpressionStatement",
                        "src": "2807:28:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2259,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2887:3:10",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 2260,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "2891:6:10",
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2887:10:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2261,
                                  "name": "callerRewards",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2182,
                                  "src": "2899:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 2258,
                                "name": "_transferLiquidityLockerFunds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1195,
                                "src": "2857:29:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) returns (bool)"
                                }
                              },
                              "id": 2262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2857:56:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "503a4552524f525f5452414e5346455252494e475f524557415244",
                              "id": 2263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2915:29:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1e0b90f99f06a96bcf4deb99eeec4b0511f0a36092a0d72ae5cd3af5b0fcc9d7",
                                "typeString": "literal_string \"P:ERROR_TRANSFERRING_REWARD\""
                              },
                              "value": "P:ERROR_TRANSFERRING_REWARD"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1e0b90f99f06a96bcf4deb99eeec4b0511f0a36092a0d72ae5cd3af5b0fcc9d7",
                                "typeString": "literal_string \"P:ERROR_TRANSFERRING_REWARD\""
                              }
                            ],
                            "id": 2257,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2849:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 2264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2849:96:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2265,
                        "nodeType": "ExpressionStatement",
                        "src": "2849:96:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2267,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2979:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 2268,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2983:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2979:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2269,
                              "name": "callerRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2182,
                              "src": "2991:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2266,
                            "name": "RewardClaimed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 424,
                            "src": "2965:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 2270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2965:40:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2271,
                        "nodeType": "EmitStatement",
                        "src": "2960:45:10"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 2272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3026:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 2180,
                        "id": 2273,
                        "nodeType": "Return",
                        "src": "3019:11:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2278,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3089:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3093:6:10",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3089:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 2280,
                            "name": "callerRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2182,
                            "src": "3101:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 2277,
                          "name": "_transferLiquidityLockerFunds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1195,
                          "src": "3059:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 2281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3059:56:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a4552524f525f5452414e5346455252494e475f524557415244",
                        "id": 2282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3117:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e0b90f99f06a96bcf4deb99eeec4b0511f0a36092a0d72ae5cd3af5b0fcc9d7",
                          "typeString": "literal_string \"P:ERROR_TRANSFERRING_REWARD\""
                        },
                        "value": "P:ERROR_TRANSFERRING_REWARD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e0b90f99f06a96bcf4deb99eeec4b0511f0a36092a0d72ae5cd3af5b0fcc9d7",
                          "typeString": "literal_string \"P:ERROR_TRANSFERRING_REWARD\""
                        }
                      ],
                      "id": 2276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3051:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3051:96:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2284,
                  "nodeType": "ExpressionStatement",
                  "src": "3051:96:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2286,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3177:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3181:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3177:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2288,
                        "name": "callerRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2182,
                        "src": "3189:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2285,
                      "name": "RewardClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 424,
                      "src": "3163:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 2289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3163:40:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2290,
                  "nodeType": "EmitStatement",
                  "src": "3158:45:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3220:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2180,
                  "id": 2292,
                  "nodeType": "Return",
                  "src": "3213:11:10"
                }
              ]
            },
            "baseFunctions": [
              1178
            ],
            "documentation": {
              "id": 2175,
              "nodeType": "StructuredDocumentation",
              "src": "2016:58:10",
              "text": "@notice Used to transfer the investor's rewards to him"
            },
            "functionSelector": "b88a802f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimReward",
            "nameLocation": "2088:11:10",
            "overrides": {
              "id": 2177,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2111:8:10"
            },
            "parameters": {
              "id": 2176,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:2:10"
            },
            "returnParameters": {
              "id": 2180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2179,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2294,
                  "src": "2129:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2178,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2128:6:10"
            },
            "scope": 2573,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2310,
            "nodeType": "FunctionDefinition",
            "src": "3237:136:10",
            "nodes": [],
            "body": {
              "id": 2309,
              "nodeType": "Block",
              "src": "3303:70:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2302,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3326:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2303,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3330:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3326:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2304,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2296,
                        "src": "3338:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2301,
                      "name": "_canWithdraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2497,
                      "src": "3313:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) view"
                      }
                    },
                    "id": 2305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3313:32:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2306,
                  "nodeType": "ExpressionStatement",
                  "src": "3313:32:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 2307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3362:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 2300,
                  "id": 2308,
                  "nodeType": "Return",
                  "src": "3355:11:10"
                }
              ]
            },
            "functionSelector": "fbe85f06",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canWithdraw",
            "nameLocation": "3246:11:10",
            "parameters": {
              "id": 2297,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2296,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3266:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2310,
                  "src": "3258:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2295,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3258:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3257:16:10"
            },
            "returnParameters": {
              "id": 2300,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2299,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2310,
                  "src": "3297:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2298,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3297:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3296:6:10"
            },
            "scope": 2573,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2346,
            "nodeType": "FunctionDefinition",
            "src": "3379:284:10",
            "nodes": [],
            "body": {
              "id": 2345,
              "nodeType": "Block",
              "src": "3452:211:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 2318,
                              "name": "depositDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "3470:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2320,
                            "indexExpression": {
                              "id": 2319,
                              "name": "_holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2312,
                              "src": "3482:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3470:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 2321,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "3493:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$469_storage",
                                "typeString": "struct AbstractPool.PoolInfo storage ref"
                              }
                            },
                            "id": 2322,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3502:12:10",
                            "memberName": "lockupPeriod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 458,
                            "src": "3493:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3470:44:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 2324,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3518:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3524:9:10",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3518:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3470:63:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a46554e44535f4c4f434b4544",
                        "id": 2327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3535:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c0f6d52ffdeb0bd25a230e1a7659ada483ed512b216d6ee194ba6285cb9fd4c",
                          "typeString": "literal_string \"P:FUNDS_LOCKED\""
                        },
                        "value": "P:FUNDS_LOCKED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c0f6d52ffdeb0bd25a230e1a7659ada483ed512b216d6ee194ba6285cb9fd4c",
                          "typeString": "literal_string \"P:FUNDS_LOCKED\""
                        }
                      ],
                      "id": 2317,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3462:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2328,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3462:90:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2329,
                  "nodeType": "ExpressionStatement",
                  "src": "3462:90:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 2336,
                                "name": "liquidityLocker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 357,
                                "src": "3612:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                                  "typeString": "contract ILiquidityLocker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                                  "typeString": "contract ILiquidityLocker"
                                }
                              ],
                              "id": 2335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3604:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 2334,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3604:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 2337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3604:24:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2332,
                            "name": "liquidityAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 360,
                            "src": "3579:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$52613",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 2333,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3594:9:10",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52570,
                          "src": "3579:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 2338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3579:50:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2341,
                            "name": "_holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2312,
                            "src": "3647:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 2339,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "3631:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_Pool_$2573_$",
                              "typeString": "type(contract super Pool)"
                            }
                          },
                          "id": 2340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3637:9:10",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52121,
                          "src": "3631:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 2342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3631:24:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2330,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54524,
                        "src": "3570:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$54524_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 2331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3575:3:10",
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 53675,
                      "src": "3570:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 2343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3570:86:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2316,
                  "id": 2344,
                  "nodeType": "Return",
                  "src": "3563:93:10"
                }
              ]
            },
            "functionSelector": "fa8c00d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawableOf",
            "nameLocation": "3388:14:10",
            "parameters": {
              "id": 2313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2312,
                  "mutability": "mutable",
                  "name": "_holder",
                  "nameLocation": "3411:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2346,
                  "src": "3403:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3403:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3402:17:10"
            },
            "returnParameters": {
              "id": 2316,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2315,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2346,
                  "src": "3443:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3443:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3442:9:10"
            },
            "scope": 2573,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2354,
            "nodeType": "FunctionDefinition",
            "src": "3669:93:10",
            "nodes": [],
            "body": {
              "id": 2353,
              "nodeType": "Block",
              "src": "3727:35:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2351,
                    "name": "totalMinted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 364,
                    "src": "3744:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2350,
                  "id": 2352,
                  "nodeType": "Return",
                  "src": "3737:18:10"
                }
              ]
            },
            "functionSelector": "ff50abdc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDeposited",
            "nameLocation": "3678:14:10",
            "parameters": {
              "id": 2347,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3692:2:10"
            },
            "returnParameters": {
              "id": 2350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2354,
                  "src": "3718:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2348,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3718:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3717:9:10"
            },
            "scope": 2573,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2366,
            "nodeType": "FunctionDefinition",
            "src": "3768:110:10",
            "nodes": [],
            "body": {
              "id": 2365,
              "nodeType": "Block",
              "src": "3825:53:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2362,
                        "name": "liquidityAssetDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 362,
                        "src": "3848:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 2361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3842:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 2360,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3842:5:10",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 2363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3842:29:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 2359,
                  "id": 2364,
                  "nodeType": "Return",
                  "src": "3835:36:10"
                }
              ]
            },
            "baseFunctions": [
              52099
            ],
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "3777:8:10",
            "overrides": {
              "id": 2356,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3800:8:10"
            },
            "parameters": {
              "id": 2355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3785:2:10"
            },
            "returnParameters": {
              "id": 2359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2358,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2366,
                  "src": "3818:5:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 2357,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3818:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3817:7:10"
            },
            "scope": 2573,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 2445,
            "nodeType": "FunctionDefinition",
            "src": "4130:590:10",
            "nodes": [],
            "body": {
              "id": 2444,
              "nodeType": "Block",
              "src": "4244:476:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2381,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2369,
                          "src": "4262:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4272:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4262:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a494e56414c49445f56414c5545",
                        "id": 2384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4275:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_632ca18c63f3062ec04cfbb1b0835c925afc1a7a8893be5b91fc3f71bcc4360e",
                          "typeString": "literal_string \"P:INVALID_VALUE\""
                        },
                        "value": "P:INVALID_VALUE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_632ca18c63f3062ec04cfbb1b0835c925afc1a7a8893be5b91fc3f71bcc4360e",
                          "typeString": "literal_string \"P:INVALID_VALUE\""
                        }
                      ],
                      "id": 2380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4254:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4254:39:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2386,
                  "nodeType": "ExpressionStatement",
                  "src": "4254:39:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2388,
                            "name": "_holders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2372,
                            "src": "4311:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 2389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4320:6:10",
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4311:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 2390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4329:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4311:19:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a5a45524f5f484f4c44455253",
                        "id": 2392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4332:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a71f6c9a741fca02adad19715756b060512c33ddcb26ec22f63ee3211bc5072",
                          "typeString": "literal_string \"P:ZERO_HOLDERS\""
                        },
                        "value": "P:ZERO_HOLDERS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a71f6c9a741fca02adad19715756b060512c33ddcb26ec22f63ee3211bc5072",
                          "typeString": "literal_string \"P:ZERO_HOLDERS\""
                        }
                      ],
                      "id": 2387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4303:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4303:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2394,
                  "nodeType": "ExpressionStatement",
                  "src": "4303:46:10"
                },
                {
                  "body": {
                    "id": 2442,
                    "nodeType": "Block",
                    "src": "4405:309:10",
                    "statements": [
                      {
                        "assignments": [
                          2407
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2407,
                            "mutability": "mutable",
                            "name": "holder",
                            "nameLocation": "4427:6:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2442,
                            "src": "4419:14:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 2406,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4419:7:10",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2411,
                        "initialValue": {
                          "baseExpression": {
                            "id": 2408,
                            "name": "_holders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2372,
                            "src": "4436:8:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                              "typeString": "address[] calldata"
                            }
                          },
                          "id": 2410,
                          "indexExpression": {
                            "id": 2409,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2396,
                            "src": "4445:1:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4436:11:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4419:28:10"
                      },
                      {
                        "assignments": [
                          2413
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2413,
                            "mutability": "mutable",
                            "name": "holderBalance",
                            "nameLocation": "4470:13:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2442,
                            "src": "4462:21:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2412,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4462:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2417,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2415,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2407,
                              "src": "4496:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2414,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52121,
                            "src": "4486:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 2416,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4486:17:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4462:41:10"
                      },
                      {
                        "assignments": [
                          2419
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2419,
                            "mutability": "mutable",
                            "name": "holderShare",
                            "nameLocation": "4525:11:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2442,
                            "src": "4517:19:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2418,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4517:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2427,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 2422,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 2420,
                                  "name": "holderBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2413,
                                  "src": "4540:13:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "31653138",
                                  "id": 2421,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4556:4:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "value": "1e18"
                                },
                                "src": "4540:20:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2423,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4539:22:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "expression": {
                              "id": 2424,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "4564:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$469_storage",
                                "typeString": "struct AbstractPool.PoolInfo storage ref"
                              }
                            },
                            "id": 2425,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4573:18:10",
                            "memberName": "investmentPoolSize",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 464,
                            "src": "4564:27:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4539:52:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4517:74:10"
                      },
                      {
                        "assignments": [
                          2429
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2429,
                            "mutability": "mutable",
                            "name": "holderRewards",
                            "nameLocation": "4613:13:10",
                            "nodeType": "VariableDeclaration",
                            "scope": 2442,
                            "src": "4605:21:10",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2428,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "4605:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2435,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 2430,
                              "name": "holderShare",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2419,
                              "src": "4629:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 2431,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2369,
                              "src": "4643:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4629:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 2433,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4653:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "4629:28:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4605:52:10"
                      },
                      {
                        "expression": {
                          "id": 2440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 2436,
                              "name": "rewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 372,
                              "src": "4671:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2438,
                            "indexExpression": {
                              "id": 2437,
                              "name": "holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2407,
                              "src": "4679:6:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4671:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 2439,
                            "name": "holderRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2429,
                            "src": "4690:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4671:32:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2441,
                        "nodeType": "ExpressionStatement",
                        "src": "4671:32:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 2399,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2396,
                      "src": "4379:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 2400,
                        "name": "_holders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2372,
                        "src": "4383:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                          "typeString": "address[] calldata"
                        }
                      },
                      "id": 2401,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4392:6:10",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4383:15:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4379:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2443,
                  "initializationExpression": {
                    "assignments": [
                      2396
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 2396,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4372:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 2443,
                        "src": "4364:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2395,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4364:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 2398,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 2397,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4376:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4364:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 2404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4400:3:10",
                      "subExpression": {
                        "id": 2403,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2396,
                        "src": "4400:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 2405,
                    "nodeType": "ExpressionStatement",
                    "src": "4400:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "4359:355:10"
                }
              ]
            },
            "baseFunctions": [
              980
            ],
            "documentation": {
              "id": 2367,
              "nodeType": "StructuredDocumentation",
              "src": "3884:241:10",
              "text": "@notice Used to distribute rewards among investors (LP token holders)\n @param  _amount the amount to be divided among investors\n @param  _holders the list of investors must be provided externally due to Solidity limitations"
            },
            "functionSelector": "1aa59542",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2376,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2375,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "4221:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1247,
                  "src": "4221:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "4221:9:10"
              },
              {
                "id": 2378,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2377,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "4231:12:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53398,
                  "src": "4231:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "4231:12:10"
              }
            ],
            "name": "distributeRewards",
            "nameLocation": "4139:17:10",
            "overrides": {
              "id": 2374,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4212:8:10"
            },
            "parameters": {
              "id": 2373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2369,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4165:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2445,
                  "src": "4157:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2368,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4157:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2372,
                  "mutability": "mutable",
                  "name": "_holders",
                  "nameLocation": "4193:8:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2445,
                  "src": "4174:27:10",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2370,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "4174:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2371,
                    "nodeType": "ArrayTypeName",
                    "src": "4174:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4156:46:10"
            },
            "returnParameters": {
              "id": 2379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4244:0:10"
            },
            "scope": 2573,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2459,
            "nodeType": "FunctionDefinition",
            "src": "4726:121:10",
            "nodes": [],
            "body": {
              "id": 2458,
              "nodeType": "Block",
              "src": "4791:56:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 2456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2452,
                      "name": "blendedPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2083,
                      "src": "4801:11:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BlendedPool_$1764",
                        "typeString": "contract BlendedPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 2454,
                          "name": "_blendedPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2447,
                          "src": "4827:12:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2453,
                        "name": "BlendedPool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1764,
                        "src": "4815:11:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_BlendedPool_$1764_$",
                          "typeString": "type(contract BlendedPool)"
                        }
                      },
                      "id": 2455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4815:25:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BlendedPool_$1764",
                        "typeString": "contract BlendedPool"
                      }
                    },
                    "src": "4801:39:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BlendedPool_$1764",
                      "typeString": "contract BlendedPool"
                    }
                  },
                  "id": 2457,
                  "nodeType": "ExpressionStatement",
                  "src": "4801:39:10"
                }
              ]
            },
            "functionSelector": "a81b3545",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 2450,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2449,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "4781:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1247,
                  "src": "4781:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "4781:9:10"
              }
            ],
            "name": "setBlendedPool",
            "nameLocation": "4735:14:10",
            "parameters": {
              "id": 2448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2447,
                  "mutability": "mutable",
                  "name": "_blendedPool",
                  "nameLocation": "4758:12:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2459,
                  "src": "4750:20:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2446,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4750:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4749:22:10"
            },
            "returnParameters": {
              "id": 2451,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4791:0:10"
            },
            "scope": 2573,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 2497,
            "nodeType": "FunctionDefinition",
            "src": "4853:333:10",
            "nodes": [],
            "body": {
              "id": 2496,
              "nodeType": "Block",
              "src": "4922:264:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 2467,
                              "name": "depositDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 384,
                              "src": "4940:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 2469,
                            "indexExpression": {
                              "id": 2468,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2461,
                              "src": "4952:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4940:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 2470,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 480,
                              "src": "4963:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$469_storage",
                                "typeString": "struct AbstractPool.PoolInfo storage ref"
                              }
                            },
                            "id": 2471,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4972:12:10",
                            "memberName": "lockupPeriod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 458,
                            "src": "4963:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4940:44:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 2473,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4988:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 2474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4994:9:10",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4988:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4940:63:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a46554e44535f4c4f434b4544",
                        "id": 2476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5005:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c0f6d52ffdeb0bd25a230e1a7659ada483ed512b216d6ee194ba6285cb9fd4c",
                          "typeString": "literal_string \"P:FUNDS_LOCKED\""
                        },
                        "value": "P:FUNDS_LOCKED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c0f6d52ffdeb0bd25a230e1a7659ada483ed512b216d6ee194ba6285cb9fd4c",
                          "typeString": "literal_string \"P:FUNDS_LOCKED\""
                        }
                      ],
                      "id": 2466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4932:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4932:90:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2478,
                  "nodeType": "ExpressionStatement",
                  "src": "4932:90:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2481,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2461,
                              "src": "5050:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2480,
                            "name": "balanceOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 52121,
                            "src": "5040:9:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 2482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5040:18:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 2483,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2463,
                          "src": "5062:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5040:28:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a494e53554646494349454e545f42414c414e4345",
                        "id": 2485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5070:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6e2d3b103d83a0d69ab435a03b411e7cd68ec22bdf466235c055ad4cce8c6ad",
                          "typeString": "literal_string \"P:INSUFFICIENT_BALANCE\""
                        },
                        "value": "P:INSUFFICIENT_BALANCE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6e2d3b103d83a0d69ab435a03b411e7cd68ec22bdf466235c055ad4cce8c6ad",
                          "typeString": "literal_string \"P:INSUFFICIENT_BALANCE\""
                        }
                      ],
                      "id": 2479,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5032:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5032:63:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2487,
                  "nodeType": "ExpressionStatement",
                  "src": "5032:63:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 2492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2489,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2463,
                          "src": "5113:6:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 2490,
                            "name": "_balanceOfLiquidityLocker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2511,
                            "src": "5123:25:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 2491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5123:27:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5113:37:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a494e53554646494349454e545f4c4951554944495459",
                        "id": 2493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5152:26:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5179bdfd361d029f52838fe6e601983f8a91bc248b24ef7e08815d3d01802b18",
                          "typeString": "literal_string \"P:INSUFFICIENT_LIQUIDITY\""
                        },
                        "value": "P:INSUFFICIENT_LIQUIDITY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5179bdfd361d029f52838fe6e601983f8a91bc248b24ef7e08815d3d01802b18",
                          "typeString": "literal_string \"P:INSUFFICIENT_LIQUIDITY\""
                        }
                      ],
                      "id": 2488,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5105:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5105:74:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2495,
                  "nodeType": "ExpressionStatement",
                  "src": "5105:74:10"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_canWithdraw",
            "nameLocation": "4862:12:10",
            "parameters": {
              "id": 2464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2461,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4883:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2497,
                  "src": "4875:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4875:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2463,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4900:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2497,
                  "src": "4892:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4892:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4874:33:10"
            },
            "returnParameters": {
              "id": 2465,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4922:0:10"
            },
            "scope": 2573,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2511,
            "nodeType": "FunctionDefinition",
            "src": "5227:143:10",
            "nodes": [],
            "body": {
              "id": 2510,
              "nodeType": "Block",
              "src": "5296:74:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2506,
                            "name": "liquidityLocker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 357,
                            "src": "5346:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                              "typeString": "contract ILiquidityLocker"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                              "typeString": "contract ILiquidityLocker"
                            }
                          ],
                          "id": 2505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5338:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2504,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5338:7:10",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5338:24:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 2502,
                        "name": "liquidityAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "5313:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$52613",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5328:9:10",
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52570,
                      "src": "5313:24:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5313:50:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 2501,
                  "id": 2509,
                  "nodeType": "Return",
                  "src": "5306:57:10"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_balanceOfLiquidityLocker",
            "nameLocation": "5236:25:10",
            "parameters": {
              "id": 2498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5261:2:10"
            },
            "returnParameters": {
              "id": 2501,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2500,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2511,
                  "src": "5287:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2499,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5287:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5286:9:10"
            },
            "scope": 2573,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2525,
            "nodeType": "FunctionDefinition",
            "src": "5433:132:10",
            "nodes": [],
            "body": {
              "id": 2524,
              "nodeType": "Block",
              "src": "5481:84:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5499:40:10",
                        "subExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2516,
                                  "name": "superFactory",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 368,
                                  "src": "5509:12:10",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2515,
                                "name": "_globals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  2572
                                ],
                                "referencedDeclaration": 2572,
                                "src": "5500:8:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_contract$_IHeliosGlobals_$235_$",
                                  "typeString": "function (address) view returns (contract IHeliosGlobals)"
                                }
                              },
                              "id": 2517,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5500:22:10",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IHeliosGlobals_$235",
                                "typeString": "contract IHeliosGlobals"
                              }
                            },
                            "id": 2518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5523:14:10",
                            "memberName": "protocolPaused",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 206,
                            "src": "5500:37:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                              "typeString": "function () view external returns (bool)"
                            }
                          },
                          "id": 2519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5500:39:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a50524f544f5f504155534544",
                        "id": 2521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5541:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e82cfe487ceb95d02498cab97f189f4a04df24267b7d64872770659e68f5c819",
                          "typeString": "literal_string \"P:PROTO_PAUSED\""
                        },
                        "value": "P:PROTO_PAUSED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e82cfe487ceb95d02498cab97f189f4a04df24267b7d64872770659e68f5c819",
                          "typeString": "literal_string \"P:PROTO_PAUSED\""
                        }
                      ],
                      "id": 2514,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5491:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 2522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5491:67:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2523,
                  "nodeType": "ExpressionStatement",
                  "src": "5491:67:10"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_whenProtocolNotPaused",
            "nameLocation": "5442:22:10",
            "parameters": {
              "id": 2512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5464:2:10"
            },
            "returnParameters": {
              "id": 2513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5481:0:10"
            },
            "scope": 2573,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2543,
            "nodeType": "FunctionDefinition",
            "src": "5626:152:10",
            "nodes": [],
            "body": {
              "id": 2542,
              "nodeType": "Block",
              "src": "5713:65:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2537,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2527,
                        "src": "5755:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2538,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2529,
                        "src": "5761:2:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2539,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2531,
                        "src": "5765:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 2534,
                        "name": "liquidityAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 360,
                        "src": "5723:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$52613",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5738:16:10",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52752,
                      "src": "5723:31:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$52613_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$52613_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 2540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5723:48:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2541,
                  "nodeType": "ExpressionStatement",
                  "src": "5723:48:10"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transferLiquidityAssetFrom",
            "nameLocation": "5635:27:10",
            "parameters": {
              "id": 2532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2527,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "5671:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2543,
                  "src": "5663:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5663:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2529,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5685:2:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2543,
                  "src": "5677:10:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2528,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5677:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2531,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "5697:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2543,
                  "src": "5689:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5689:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5662:41:10"
            },
            "returnParameters": {
              "id": 2533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5713:0:10"
            },
            "scope": 2573,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2554,
            "nodeType": "FunctionDefinition",
            "src": "5828:126:10",
            "nodes": [],
            "body": {
              "id": 2553,
              "nodeType": "Block",
              "src": "5897:57:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2550,
                        "name": "liquidityLocker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 357,
                        "src": "5931:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                          "typeString": "contract ILiquidityLocker"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                          "typeString": "contract ILiquidityLocker"
                        }
                      ],
                      "id": 2549,
                      "name": "ILiquidityLocker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 283,
                      "src": "5914:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ILiquidityLocker_$283_$",
                        "typeString": "type(contract ILiquidityLocker)"
                      }
                    },
                    "id": 2551,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5914:33:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                      "typeString": "contract ILiquidityLocker"
                    }
                  },
                  "functionReturnParameters": 2548,
                  "id": 2552,
                  "nodeType": "Return",
                  "src": "5907:40:10"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_liquidityLocker",
            "nameLocation": "5837:16:10",
            "parameters": {
              "id": 2544,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5853:2:10"
            },
            "returnParameters": {
              "id": 2548,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2547,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2554,
                  "src": "5879:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                    "typeString": "contract ILiquidityLocker"
                  },
                  "typeName": {
                    "id": 2546,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2545,
                      "name": "ILiquidityLocker",
                      "nameLocations": [
                        "5879:16:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 283,
                      "src": "5879:16:10"
                    },
                    "referencedDeclaration": 283,
                    "src": "5879:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityLocker_$283",
                      "typeString": "contract ILiquidityLocker"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5878:18:10"
            },
            "scope": 2573,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 2572,
            "nodeType": "FunctionDefinition",
            "src": "6002:162:10",
            "nodes": [],
            "body": {
              "id": 2571,
              "nodeType": "Block",
              "src": "6089:75:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [
                              {
                                "id": 2565,
                                "name": "poolFactory",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2556,
                                "src": "6134:11:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 2564,
                              "name": "IPoolFactory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "6121:12:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IPoolFactory_$308_$",
                                "typeString": "type(contract IPoolFactory)"
                              }
                            },
                            "id": 2566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6121:25:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IPoolFactory_$308",
                              "typeString": "contract IPoolFactory"
                            }
                          },
                          "id": 2567,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "6147:7:10",
                          "memberName": "globals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 307,
                          "src": "6121:33:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IHeliosGlobals_$235_$",
                            "typeString": "function () view external returns (contract IHeliosGlobals)"
                          }
                        },
                        "id": 2568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6121:35:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IHeliosGlobals_$235",
                          "typeString": "contract IHeliosGlobals"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IHeliosGlobals_$235",
                          "typeString": "contract IHeliosGlobals"
                        }
                      ],
                      "id": 2563,
                      "name": "IHeliosGlobals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 235,
                      "src": "6106:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_IHeliosGlobals_$235_$",
                        "typeString": "type(contract IHeliosGlobals)"
                      }
                    },
                    "id": 2569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6106:51:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHeliosGlobals_$235",
                      "typeString": "contract IHeliosGlobals"
                    }
                  },
                  "functionReturnParameters": 2562,
                  "id": 2570,
                  "nodeType": "Return",
                  "src": "6099:58:10"
                }
              ]
            },
            "baseFunctions": [
              1232
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_globals",
            "nameLocation": "6011:8:10",
            "overrides": {
              "id": 2558,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6050:8:10"
            },
            "parameters": {
              "id": 2557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2556,
                  "mutability": "mutable",
                  "name": "poolFactory",
                  "nameLocation": "6028:11:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 2572,
                  "src": "6020:19:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2555,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6020:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6019:21:10"
            },
            "returnParameters": {
              "id": 2562,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2561,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 2572,
                  "src": "6073:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IHeliosGlobals_$235",
                    "typeString": "contract IHeliosGlobals"
                  },
                  "typeName": {
                    "id": 2560,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2559,
                      "name": "IHeliosGlobals",
                      "nameLocations": [
                        "6073:14:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 235,
                      "src": "6073:14:10"
                    },
                    "referencedDeclaration": 235,
                    "src": "6073:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IHeliosGlobals_$235",
                      "typeString": "contract IHeliosGlobals"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6072:16:10"
            },
            "scope": 2573,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 2075,
              "name": "AbstractPool",
              "nameLocations": [
                "881:12:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1248,
              "src": "881:12:10"
            },
            "id": 2076,
            "nodeType": "InheritanceSpecifier",
            "src": "881:12:10"
          }
        ],
        "canonicalName": "Pool",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          2573,
          1248,
          53365,
          53434,
          52535,
          51925,
          52639,
          52613,
          53248
        ],
        "name": "Pool",
        "nameLocation": "873:4:10",
        "scope": 2574,
        "usedErrors": [
          51895,
          51900,
          51905,
          51914,
          51919,
          51924,
          52692,
          52973,
          52978,
          52981,
          53270,
          53273,
          53379
        ],
        "usedEvents": [
          400,
          406,
          412,
          418,
          424,
          430,
          436,
          442,
          448,
          456,
          2093,
          52547,
          52556,
          53262,
          53267
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 10
}