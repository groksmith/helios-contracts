{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_liquidityAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_llFactory",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_lockupPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_apy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minInvestmentAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidityProvider",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "BalanceUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fundsDistributed",
          "type": "uint256"
        }
      ],
      "name": "FundsDistributed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fundsWithdrawn",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalWithdrawn",
          "type": "uint256"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PendingReward",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PendingRewardConcluded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PendingWithdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "PendingWithdrawalConcluded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "pointsCorrection",
          "type": "int256"
        }
      ],
      "name": "PointsCorrectionUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "pointsPerShare",
          "type": "uint256"
        }
      ],
      "name": "PointsPerShareUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "regPool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RegPoolDeposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "RewardClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "investor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "accumulativeFundsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "addPool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "_pools",
          "type": "address[]"
        }
      ],
      "name": "addPools",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "borrower",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimReward",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "concludePendingReward",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_recipient",
          "type": "address"
        }
      ],
      "name": "concludePendingWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "depositDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_holders",
          "type": "address[]"
        }
      ],
      "name": "distributeRewards",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "interestBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "interestSum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityAsset",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "liquidityLocker",
      "outputs": [
        {
          "internalType": "contract ILiquidityLocker",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pendingWithdrawals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "poolInfo",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "lockupPeriod",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "apy",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "investmentPoolSize",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minInvestmentAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "pools",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "principalOut",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "name": "removePool",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amountMissing",
          "type": "uint256"
        }
      ],
      "name": "requestLiquidityAssets",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "rewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "superFactory",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalDeposited",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalLA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "totalMintedFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupplyLA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updateFundsReceived",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawFundsAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "withdrawableFundsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_holder",
          "type": "address"
        }
      ],
      "name": "withdrawableOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "withdrawnFundsOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101006040523480156200001257600080fd5b506040516200316238038062003162833981016040819052620000359162000327565b85856040518060400160405280600f81526020016e12195b1a5bdcc81512d388141bdbdb608a1b815250604051806040016040528060058152602001640484c532d560dc1b815250818181818181816003908162000094919062000429565b506004620000a3828262000429565b505060016005555050600d805460ff1916905550620000c69150339050620002b0565b6001600160a01b03841660a08190526040805163313ce56760e01b8152905163313ce567916004808201926020929091908290030181865afa15801562000111573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001379190620004f5565b60ff1660c052604051630cf5bc1d60e11b81526001600160a01b0385811660048301528416906319eb783a906024016020604051808303816000875af115801562000186573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001ac919062000521565b6001600160a01b039081166080528a16935062000207925050505760405162461bcd60e51b815260206004820152601060248201526f140e96915493d7d3125457d054d4d15560821b60448201526064015b60405180910390fd5b6001600160a01b0385166200025f5760405162461bcd60e51b815260206004820152601960248201527f503a5a45524f5f4c49515f4c4f434b45525f464143544f5259000000000000006044820152606401620001fe565b3360e0526040805160a08101825285815260208101859052908101839052600019606082018190526080909101829052601294909455601392909255601455601591909155601655506200053f9050565b600d80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516001600160a01b03811681146200032257600080fd5b919050565b60008060008060008060c087890312156200034157600080fd5b6200034c876200030a565b95506200035c602088016200030a565b945060408701519350606087015192506080870151915060a087015190509295509295509295565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620003af57607f821691505b602082108103620003d057634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200042457600081815260208120601f850160051c81016020861015620003ff5750805b601f850160051c820191505b8181101562000420578281556001016200040b565b5050505b505050565b81516001600160401b0381111562000445576200044562000384565b6200045d816200045684546200039a565b84620003d6565b602080601f8311600181146200049557600084156200047c5750858301515b600019600386901b1c1916600185901b17855562000420565b600085815260208120601f198616915b82811015620004c657888601518255948401946001909101908401620004a5565b5085821015620004e55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000602082840312156200050857600080fd5b815160ff811681146200051a57600080fd5b9392505050565b6000602082840312156200053457600080fd5b6200051a826200030a565b60805160a05160c05160e051612b87620005db6000396000610358015260006104360152600081816103c701528181611117015281816116b50152611c490152600081816105ac0152818161096a01528181610b6e01528181610cf501528181610e820152818161113a015281816111c4015281816115170152818161168901528181611bd101528181611c730152611cbe0152612b876000f3fe608060405234801561001057600080fd5b50600436106102ba5760003560e01c806371073bac11610182578063ac641655116100e9578063dd62ed3e116100a2578063f48ccb041161007c578063f48ccb04146106c1578063fa8c00d4146106d4578063fe84967e146106e7578063ff50abdc1461071057600080fd5b8063dd62ed3e1461067b578063f2fde38b1461068e578063f3f43703146106a157600080fd5b8063ac64165514610620578063b36a4ab114610629578063b6b55f251461063c578063b88a802f1461064f578063d16987f914610657578063d914cd4b1461066857600080fd5b806395d89b411161013b57806395d89b411461059f5780639759164a146105a75780639f3c7325146105ce578063a4063dbc146105d7578063a457c2d7146105fa578063a9059cbb1461060d57600080fd5b806371073bac14610552578063715018a61461055b5780637df1f1b9146105635780637dfabf49146104a65780638da5cb5b146105765780639264fd531461058c57600080fd5b80632e1a7d4d11610226578063443bb293116101df578063443bb293146104ae57806346c162de146104c15780634e97415f146104c95780635a2f3d09146104dc5780635c975abb1461051e57806370a082311461052957600080fd5b80632e1a7d4d1461041c578063313ce5671461042f57806331d7a2621461046057806339509351146104805780633b7d09461461049357806342103e8e146104a657600080fd5b80631aa59542116102785780631aa595421461039a5780631e0a5967146103af578063209b2bca146103c257806323b872dd146103e957806324600fc3146103ad57806324b92e8e146103fc57600080fd5b806241c52c146102bf57806306fdde03146102fb5780630700037d14610310578063095ea7b3146103305780630d49b38c1461035357806318160ddd14610392575b600080fd5b6102e86102cd366004612747565b6001600160a01b031660009081526009602052604090205490565b6040519081526020015b60405180910390f35b610303610718565b6040516102f29190612786565b6102e861031e366004612747565b600e6020526000908152604090205481565b61034361033e3660046127b9565b6107aa565b60405190151581526020016102f2565b61037a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102f2565b6002546102e8565b6103ad6103a83660046127e3565b6107c4565b005b6103ad6103bd366004612747565b610928565b61037a7f000000000000000000000000000000000000000000000000000000000000000081565b6103436103f7366004612862565b610a7c565b6102e861040a366004612747565b60116020526000908152604090205481565b61034361042a36600461289e565b610aa2565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016102f2565b6102e861046e366004612747565b60106020526000908152604090205481565b61034361048e3660046127b9565b610ca6565b6103ad6104a1366004612747565b610cc8565b6102e8610cf1565b6102e86104bc366004612747565b610d7a565b6103ad610da6565b6102e86104d7366004612747565b610dce565b6012546013546014546015546016546104f6949392919085565b604080519586526020860194909452928401919091526060830152608082015260a0016102f2565b600d5460ff16610343565b6102e8610537366004612747565b6001600160a01b031660009081526020819052604090205490565b6102e8600b5481565b6103ad610e2e565b60185461037a906001600160a01b031681565b600d5461010090046001600160a01b031661037a565b6103ad61059a366004612747565b610e40565b610303610f88565b61037a7f000000000000000000000000000000000000000000000000000000000000000081565b6102e8600c5481565b6103436105e5366004612747565b60196020526000908152604090205460ff1681565b6103436106083660046127b9565b610f97565b61034361061b3660046127b9565b611012565b6102e860175481565b6103ad6106373660046128cd565b611020565b6103ad61064a36600461289e565b611094565b6103436111b0565b6103ad61066536600461289e565b50565b6103ad610676366004612747565b611354565b6102e8610689366004612992565b611380565b6103ad61069c366004612747565b6113ab565b6102e86106af366004612747565b600f6020526000908152604090205481565b6103ad6106cf36600461289e565b611421565b6102e86106e2366004612747565b611609565b6102e86106f5366004612747565b6001600160a01b03166000908152600a602052604090205490565b6007546102e8565b606060038054610727906129c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610753906129c5565b80156107a05780601f10610775576101008083540402835291602001916107a0565b820191906000526020600020905b81548152906001019060200180831161078357829003601f168201915b5050505050905090565b6000336107b8818585611740565b60019150505b92915050565b6107cc611864565b6107d46118c4565b600083116108185760405162461bcd60e51b815260206004820152600c60248201526b503a5a45524f5f434c41494d60a01b60448201526064015b60405180910390fd5b806108565760405162461bcd60e51b815260206004820152600e60248201526d503a5a45524f5f484f4c4445525360901b604482015260640161080f565b60005b81811015610918576000838383818110610875576108756129ff565b905060200201602081019061088a9190612747565b905060006108ad826001600160a01b031660009081526020819052604090205490565b905060006108ba60025490565b6108c48389612a2b565b6108ce9190612a4a565b6001600160a01b0384166000908152600e60205260408120805492935083929091906108fb908490612a6c565b92505081905550505050808061091090612a7f565b915050610859565b506109236001600555565b505050565b610930611864565b6001600160a01b038181166000818152600f60205260409081902054905163a9059cbb60e01b8152600481019290925260248201819052917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156109b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d79190612a98565b610a235760405162461bcd60e51b815260206004820152601c60248201527f503a434f4e434c5544455f5749544844524157414c5f4641494c454400000000604482015260640161080f565b6001600160a01b0382166000818152600f602052604080822091909155517f2687ab3014fc32ee1bbb5acb4d4879d56644ad540a426c06d7deaa8f127b232390610a709084815260200190565b60405180910390a25050565b600033610a8a85828561191d565b610a95858585611997565b506001949350505050565b565b6000610aac611abe565b33600090815260208190526040902054821115610b045760405162461bcd60e51b8152602060048201526016602482015275503a494e53554646494349454e545f42414c414e434560501b604482015260640161080f565b601254336000908152601160205260409020544291610b2291612a6c565b1115610b615760405162461bcd60e51b815260206004820152600e60248201526d140e9195539114d7d313d0d2d15160921b604482015260640161080f565b610b6b3383611b04565b817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bee9190612aba565b1015610c5557336000908152600f602052604081208054849290610c13908490612a6c565b909155505060405182815233907f39d9cf4ffb93650d8ce789639cb8cf3c8d7b039e1f9795c038af55b4ae643fca9060200160405180910390a2506000919050565b610c5f3383611ba8565b50610c68611c47565b60405182815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a25060015b919050565b6000336107b8818585610cb98383611380565b610cc39190612a6c565b611740565b610cd0611864565b6001600160a01b03166000908152601960205260409020805460ff19169055565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d759190612aba565b905090565b6001600160a01b0381166000908152600960205260408120546107be90610da084610dce565b90611d51565b6000610db0611d5d565b905060008113610dbd5750565b610665610dc982611d7b565b611dbb565b6001600160a01b03811660009081526008602090815260408083205491839052822054600654670de0b6b3a764000092610e2492610e1f92610e1991610e149190611eb7565b611ec3565b90611eff565b611d7b565b6107be9190612a4a565b610e36611864565b610aa06000611f0b565b610e48611864565b6001600160a01b038181166000818152601060205260409081902054905163a9059cbb60e01b8152600481019290925260248201819052917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610ecb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eef9190612a98565b610f3b5760405162461bcd60e51b815260206004820152601860248201527f503a434f4e434c5544455f5245574152445f4641494c45440000000000000000604482015260640161080f565b6001600160a01b03821660008181526010602052604080822091909155517f3c7e767b6741d1e3a8f90a3c95937bb07453eaf2dfee591a5a308f04f498e8b890610a709084815260200190565b606060048054610727906129c5565b60003381610fa58286611380565b9050838110156110055760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161080f565b610a958286868403611740565b6000336107b8818585611997565b611028611864565b60005b81518110156110905760016019600084848151811061104c5761104c6129ff565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061108881612a7f565b91505061102b565b5050565b61109c611abe565b6110a46118c4565b6016548110156110ec5760405162461bcd60e51b8152602060048201526013602482015272281d2222a82fa0a6aa2fa122a627abafa6a4a760691b604482015260640161080f565b3360009081526020819052604090205461110a906011908333611f65565b61115f6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016337f000000000000000000000000000000000000000000000000000000000000000084612015565b611169338261206f565b611171611c47565b60405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a26106656001600555565b336000908152600e602052604081205460007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611220573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112449190612aba565b336000908152600e60205260408120559050818110156112c057336000908152601060205260408120805484929061127d908490612a6c565b909155505060405182815233907f19adda954c72f22df5078ae925d620d455e095989b72be2f895e10473b5379779060200160405180910390a260009250505090565b6112ca3383611ba8565b6113165760405162461bcd60e51b815260206004820152601b60248201527f503a4552524f525f5452414e5346455252494e475f5245574152440000000000604482015260640161080f565b60405182815233907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72419060200160405180910390a260019250505090565b61135c611864565b6001600160a01b03166000908152601960205260409020805460ff19166001179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6113b3611864565b6001600160a01b0381166114185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161080f565b61066581611f0b565b3360009081526019602052604090205460ff1661146d5760405162461bcd60e51b815260206004820152600a602482015269140e9393d517d413d3d360b21b604482015260640161080f565b600081116114af5760405162461bcd60e51b815260206004820152600f60248201526e140e9253959053125117d253941555608a1b604482015260640161080f565b806114b8610cf1565b10156114fb5760405162461bcd60e51b81526020600482015260126024820152710503a4e4f545f454e4f5547485f4c415f42560741b604482015260640161080f565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015611568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158c9190612a98565b6115d15760405162461bcd60e51b8152602060048201526016602482015275140e949154555154d517d19493d357d09417d190525360521b604482015260640161080f565b60405181815233907fbabc2955520063ac5330d7fe65a85c54fce0d2c473be76d99e29fb7146ac96a09060200160405180910390a250565b6012546001600160a01b038216600090815260116020526040812054909142916116339190612a6c565b11156116725760405162461bcd60e51b815260206004820152600e60248201526d140e9195539114d7d313d0d2d15160921b604482015260640161080f565b6040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526107be917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa1580156116fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117229190612aba565b6001600160a01b0384166000908152602081905260409020546120fc565b6001600160a01b0383166117a25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161080f565b6001600160a01b0382166118035760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161080f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600d546001600160a01b03610100909104163314610aa05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161080f565b6002600554036119165760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161080f565b6002600555565b60006119298484611380565b9050600019811461199157818110156119845760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161080f565b6119918484848403611740565b50505050565b6119a2838383612112565b60006119bc610e1483600654611eb790919063ffffffff16565b6001600160a01b038516600090815260086020526040812054919250906119e39083611eff565b6001600160a01b0380871660009081526008602052604080822084905591871681529081205491925090611a1790846122b6565b6001600160a01b0380871660009081526008602052604090819020839055519192508716907ff694bebd33ada288ae2f4485315db76739e2d5501daf315e71c9d8f841aa777390611a6b9085815260200190565b60405180910390a2846001600160a01b03167ff694bebd33ada288ae2f4485315db76739e2d5501daf315e71c9d8f841aa777382604051611aae91815260200190565b60405180910390a2505050505050565b600d5460ff1615610aa05760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161080f565b611b0e82826122c2565b6000611b4a611b2b610e1484600654611eb790919063ffffffff16565b6001600160a01b03851660009081526008602052604090205490611eff565b6001600160a01b0384166000818152600860205260409081902083905551919250907ff694bebd33ada288ae2f4485315db76739e2d5501daf315e71c9d8f841aa777390611b9b9084815260200190565b60405180910390a2505050565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015611c1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c409190612a98565b9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f2047d1633ff7768462ae07d28cb16e484203bfd6d85ce832494270ebcd9081a27f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d3e9190612aba565b60405190815260200160405180910390a3565b6000611c408284612ad3565b600c8054600b5491829055600091611d7590826122b6565b91505090565b600080821215611db75760405162461bcd60e51b8152602060048201526007602482015266534d493a4e454760c81b604482015260640161080f565b5090565b6000611dc660025490565b11611e055760405162461bcd60e51b815260206004820152600f60248201526e4644543a5a45524f5f535550504c5960881b604482015260640161080f565b80600003611e105750565b611e41611e1c60025490565b611e2e83670de0b6b3a7640000611eb7565b611e389190612a4a565b600654906123f4565b60065560405181815233907f26536799ace2c3dbe12e638ec3ade6b4173dcf1289be0a58d51a5003015649bd9060200160405180910390a27f1f8d7705f31c3337a080803a8ad7e71946fb88d84738879be2bf402f97156e96600654604051611eac91815260200190565b60405180910390a150565b6000611c408284612a2b565b806000811215610ca15760405162461bcd60e51b815260206004820152600760248201526629a6aa9d27a7a160c91b604482015260640161080f565b6000611c408284612ae6565b600d80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381166000908152602085905260408120549080611f8a8587612a6c565b11611f955781611fc6565b611fc6611fbf611fa58688612a6c565b611fb987611fb34288611d51565b90611eb7565b90612400565b83906123f4565b6001600160a01b03841660008181526020898152604091829020849055905183815292935090917ff9b842c70d79466435b46540bb988aa5c998b3243bf91c36380ddb5887c0f0e49101611aae565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261199190859061240c565b61207982826124e1565b60075461208690826123f4565b6007556001600160a01b0382166000908152600a60205260409020546120ac90826123f4565b6001600160a01b0383166000908152600a6020526040812091909155600654611b4a906120dd90610e149085611eb7565b6001600160a01b038516600090815260086020526040902054906122b6565b600081831061210b5781611c40565b5090919050565b6001600160a01b0383166121765760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161080f565b6001600160a01b0382166121d85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161080f565b6001600160a01b038316600090815260208190526040902054818110156122505760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161080f565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611991565b6000611c408284612b0e565b6001600160a01b0382166123225760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161080f565b6001600160a01b038216600090815260208190526040902054818110156123965760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161080f565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6000611c408284612a6c565b6000611c408284612a4a565b6000612461826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166125a09092919063ffffffff16565b90508051600014806124825750808060200190518101906124829190612a98565b6109235760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161080f565b6001600160a01b0382166125375760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161080f565b80600260008282546125499190612a6c565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60606125af84846000856125b7565b949350505050565b6060824710156126185760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161080f565b600080866001600160a01b031685876040516126349190612b35565b60006040518083038185875af1925050503d8060008114612671576040519150601f19603f3d011682016040523d82523d6000602084013e612676565b606091505b509150915061268787838387612692565b979650505050505050565b606083156127015782516000036126fa576001600160a01b0385163b6126fa5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161080f565b50816125af565b6125af83838151156127165781518083602001fd5b8060405162461bcd60e51b815260040161080f9190612786565b80356001600160a01b0381168114610ca157600080fd5b60006020828403121561275957600080fd5b611c4082612730565b60005b8381101561277d578181015183820152602001612765565b50506000910152565b60208152600082518060208401526127a5816040850160208701612762565b601f01601f19169190910160400192915050565b600080604083850312156127cc57600080fd5b6127d583612730565b946020939093013593505050565b6000806000604084860312156127f857600080fd5b83359250602084013567ffffffffffffffff8082111561281757600080fd5b818601915086601f83011261282b57600080fd5b81358181111561283a57600080fd5b8760208260051b850101111561284f57600080fd5b6020830194508093505050509250925092565b60008060006060848603121561287757600080fd5b61288084612730565b925061288e60208501612730565b9150604084013590509250925092565b6000602082840312156128b057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156128e057600080fd5b823567ffffffffffffffff808211156128f857600080fd5b818501915085601f83011261290c57600080fd5b81358181111561291e5761291e6128b7565b8060051b604051601f19603f83011681018181108582111715612943576129436128b7565b60405291825284820192508381018501918883111561296157600080fd5b938501935b828510156129865761297785612730565b84529385019392850192612966565b98975050505050505050565b600080604083850312156129a557600080fd5b6129ae83612730565b91506129bc60208401612730565b90509250929050565b600181811c908216806129d957607f821691505b6020821081036129f957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612a4557612a45612a15565b500290565b600082612a6757634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156107be576107be612a15565b600060018201612a9157612a91612a15565b5060010190565b600060208284031215612aaa57600080fd5b81518015158114611c4057600080fd5b600060208284031215612acc57600080fd5b5051919050565b818103818111156107be576107be612a15565b8082018281126000831280158216821582161715612b0657612b06612a15565b505092915050565b8181036000831280158383131683831282161715612b2e57612b2e612a15565b5092915050565b60008251612b47818460208701612762565b919091019291505056fea2646970667358221220db0a6825944178d0b531421475525ff6a79b1a4f6ee9d4814ca26f0ba75d540064736f6c63430008100033",
    "sourceMap": "470:4058:10:-:0;;;967:625;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1177:15;1194:10;1206:12;;;;;;;;;;;;;-1:-1:-1;;;1206:12:10;;;1220:14;;;;;;;;;;;;;-1:-1:-1;;;1220:14:10;;;1940:9:9;1951:11;734:9:16;745:11;1364:9:15;1375:11;2054:5:20;2046;:13;;;;;;:::i;:::-;-1:-1:-1;2069:7:20;:17;2079:7;2069;:17;:::i;:::-;-1:-1:-1;;1716:1:19;1821:7;:22;-1:-1:-1;;996:7:18;:15;;-1:-1:-1;;996:15:18;;;-1:-1:-1;936:32:17;;-1:-1:-1;719:10:26;;-1:-1:-1;936:18:17;:32::i;:::-;-1:-1:-1;;;;;1974:40:9;::::1;;::::0;;;2049:33:::1;::::0;;-1:-1:-1;;;2049:33:9;;;;:31:::1;::::0;:33:::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;1974:40;2049:33:::1;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2024:58;;;::::0;2140:62:::1;::::0;-1:-1:-1;;;2140:62:9;;-1:-1:-1;;;;;3904:32:32;;;2140:62:9::1;::::0;::::1;3886:51:32::0;2140:45:9;::::1;::::0;::::1;::::0;3859:18:32;;2140:62:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;2092:120:9;;::::1;;::::0;1254:29:10;::::1;::::0;-1:-1:-1;1246:58:10::1;::::0;-1:-1:-1;;;1246:58:10::1;;::::0;-1:-1:-1;;;1246:58:10;;4363:2:32;1246:58:10::1;::::0;::::1;4345:21:32::0;4402:2;4382:18;;;4375:30;-1:-1:-1;;;4421:18:32;;;4414:46;4477:18;;1246:58:10::1;;;;;;;;;-1:-1:-1::0;;;;;1322:24:10;::::1;1314:62;;;::::0;-1:-1:-1;;;1314:62:10;;4708:2:32;1314:62:10::1;::::0;::::1;4690:21:32::0;4747:2;4727:18;;;4720:30;4786:27;4766:18;;;4759:55;4831:18;;1314:62:10::1;4506:349:32::0;1314:62:10::1;1402:10;1387:25;::::0;1434:151:::1;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;;1434:151:10;;;;;;;;;;;;;1423:8:::1;:162:::0;;;;;;;;;;;;;;;;;;-1:-1:-1;470:4058:10;;-1:-1:-1;470:4058:10;2426:187:17;2518:6;;;-1:-1:-1;;;;;2534:17:17;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:17;;;;;;2566:40;;2518:6;;;;;;;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;14:177:32:-;93:13;;-1:-1:-1;;;;;135:31:32;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:540::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:53;;;421:1;418;411:12;372:53;444:40;474:9;444:40;:::i;:::-;434:50;;503:49;548:2;537:9;533:18;503:49;:::i;:::-;493:59;;592:2;581:9;577:18;571:25;561:35;;636:2;625:9;621:18;615:25;605:35;;680:3;669:9;665:19;659:26;649:36;;725:3;714:9;710:19;704:26;694:36;;196:540;;;;;;;;:::o;741:127::-;802:10;797:3;793:20;790:1;783:31;833:4;830:1;823:15;857:4;854:1;847:15;873:380;952:1;948:12;;;;995;;;1016:61;;1070:4;1062:6;1058:17;1048:27;;1016:61;1123:2;1115:6;1112:14;1092:18;1089:38;1086:161;;1169:10;1164:3;1160:20;1157:1;1150:31;1204:4;1201:1;1194:15;1232:4;1229:1;1222:15;1086:161;;873:380;;;:::o;1384:545::-;1486:2;1481:3;1478:11;1475:448;;;1522:1;1547:5;1543:2;1536:17;1592:4;1588:2;1578:19;1662:2;1650:10;1646:19;1643:1;1639:27;1633:4;1629:38;1698:4;1686:10;1683:20;1680:47;;;-1:-1:-1;1721:4:32;1680:47;1776:2;1771:3;1767:12;1764:1;1760:20;1754:4;1750:31;1740:41;;1831:82;1849:2;1842:5;1839:13;1831:82;;;1894:17;;;1875:1;1864:13;1831:82;;;1835:3;;;1475:448;1384:545;;;:::o;2105:1352::-;2225:10;;-1:-1:-1;;;;;2247:30:32;;2244:56;;;2280:18;;:::i;:::-;2309:97;2399:6;2359:38;2391:4;2385:11;2359:38;:::i;:::-;2353:4;2309:97;:::i;:::-;2461:4;;2525:2;2514:14;;2542:1;2537:663;;;;3244:1;3261:6;3258:89;;;-1:-1:-1;3313:19:32;;;3307:26;3258:89;-1:-1:-1;;2062:1:32;2058:11;;;2054:24;2050:29;2040:40;2086:1;2082:11;;;2037:57;3360:81;;2507:944;;2537:663;1331:1;1324:14;;;1368:4;1355:18;;-1:-1:-1;;2573:20:32;;;2691:236;2705:7;2702:1;2699:14;2691:236;;;2794:19;;;2788:26;2773:42;;2886:27;;;;2854:1;2842:14;;;;2721:19;;2691:236;;;2695:3;2955:6;2946:7;2943:19;2940:201;;;3016:19;;;3010:26;-1:-1:-1;;3099:1:32;3095:14;;;3111:3;3091:24;3087:37;3083:42;3068:58;3053:74;;2940:201;-1:-1:-1;;;;;3187:1:32;3171:14;;;3167:22;3154:36;;-1:-1:-1;2105:1352:32:o;3462:273::-;3530:6;3583:2;3571:9;3562:7;3558:23;3554:32;3551:52;;;3599:1;3596;3589:12;3551:52;3631:9;3625:16;3681:4;3674:5;3670:16;3663:5;3660:27;3650:55;;3701:1;3698;3691:12;3650:55;3724:5;3462:273;-1:-1:-1;;;3462:273:32:o;3948:208::-;4018:6;4071:2;4059:9;4050:7;4046:23;4042:32;4039:52;;;4087:1;4084;4077:12;4039:52;4110:40;4140:9;4110:40;:::i;4506:349::-;470:4058:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102ba5760003560e01c806371073bac11610182578063ac641655116100e9578063dd62ed3e116100a2578063f48ccb041161007c578063f48ccb04146106c1578063fa8c00d4146106d4578063fe84967e146106e7578063ff50abdc1461071057600080fd5b8063dd62ed3e1461067b578063f2fde38b1461068e578063f3f43703146106a157600080fd5b8063ac64165514610620578063b36a4ab114610629578063b6b55f251461063c578063b88a802f1461064f578063d16987f914610657578063d914cd4b1461066857600080fd5b806395d89b411161013b57806395d89b411461059f5780639759164a146105a75780639f3c7325146105ce578063a4063dbc146105d7578063a457c2d7146105fa578063a9059cbb1461060d57600080fd5b806371073bac14610552578063715018a61461055b5780637df1f1b9146105635780637dfabf49146104a65780638da5cb5b146105765780639264fd531461058c57600080fd5b80632e1a7d4d11610226578063443bb293116101df578063443bb293146104ae57806346c162de146104c15780634e97415f146104c95780635a2f3d09146104dc5780635c975abb1461051e57806370a082311461052957600080fd5b80632e1a7d4d1461041c578063313ce5671461042f57806331d7a2621461046057806339509351146104805780633b7d09461461049357806342103e8e146104a657600080fd5b80631aa59542116102785780631aa595421461039a5780631e0a5967146103af578063209b2bca146103c257806323b872dd146103e957806324600fc3146103ad57806324b92e8e146103fc57600080fd5b806241c52c146102bf57806306fdde03146102fb5780630700037d14610310578063095ea7b3146103305780630d49b38c1461035357806318160ddd14610392575b600080fd5b6102e86102cd366004612747565b6001600160a01b031660009081526009602052604090205490565b6040519081526020015b60405180910390f35b610303610718565b6040516102f29190612786565b6102e861031e366004612747565b600e6020526000908152604090205481565b61034361033e3660046127b9565b6107aa565b60405190151581526020016102f2565b61037a7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102f2565b6002546102e8565b6103ad6103a83660046127e3565b6107c4565b005b6103ad6103bd366004612747565b610928565b61037a7f000000000000000000000000000000000000000000000000000000000000000081565b6103436103f7366004612862565b610a7c565b6102e861040a366004612747565b60116020526000908152604090205481565b61034361042a36600461289e565b610aa2565b60405160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020016102f2565b6102e861046e366004612747565b60106020526000908152604090205481565b61034361048e3660046127b9565b610ca6565b6103ad6104a1366004612747565b610cc8565b6102e8610cf1565b6102e86104bc366004612747565b610d7a565b6103ad610da6565b6102e86104d7366004612747565b610dce565b6012546013546014546015546016546104f6949392919085565b604080519586526020860194909452928401919091526060830152608082015260a0016102f2565b600d5460ff16610343565b6102e8610537366004612747565b6001600160a01b031660009081526020819052604090205490565b6102e8600b5481565b6103ad610e2e565b60185461037a906001600160a01b031681565b600d5461010090046001600160a01b031661037a565b6103ad61059a366004612747565b610e40565b610303610f88565b61037a7f000000000000000000000000000000000000000000000000000000000000000081565b6102e8600c5481565b6103436105e5366004612747565b60196020526000908152604090205460ff1681565b6103436106083660046127b9565b610f97565b61034361061b3660046127b9565b611012565b6102e860175481565b6103ad6106373660046128cd565b611020565b6103ad61064a36600461289e565b611094565b6103436111b0565b6103ad61066536600461289e565b50565b6103ad610676366004612747565b611354565b6102e8610689366004612992565b611380565b6103ad61069c366004612747565b6113ab565b6102e86106af366004612747565b600f6020526000908152604090205481565b6103ad6106cf36600461289e565b611421565b6102e86106e2366004612747565b611609565b6102e86106f5366004612747565b6001600160a01b03166000908152600a602052604090205490565b6007546102e8565b606060038054610727906129c5565b80601f0160208091040260200160405190810160405280929190818152602001828054610753906129c5565b80156107a05780601f10610775576101008083540402835291602001916107a0565b820191906000526020600020905b81548152906001019060200180831161078357829003601f168201915b5050505050905090565b6000336107b8818585611740565b60019150505b92915050565b6107cc611864565b6107d46118c4565b600083116108185760405162461bcd60e51b815260206004820152600c60248201526b503a5a45524f5f434c41494d60a01b60448201526064015b60405180910390fd5b806108565760405162461bcd60e51b815260206004820152600e60248201526d503a5a45524f5f484f4c4445525360901b604482015260640161080f565b60005b81811015610918576000838383818110610875576108756129ff565b905060200201602081019061088a9190612747565b905060006108ad826001600160a01b031660009081526020819052604090205490565b905060006108ba60025490565b6108c48389612a2b565b6108ce9190612a4a565b6001600160a01b0384166000908152600e60205260408120805492935083929091906108fb908490612a6c565b92505081905550505050808061091090612a7f565b915050610859565b506109236001600555565b505050565b610930611864565b6001600160a01b038181166000818152600f60205260409081902054905163a9059cbb60e01b8152600481019290925260248201819052917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af11580156109b3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d79190612a98565b610a235760405162461bcd60e51b815260206004820152601c60248201527f503a434f4e434c5544455f5749544844524157414c5f4641494c454400000000604482015260640161080f565b6001600160a01b0382166000818152600f602052604080822091909155517f2687ab3014fc32ee1bbb5acb4d4879d56644ad540a426c06d7deaa8f127b232390610a709084815260200190565b60405180910390a25050565b600033610a8a85828561191d565b610a95858585611997565b506001949350505050565b565b6000610aac611abe565b33600090815260208190526040902054821115610b045760405162461bcd60e51b8152602060048201526016602482015275503a494e53554646494349454e545f42414c414e434560501b604482015260640161080f565b601254336000908152601160205260409020544291610b2291612a6c565b1115610b615760405162461bcd60e51b815260206004820152600e60248201526d140e9195539114d7d313d0d2d15160921b604482015260640161080f565b610b6b3383611b04565b817f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bee9190612aba565b1015610c5557336000908152600f602052604081208054849290610c13908490612a6c565b909155505060405182815233907f39d9cf4ffb93650d8ce789639cb8cf3c8d7b039e1f9795c038af55b4ae643fca9060200160405180910390a2506000919050565b610c5f3383611ba8565b50610c68611c47565b60405182815233907f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b659060200160405180910390a25060015b919050565b6000336107b8818585610cb98383611380565b610cc39190612a6c565b611740565b610cd0611864565b6001600160a01b03166000908152601960205260409020805460ff19169055565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d51573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d759190612aba565b905090565b6001600160a01b0381166000908152600960205260408120546107be90610da084610dce565b90611d51565b6000610db0611d5d565b905060008113610dbd5750565b610665610dc982611d7b565b611dbb565b6001600160a01b03811660009081526008602090815260408083205491839052822054600654670de0b6b3a764000092610e2492610e1f92610e1991610e149190611eb7565b611ec3565b90611eff565b611d7b565b6107be9190612a4a565b610e36611864565b610aa06000611f0b565b610e48611864565b6001600160a01b038181166000818152601060205260409081902054905163a9059cbb60e01b8152600481019290925260248201819052917f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb906044016020604051808303816000875af1158015610ecb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eef9190612a98565b610f3b5760405162461bcd60e51b815260206004820152601860248201527f503a434f4e434c5544455f5245574152445f4641494c45440000000000000000604482015260640161080f565b6001600160a01b03821660008181526010602052604080822091909155517f3c7e767b6741d1e3a8f90a3c95937bb07453eaf2dfee591a5a308f04f498e8b890610a709084815260200190565b606060048054610727906129c5565b60003381610fa58286611380565b9050838110156110055760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161080f565b610a958286868403611740565b6000336107b8818585611997565b611028611864565b60005b81518110156110905760016019600084848151811061104c5761104c6129ff565b6020908102919091018101516001600160a01b03168252810191909152604001600020805460ff19169115159190911790558061108881612a7f565b91505061102b565b5050565b61109c611abe565b6110a46118c4565b6016548110156110ec5760405162461bcd60e51b8152602060048201526013602482015272281d2222a82fa0a6aa2fa122a627abafa6a4a760691b604482015260640161080f565b3360009081526020819052604090205461110a906011908333611f65565b61115f6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016337f000000000000000000000000000000000000000000000000000000000000000084612015565b611169338261206f565b611171611c47565b60405181815233907fe1fffcc4923d04b559f4d29a8bfc6cda04eb5b0d3c460751c2402c5c5cc9109c9060200160405180910390a26106656001600555565b336000908152600e602052604081205460007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611220573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112449190612aba565b336000908152600e60205260408120559050818110156112c057336000908152601060205260408120805484929061127d908490612a6c565b909155505060405182815233907f19adda954c72f22df5078ae925d620d455e095989b72be2f895e10473b5379779060200160405180910390a260009250505090565b6112ca3383611ba8565b6113165760405162461bcd60e51b815260206004820152601b60248201527f503a4552524f525f5452414e5346455252494e475f5245574152440000000000604482015260640161080f565b60405182815233907f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f72419060200160405180910390a260019250505090565b61135c611864565b6001600160a01b03166000908152601960205260409020805460ff19166001179055565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6113b3611864565b6001600160a01b0381166114185760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161080f565b61066581611f0b565b3360009081526019602052604090205460ff1661146d5760405162461bcd60e51b815260206004820152600a602482015269140e9393d517d413d3d360b21b604482015260640161080f565b600081116114af5760405162461bcd60e51b815260206004820152600f60248201526e140e9253959053125117d253941555608a1b604482015260640161080f565b806114b8610cf1565b10156114fb5760405162461bcd60e51b81526020600482015260126024820152710503a4e4f545f454e4f5547485f4c415f42560741b604482015260640161080f565b60405163a9059cbb60e01b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063a9059cbb906044016020604051808303816000875af1158015611568573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158c9190612a98565b6115d15760405162461bcd60e51b8152602060048201526016602482015275140e949154555154d517d19493d357d09417d190525360521b604482015260640161080f565b60405181815233907fbabc2955520063ac5330d7fe65a85c54fce0d2c473be76d99e29fb7146ac96a09060200160405180910390a250565b6012546001600160a01b038216600090815260116020526040812054909142916116339190612a6c565b11156116725760405162461bcd60e51b815260206004820152600e60248201526d140e9195539114d7d313d0d2d15160921b604482015260640161080f565b6040516370a0823160e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526107be917f0000000000000000000000000000000000000000000000000000000000000000909116906370a0823190602401602060405180830381865afa1580156116fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117229190612aba565b6001600160a01b0384166000908152602081905260409020546120fc565b6001600160a01b0383166117a25760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161080f565b6001600160a01b0382166118035760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161080f565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b600d546001600160a01b03610100909104163314610aa05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161080f565b6002600554036119165760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161080f565b6002600555565b60006119298484611380565b9050600019811461199157818110156119845760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161080f565b6119918484848403611740565b50505050565b6119a2838383612112565b60006119bc610e1483600654611eb790919063ffffffff16565b6001600160a01b038516600090815260086020526040812054919250906119e39083611eff565b6001600160a01b0380871660009081526008602052604080822084905591871681529081205491925090611a1790846122b6565b6001600160a01b0380871660009081526008602052604090819020839055519192508716907ff694bebd33ada288ae2f4485315db76739e2d5501daf315e71c9d8f841aa777390611a6b9085815260200190565b60405180910390a2846001600160a01b03167ff694bebd33ada288ae2f4485315db76739e2d5501daf315e71c9d8f841aa777382604051611aae91815260200190565b60405180910390a2505050505050565b600d5460ff1615610aa05760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161080f565b611b0e82826122c2565b6000611b4a611b2b610e1484600654611eb790919063ffffffff16565b6001600160a01b03851660009081526008602052604090205490611eff565b6001600160a01b0384166000818152600860205260409081902083905551919250907ff694bebd33ada288ae2f4485315db76739e2d5501daf315e71c9d8f841aa777390611b9b9084815260200190565b60405180910390a2505050565b60405163a9059cbb60e01b81526001600160a01b038381166004830152602482018390526000917f00000000000000000000000000000000000000000000000000000000000000009091169063a9059cbb906044016020604051808303816000875af1158015611c1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c409190612a98565b9392505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03167f2047d1633ff7768462ae07d28cb16e484203bfd6d85ce832494270ebcd9081a27f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663ad7a672f6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d1a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d3e9190612aba565b60405190815260200160405180910390a3565b6000611c408284612ad3565b600c8054600b5491829055600091611d7590826122b6565b91505090565b600080821215611db75760405162461bcd60e51b8152602060048201526007602482015266534d493a4e454760c81b604482015260640161080f565b5090565b6000611dc660025490565b11611e055760405162461bcd60e51b815260206004820152600f60248201526e4644543a5a45524f5f535550504c5960881b604482015260640161080f565b80600003611e105750565b611e41611e1c60025490565b611e2e83670de0b6b3a7640000611eb7565b611e389190612a4a565b600654906123f4565b60065560405181815233907f26536799ace2c3dbe12e638ec3ade6b4173dcf1289be0a58d51a5003015649bd9060200160405180910390a27f1f8d7705f31c3337a080803a8ad7e71946fb88d84738879be2bf402f97156e96600654604051611eac91815260200190565b60405180910390a150565b6000611c408284612a2b565b806000811215610ca15760405162461bcd60e51b815260206004820152600760248201526629a6aa9d27a7a160c91b604482015260640161080f565b6000611c408284612ae6565b600d80546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0381166000908152602085905260408120549080611f8a8587612a6c565b11611f955781611fc6565b611fc6611fbf611fa58688612a6c565b611fb987611fb34288611d51565b90611eb7565b90612400565b83906123f4565b6001600160a01b03841660008181526020898152604091829020849055905183815292935090917ff9b842c70d79466435b46540bb988aa5c998b3243bf91c36380ddb5887c0f0e49101611aae565b604080516001600160a01b0385811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180516001600160e01b03166323b872dd60e01b17905261199190859061240c565b61207982826124e1565b60075461208690826123f4565b6007556001600160a01b0382166000908152600a60205260409020546120ac90826123f4565b6001600160a01b0383166000908152600a6020526040812091909155600654611b4a906120dd90610e149085611eb7565b6001600160a01b038516600090815260086020526040902054906122b6565b600081831061210b5781611c40565b5090919050565b6001600160a01b0383166121765760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161080f565b6001600160a01b0382166121d85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161080f565b6001600160a01b038316600090815260208190526040902054818110156122505760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161080f565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3611991565b6000611c408284612b0e565b6001600160a01b0382166123225760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161080f565b6001600160a01b038216600090815260208190526040902054818110156123965760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161080f565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6000611c408284612a6c565b6000611c408284612a4a565b6000612461826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166125a09092919063ffffffff16565b90508051600014806124825750808060200190518101906124829190612a98565b6109235760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161080f565b6001600160a01b0382166125375760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161080f565b80600260008282546125499190612a6c565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b60606125af84846000856125b7565b949350505050565b6060824710156126185760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161080f565b600080866001600160a01b031685876040516126349190612b35565b60006040518083038185875af1925050503d8060008114612671576040519150601f19603f3d011682016040523d82523d6000602084013e612676565b606091505b509150915061268787838387612692565b979650505050505050565b606083156127015782516000036126fa576001600160a01b0385163b6126fa5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161080f565b50816125af565b6125af83838151156127165781518083602001fd5b8060405162461bcd60e51b815260040161080f9190612786565b80356001600160a01b0381168114610ca157600080fd5b60006020828403121561275957600080fd5b611c4082612730565b60005b8381101561277d578181015183820152602001612765565b50506000910152565b60208152600082518060208401526127a5816040850160208701612762565b601f01601f19169190910160400192915050565b600080604083850312156127cc57600080fd5b6127d583612730565b946020939093013593505050565b6000806000604084860312156127f857600080fd5b83359250602084013567ffffffffffffffff8082111561281757600080fd5b818601915086601f83011261282b57600080fd5b81358181111561283a57600080fd5b8760208260051b850101111561284f57600080fd5b6020830194508093505050509250925092565b60008060006060848603121561287757600080fd5b61288084612730565b925061288e60208501612730565b9150604084013590509250925092565b6000602082840312156128b057600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156128e057600080fd5b823567ffffffffffffffff808211156128f857600080fd5b818501915085601f83011261290c57600080fd5b81358181111561291e5761291e6128b7565b8060051b604051601f19603f83011681018181108582111715612943576129436128b7565b60405291825284820192508381018501918883111561296157600080fd5b938501935b828510156129865761297785612730565b84529385019392850192612966565b98975050505050505050565b600080604083850312156129a557600080fd5b6129ae83612730565b91506129bc60208401612730565b90509250929050565b600181811c908216806129d957607f821691505b6020821081036129f957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000816000190483118215151615612a4557612a45612a15565b500290565b600082612a6757634e487b7160e01b600052601260045260246000fd5b500490565b808201808211156107be576107be612a15565b600060018201612a9157612a91612a15565b5060010190565b600060208284031215612aaa57600080fd5b81518015158114611c4057600080fd5b600060208284031215612acc57600080fd5b5051919050565b818103818111156107be576107be612a15565b8082018281126000831280158216821582161715612b0657612b06612a15565b505092915050565b8181036000831280158383131683831282161715612b2e57612b2e612a15565b5092915050565b60008251612b47818460208701612762565b919091019291505056fea2646970667358221220db0a6825944178d0b531421475525ff6a79b1a4f6ee9d4814ca26f0ba75d540064736f6c63430008100033",
    "sourceMap": "470:4058:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2832:118:15;;;;;;:::i;:::-;-1:-1:-1;;;;;2922:21:15;2896:7;2922:21;;;:14;:21;;;;;;;2832:118;;;;529:25:32;;;517:2;502:18;2832:118:15;;;;;;;;2158:98:20;;;:::i;:::-;;;;;;;:::i;844:39:9:-;;;;;;:::i;:::-;;;;;;;;;;;;;;4444:197:20;;;;;;:::i;:::-;;:::i;:::-;;;1645:14:32;;1638:22;1620:41;;1608:2;1593:18;4444:197:20;1480:187:32;614:37:10;;;;;;;;-1:-1:-1;;;;;1836:32:32;;;1818:51;;1806:2;1791:18;614:37:10;1672:203:32;3255:106:20;3342:12;;3255:106;;4141:521:9;;;;;;:::i;:::-;;:::i;:::-;;4828:426;;;;;;:::i;:::-;;:::i;624:38::-;;;;;5203:256:20;;;;;;:::i;:::-;;:::i;997:46:9:-;;;;;;:::i;:::-;;;;;;;;;;;;;;3028:864;;;;;;:::i;:::-;;:::i;2190:110:10:-;;;3481:4:32;2270:22:10;3469:17:32;3451:36;;3439:2;3424:18;2190:110:10;3309:184:32;945:46:9;;;;;;:::i;:::-;;;;;;;;;;;;;;5854:234:20;;;;;;:::i;:::-;;:::i;4166:90:10:-;;;;;;:::i;:::-;;:::i;1980:105::-;;;:::i;2675:151:15:-;;;;;;:::i;:::-;;:::i;5248:196::-;;;:::i;3085:294::-;;;;;;:::i;:::-;;:::i;1754:24:9:-;;;;;;;;;;;;;;;;;;;;;;;3757:25:32;;;3813:2;3798:18;;3791:34;;;;3841:18;;;3834:34;;;;3899:2;3884:18;;3877:34;3942:3;3927:19;;3920:35;3744:3;3729:19;1754:24:9;3498:463:32;1615:84:18;1685:7;;;;1615:84;;3419:125:20;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:20;3493:7;3519:18;;;;;;;;;;;;3419:125;324:26:16;;;;;;1824:101:17;;;:::i;788:23:10:-;;;;;-1:-1:-1;;;;;788:23:10;;;1201:85:17;1273:6;;;;;-1:-1:-1;;;;;1273:6:17;1201:85;;5420:406:9;;;;;;:::i;:::-;;:::i;2369:102:20:-;;;:::i;496:49:9:-;;;;;393:30:16;;;;;;855:37:10;;;;;;:::i;:::-;;;;;;;;;;;;;;;;6575:427:20;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;697:27:10:-;;;;;;3933:170;;;;;;:::i;:::-;;:::i;2348:560:9:-;;;;;;:::i;:::-;;:::i;2369:680:10:-;;;:::i;5104:62:15:-;;;;;;:::i;:::-;5294:150;5248:196;3776:87:10;;;;;;:::i;:::-;;:::i;3987:149:20:-;;;;;;:::i;:::-;;:::i;2074:198:17:-;;;;;;:::i;:::-;;:::i;889:50:9:-;;;;;;:::i;:::-;;;;;;;;;;;;;;3127:399:10;;;;;;:::i;:::-;;:::i;1598:376::-;;;;;;:::i;:::-;;:::i;2956:123:15:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3044:28:15;3018:7;3044:28;;;:21;:28;;;;;;;2956:123;2091:93:10;2166:11;;2091:93;;2158:98:20;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;719:10:26;4581:32:20;719:10:26;4597:7:20;4606:6;4581:8;:32::i;:::-;4630:4;4623:11;;;4444:197;;;;;:::o;4141:521:9:-;1094:13:17;:11;:13::i;:::-;2261:21:19::1;:19;:21::i;:::-;4296:1:9::2;4286:7;:11;4278:36;;;::::0;-1:-1:-1;;;4278:36:9;;6308:2:32;4278:36:9::2;::::0;::::2;6290:21:32::0;6347:2;6327:18;;;6320:30;-1:-1:-1;;;6366:18:32;;;6359:42;6418:18;;4278:36:9::2;;;;;;;;;4332:19:::0;4324:46:::2;;;::::0;-1:-1:-1;;;4324:46:9;;6649:2:32;4324:46:9::2;::::0;::::2;6631:21:32::0;6688:2;6668:18;;;6661:30;-1:-1:-1;;;6707:18:32;;;6700:44;6761:18;;4324:46:9::2;6447:338:32::0;4324:46:9::2;4385:9;4380:276;4400:19:::0;;::::2;4380:276;;;4440:14;4457:8;;4466:1;4457:11;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;4440:28;;4483:21;4507:17;4517:6;-1:-1:-1::0;;;;;3519:18:20;3493:7;3519:18;;;;;;;;;;;;3419:125;4507:17:9::2;4483:41;;4538:19;4588:13;3342:12:20::0;;;3255:106;4588:13:9::2;4561:23;4571:13:::0;4561:7;:23:::2;:::i;:::-;4560:41;;;;:::i;:::-;-1:-1:-1::0;;;;;4615:15:9;::::2;;::::0;;;:7:::2;:15;::::0;;;;:30;;4538:63;;-1:-1:-1;4538:63:9;;4615:15;;;:30:::2;::::0;4538:63;;4615:30:::2;:::i;:::-;;;;;;;;4426:230;;;4421:3;;;;;:::i;:::-;;;;4380:276;;;;2303:20:19::1;1716:1:::0;2809:7;:22;2629:209;2303:20:::1;4141:521:9::0;;;:::o;4828:426::-;1094:13:17;:11;:13::i;:::-;-1:-1:-1;;;;;4929:30:9;;::::1;4912:14;4929:30:::0;;;:18:::1;:30;::::0;;;;;;;4990:44;;-1:-1:-1;;;4990:44:9;;::::1;::::0;::::1;7893:51:32::0;;;;7960:18;;;7953:34;;;4929:30:9;4990:15:::1;:24;::::0;::::1;::::0;7866:18:32;;4990:44:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4969:119;;;::::0;-1:-1:-1;;;4969:119:9;;8482:2:32;4969:119:9::1;::::0;::::1;8464:21:32::0;8521:2;8501:18;;;8494:30;8560;8540:18;;;8533:58;8608:18;;4969:119:9::1;8280:352:32::0;4969:119:9::1;-1:-1:-1::0;;;;;5156:30:9;::::1;;::::0;;;:18:::1;:30;::::0;;;;;5149:37;;;;5201:46;::::1;::::0;::::1;::::0;5240:6;529:25:32;;517:2;502:18;;383:177;5201:46:9::1;;;;;;;;4902:352;4828:426:::0;:::o;5203:256:20:-;5300:4;719:10:26;5356:38:20;5372:4;719:10:26;5387:6:20;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:20;;5203:256;-1:-1:-1;;;;5203:256:20:o;5056:42:15:-;:::o;3028:864:9:-;3093:4;1239:19:18;:17;:19::i;:::-;3127:10:9::1;3493:7:20::0;3519:18;;;;;;;;;;;3142:7:9;-1:-1:-1;3117:32:9::1;3109:67;;;::::0;-1:-1:-1;;;3109:67:9;;8839:2:32;3109:67:9::1;::::0;::::1;8821:21:32::0;8878:2;8858:18;;;8851:30;-1:-1:-1;;;8897:18:32;;;8890:52;8959:18;;3109:67:9::1;8637:346:32::0;3109:67:9::1;3233:8;:21:::0;3219:10:::1;3233:21;3207:23:::0;;;:11:::1;:23;::::0;;;;;3258:15:::1;::::0;3207:47:::1;::::0;::::1;:::i;:::-;:66;;3186:127;;;::::0;-1:-1:-1;;;3186:127:9;;9190:2:32;3186:127:9::1;::::0;::::1;9172:21:32::0;9229:2;9209:18;;;9202:30;-1:-1:-1;;;9248:18:32;;;9241:44;9302:18;;3186:127:9::1;8988:338:32::0;3186:127:9::1;3324:26;3330:10;3342:7;3324:5;:26::i;:::-;3498:7;3465:15;-1:-1:-1::0;;;;;3465:28:9::1;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;3461:195;;;3540:10;3521:30;::::0;;;:18:::1;:30;::::0;;;;:41;;3555:7;;3521:30;:41:::1;::::0;3555:7;;3521:41:::1;:::i;:::-;::::0;;;-1:-1:-1;;3581:38:9::1;::::0;529:25:32;;;3599:10:9::1;::::0;3581:38:::1;::::0;517:2:32;502:18;3581:38:9::1;;;;;;;-1:-1:-1::0;3640:5:9::1;3028:864:::0;;;:::o;3461:195::-:1;3732:50;3762:10;3774:7;3732:29;:50::i;:::-;;3792:26;:24;:26::i;:::-;3833:31;::::0;529:25:32;;;3844:10:9::1;::::0;3833:31:::1;::::0;517:2:32;502:18;3833:31:9::1;;;;;;;-1:-1:-1::0;3881:4:9::1;1268:1:18;3028:864:9::0;;;:::o;5854:234:20:-;5942:4;719:10:26;5996:64:20;719:10:26;6012:7:20;6049:10;6021:25;719:10:26;6012:7:20;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;4166:90:10:-;1094:13:17;:11;:13::i;:::-;-1:-1:-1;;;;;4237:12:10::1;;::::0;;;:5:::1;:12;::::0;;;;4230:19;;-1:-1:-1;;4230:19:10::1;::::0;;4166:90::o;1980:105::-;2022:7;2048:15;-1:-1:-1;;;;;2048:28:10;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2041:37;;1980:105;:::o;2675:151:15:-;-1:-1:-1;;;;;2797:21:15;;2740:7;2797:21;;;:14;:21;;;;;;2766:53;;:26;2812:5;2766:19;:26::i;:::-;:30;;:53::i;5248:196::-;5304:15;5322:26;:24;:26::i;:::-;5304:44;;5375:1;5363:8;:13;5359:26;;5378:7;5248:196::o;5359:26::-;5395:42;5412:24;:8;:22;:24::i;:::-;5395:16;:42::i;3085:294::-;-1:-1:-1;;;;;3295:23:15;;3150:7;3295:23;;;:16;:23;;;;;;;;;3519:18:20;;;;;;;3188:14:15;;647:4;;3188:164;;:131;;:85;;:53;;:14;:35;:53::i;:::-;:83;:85::i;:::-;:106;;:131::i;:::-;:162;:164::i;:::-;:184;;;;:::i;1824:101:17:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;5420:406:9:-:0;1094:13:17;:11;:13::i;:::-;-1:-1:-1;;;;;5517:26:9;;::::1;5500:14;5517:26:::0;;;:14:::1;:26;::::0;;;;;;;5574:44;;-1:-1:-1;;;5574:44:9;;::::1;::::0;::::1;7893:51:32::0;;;;7960:18;;;7953:34;;;5517:26:9;5574:15:::1;:24;::::0;::::1;::::0;7866:18:32;;5574:44:9::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5553:115;;;::::0;-1:-1:-1;;;5553:115:9;;9722:2:32;5553:115:9::1;::::0;::::1;9704:21:32::0;9761:2;9741:18;;;9734:30;9800:26;9780:18;;;9773:54;9844:18;;5553:115:9::1;9520:348:32::0;5553:115:9::1;-1:-1:-1::0;;;;;5736:26:9;::::1;;::::0;;;:14:::1;:26;::::0;;;;;5729:33;;;;5777:42;::::1;::::0;::::1;::::0;5812:6;529:25:32;;517:2;502:18;;383:177;2369:102:20;2425:13;2457:7;2450:14;;;;;:::i;6575:427::-;6668:4;719:10:26;6668:4:20;6749:25;719:10:26;6766:7:20;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:20;;10075:2:32;6784:85:20;;;10057:21:32;10114:2;10094:18;;;10087:30;10153:34;10133:18;;;10126:62;-1:-1:-1;;;10204:18:32;;;10197:35;10249:19;;6784:85:20;9873:401:32;6784:85:20;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;719:10:26;3873:28:20;719:10:26;3890:2:20;3894:6;3873:9;:28::i;3933:170:10:-;1094:13:17;:11;:13::i;:::-;4010:9:10::1;4005:92;4029:6;:13;4025:1;:17;4005:92;;;4082:4;4063:5;:16;4069:6;4076:1;4069:9;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;-1:-1:-1;;;;;4063:16:10::1;::::0;;;::::1;::::0;;;;;;-1:-1:-1;4063:16:10;:23;;-1:-1:-1;;4063:23:10::1;::::0;::::1;;::::0;;;::::1;::::0;;4044:3;::::1;::::0;::::1;:::i;:::-;;;;4005:92;;;;3933:170:::0;:::o;2348:560:9:-;1239:19:18;:17;:19::i;:::-;2261:21:19::1;:19;:21::i;:::-;2447:28:9::0;;2436:39;::::2;;2428:71;;;::::0;-1:-1:-1;;;2428:71:9;;10481:2:32;2428:71:9::2;::::0;::::2;10463:21:32::0;10520:2;10500:18;;;10493:30;-1:-1:-1;;;10539:18:32;;;10532:49;10598:18;;2428:71:9::2;10279:343:32::0;2428:71:9::2;2584:10;3493:7:20::0;3519:18;;;;;;;;;;;2510:140:9::2;::::0;2549:11:::2;::::0;2609:7:::2;2630:10;2510:25;:140::i;:::-;2660:124;-1:-1:-1::0;;;;;2660:14:9::2;:31;2705:10;2737:15;2767:7:::0;2660:31:::2;:124::i;:::-;2795:26;2801:10;2813:7;2795:5;:26::i;:::-;2832;:24;:26::i;:::-;2873:28;::::0;529:25:32;;;2881:10:9::2;::::0;2873:28:::2;::::0;517:2:32;502:18;2873:28:9::2;;;;;;;2303:20:19::1;1716:1:::0;2809:7;:22;2629:209;2369:680:10;2467:10;2419:4;2459:19;;;:7;:19;;;;;;2541:20;2564:15;-1:-1:-1;;;;;2564:28:10;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2612:10;2626:1;2604:19;;;:7;:19;;;;;:23;2541:53;-1:-1:-1;2642:28:10;;;2638:187;;;2701:10;2686:26;;;;:14;:26;;;;;:43;;2716:13;;2686:26;:43;;2716:13;;2686:43;:::i;:::-;;;;-1:-1:-1;;2748:40:10;;529:25:32;;;2762:10:10;;2748:40;;517:2:32;502:18;2748:40:10;;;;;;;2809:5;2802:12;;;;2369:680;:::o;2638:187::-;2856:56;2886:10;2898:13;2856:29;:56::i;:::-;2835:130;;;;-1:-1:-1;;;2835:130:10;;11170:2:32;2835:130:10;;;11152:21:32;11209:2;11189:18;;;11182:30;11248:29;11228:18;;;11221:57;11295:18;;2835:130:10;10968:351:32;2835:130:10;2981:40;;529:25:32;;;2995:10:10;;2981:40;;517:2:32;502:18;2981:40:10;;;;;;;3038:4;3031:11;;;;2369:680;:::o;3776:87::-;1094:13:17;:11;:13::i;:::-;-1:-1:-1;;;;;3837:12:10::1;;::::0;;;:5:::1;:12;::::0;;;;:19;;-1:-1:-1;;3837:19:10::1;3852:4;3837:19;::::0;;3776:87::o;3987:149:20:-;-1:-1:-1;;;;;4102:18:20;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;2074:198:17:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:17;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:17;;11526:2:32;2154:73:17::1;::::0;::::1;11508:21:32::0;11565:2;11545:18;;;11538:30;11604:34;11584:18;;;11577:62;-1:-1:-1;;;11655:18:32;;;11648:36;11701:19;;2154:73:17::1;11324:402:32::0;2154:73:17::1;2237:28;2256:8;2237:18;:28::i;3127:399:10:-:0;4482:10;4476:17;;;;:5;:17;;;;;;;;4468:40;;;;-1:-1:-1;;;4468:40:10;;11933:2:32;4468:40:10;;;11915:21:32;11972:2;11952:18;;;11945:30;-1:-1:-1;;;11991:18:32;;;11984:40;12041:18;;4468:40:10;11731:334:32;4468:40:10;3236:1:::1;3219:14;:18;3211:46;;;::::0;-1:-1:-1;;;3211:46:10;;12272:2:32;3211:46:10::1;::::0;::::1;12254:21:32::0;12311:2;12291:18;;;12284:30;-1:-1:-1;;;12330:18:32;;;12323:45;12385:18;;3211:46:10::1;12070:339:32::0;3211:46:10::1;3294:14;3275:15;:13;:15::i;:::-;:33;;3267:64;;;::::0;-1:-1:-1;;;3267:64:10;;12616:2:32;3267:64:10::1;::::0;::::1;12598:21:32::0;12655:2;12635:18;;;12628:30;-1:-1:-1;;;12674:18:32;;;12667:48;12732:18;;3267:64:10::1;12414:342:32::0;3267:64:10::1;3362:52;::::0;-1:-1:-1;;;3362:52:10;;3387:10:::1;3362:52;::::0;::::1;7893:51:32::0;7960:18;;;7953:34;;;3362:15:10::1;-1:-1:-1::0;;;;;3362:24:10::1;::::0;::::1;::::0;7866:18:32;;3362:52:10::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3341:121;;;::::0;-1:-1:-1;;;3341:121:10;;12963:2:32;3341:121:10::1;::::0;::::1;12945:21:32::0;13002:2;12982:18;;;12975:30;-1:-1:-1;;;13021:18:32;;;13014:52;13083:18;;3341:121:10::1;12761:346:32::0;3341:121:10::1;3477:42;::::0;529:25:32;;;3492:10:10::1;::::0;3477:42:::1;::::0;517:2:32;502:18;3477:42:10::1;;;;;;;3127:399:::0;:::o;1598:376::-;1725:8;:21;-1:-1:-1;;;;;1702:20:10;;1662:7;1702:20;;;:11;:20;;;;;;1662:7;;1750:15;;1702:44;;1725:21;1702:44;:::i;:::-;:63;;1681:124;;;;-1:-1:-1;;;1681:124:10;;9190:2:32;1681:124:10;;;9172:21:32;9229:2;9209:18;;;9202:30;-1:-1:-1;;;9248:18:32;;;9241:44;9302:18;;1681:124:10;8988:338:32;1681:124:10;1861:50;;-1:-1:-1;;;1861:50:10;;-1:-1:-1;;;;;1894:15:10;1836:32:32;;1861:50:10;;;1818:51:32;1835:132:10;;1861:14;:24;;;;;;1791:18:32;;1861:50:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:20;;3493:7;3519:18;;;;;;;;;;;1835:8:10;:132::i;10457:340:20:-;-1:-1:-1;;;;;10558:19:20;;10550:68;;;;-1:-1:-1;;;10550:68:20;;13314:2:32;10550:68:20;;;13296:21:32;13353:2;13333:18;;;13326:30;13392:34;13372:18;;;13365:62;-1:-1:-1;;;13443:18:32;;;13436:34;13487:19;;10550:68:20;13112:400:32;10550:68:20;-1:-1:-1;;;;;10636:21:20;;10628:68;;;;-1:-1:-1;;;10628:68:20;;13719:2:32;10628:68:20;;;13701:21:32;13758:2;13738:18;;;13731:30;13797:34;13777:18;;;13770:62;-1:-1:-1;;;13848:18:32;;;13841:32;13890:19;;10628:68:20;13517:398:32;10628:68:20;-1:-1:-1;;;;;10707:18:20;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;529:25:32;;;10758:32:20;;502:18:32;10758:32:20;;;;;;;10457:340;;;:::o;1359:130:17:-;1273:6;;-1:-1:-1;;;;;1273:6:17;;;;;719:10:26;1422:23:17;1414:68;;;;-1:-1:-1;;;1414:68:17;;14122:2:32;1414:68:17;;;14104:21:32;;;14141:18;;;14134:30;14200:34;14180:18;;;14173:62;14252:18;;1414:68:17;13920:356:32;2336:287:19;1759:1;2468:7;;:19;2460:63;;;;-1:-1:-1;;;2460:63:19;;14483:2:32;2460:63:19;;;14465:21:32;14522:2;14502:18;;;14495:30;14561:33;14541:18;;;14534:61;14612:18;;2460:63:19;14281:355:32;2460:63:19;1759:1;2598:7;:18;2336:287::o;11078:411:20:-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:20;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:20;;14843:2:32;11297:68:20;;;14825:21:32;14882:2;14862:18;;;14855:30;14921:31;14901:18;;;14894:59;14970:18;;11297:68:20;14641:353:32;11297:68:20;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;3482:657:15:-;3608:32;3624:4;3630:2;3634:5;3608:15;:32::i;:::-;3651:21;3675:40;:25;3694:5;3675:14;;:18;;:25;;;;:::i;:40::-;-1:-1:-1;;;;;3755:22:15;;3725:27;3755:22;;;:16;:22;;;;;;3651:64;;-1:-1:-1;3725:27:15;3755:64;;3651;3755:26;:64::i;:::-;-1:-1:-1;;;;;3829:22:15;;;;;;;:16;:22;;;;;;:45;;;3912:20;;;;;;;;;3725:94;;-1:-1:-1;3829:22:15;3912:40;;3937:14;3912:24;:40::i;:::-;-1:-1:-1;;;;;3962:20:15;;;;;;;:16;:20;;;;;;;:41;;;4019:51;3884:68;;-1:-1:-1;4019:51:15;;;;;;;4049:20;529:25:32;;517:2;502:18;;383:177;4019:51:15;;;;;;;;4109:2;-1:-1:-1;;;;;4085:47:15;;4113:18;4085:47;;;;529:25:32;;517:2;502:18;;383:177;4085:47:15;;;;;;;;3598:541;;;3482:657;;;:::o;1767:106:18:-;1685:7;;;;1836:9;1828:38;;;;-1:-1:-1;;;1828:38:18;;15381:2:32;1828:38:18;;;15363:21:32;15420:2;15400:18;;;15393:30;-1:-1:-1;;;15439:18:32;;;15432:46;15495:18;;1828:38:18;15179:340:32;4677:373:15;4760:27;4772:7;4781:5;4760:11;:27::i;:::-;4798:24;4825:95;4868:42;4869:25;4888:5;4869:14;;:18;;:25;;;;:::i;4868:42::-;-1:-1:-1;;;;;4825:25:15;;;;;;:16;:25;;;;;;;:29;:95::i;:::-;-1:-1:-1;;;;;4931:25:15;;;;;;:16;:25;;;;;;;:45;;;4992:51;4798:122;;-1:-1:-1;4931:25:15;4992:51;;;;4798:122;529:25:32;;517:2;502:18;;383:177;4992:51:15;;;;;;;;4750:300;4677:373;;:::o;5966:171:9:-;6095:35;;-1:-1:-1;;;6095:35:9;;-1:-1:-1;;;;;7911:32:32;;;6095:35:9;;;7893:51:32;7960:18;;;7953:34;;;6072:4:9;;6095:15;:24;;;;;;7866:18:32;;6095:35:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6088:42;5966:171;-1:-1:-1;;;5966:171:9:o;6201:210::-;6335:14;-1:-1:-1;;;;;6261:143:9;6297:15;-1:-1:-1;;;;;6261:143:9;;6364:15;-1:-1:-1;;;;;6364:28:9;;:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6261:143;;529:25:32;;;517:2;502:18;6261:143:9;;;;;;;6201:210::o;3122:96:29:-;3180:7;3206:5;3210:1;3206;:5;:::i;766:251:16:-;880:15;;;923:11;;905:29;;;;829:6;;951:59;;880:15;951:27;:59::i;:::-;944:66;;;766:251;:::o;83:135:7:-;139:7;171:1;166;:6;;158:26;;;;-1:-1:-1;;;158:26:7;;15859:2:32;158:26:7;;;15841:21:32;15898:1;15878:18;;;15871:29;-1:-1:-1;;;15916:18:32;;;15909:37;15963:18;;158:26:7;15657:330:32;158:26:7;-1:-1:-1;209:1:7;83:135::o;1396:361:15:-;1480:1;1464:13;3342:12:20;;;3255:106;1464:13:15;:17;1456:45;;;;-1:-1:-1;;;1456:45:15;;16194:2:32;1456:45:15;;;16176:21:32;16233:2;16213:18;;;16206:30;-1:-1:-1;;;16252:18:32;;;16245:45;16307:18;;1456:45:15;15992:339:32;1456:45:15;1516:5;1525:1;1516:10;1512:23;;1396:361;:::o;1512:23::-;1562:86;1625:13;3342:12:20;;;3255:106;1625:13:15;1594:28;:5;647:4;1594:9;:28::i;:::-;:44;;;;:::i;:::-;1562:14;;;:18;:86::i;:::-;1545:14;:103;1663:35;;529:25:32;;;1680:10:15;;1663:35;;517:2:32;502:18;1663:35:15;;;;;;;1713:37;1735:14;;1713:37;;;;529:25:32;;517:2;502:18;;383:177;1713:37:15;;;;;;;;1396:361;:::o;3465:96:29:-;3523:7;3549:5;3553:1;3549;:5;:::i;84:132:8:-;171:1;140:8;191:6;;;183:26;;;;-1:-1:-1;;;183:26:8;;16538:2:32;183:26:8;;;16520:21:32;16577:1;16557:18;;;16550:29;-1:-1:-1;;;16595:18:32;;;16588:37;16642:18;;183:26:8;16336:330:32;1620:93:30;1676:6;1701:5;1705:1;1701;:5;:::i;2426:187:17:-;2518:6;;;-1:-1:-1;;;;;2534:17:17;;;2518:6;2534:17;;;-1:-1:-1;;;;;;2534:17:17;;;;;;2566:40;;2518:6;;;;;;;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;593:441:6:-;-1:-1:-1;;;;;757:20:6;;738:16;757:20;;;;;;;;;;;;738:16;807;817:6;807:7;:16;:::i;:::-;806:22;:129;;927:8;806:129;;;839:77;852:63;898:16;908:6;898:7;:16;:::i;:::-;852:41;886:6;852:29;:15;872:8;852:19;:29::i;:::-;:33;;:41::i;:::-;:45;;:63::i;:::-;839:8;;:12;:77::i;:::-;-1:-1:-1;;;;;946:20:6;;;;;;;;;;;;;;;:30;;;991:36;;529:25:32;;;946:30:6;;-1:-1:-1;946:20:6;;991:36;;502:18:32;991:36:6;383:177:32;1355:203:24;1482:68;;;-1:-1:-1;;;;;17150:15:32;;;1482:68:24;;;17132:34:32;17202:15;;17182:18;;;17175:43;17234:18;;;;17227:34;;;1482:68:24;;;;;;;;;;17067:18:32;;;;1482:68:24;;;;;;;;-1:-1:-1;;;;;1482:68:24;-1:-1:-1;;;1482:68:24;;;1455:96;;1475:5;;1455:19;:96::i;4145:526:15:-;4228:27;4240:7;4249:5;4228:11;:27::i;:::-;4280:11;;:22;;4296:5;4280:15;:22::i;:::-;4266:11;:36;-1:-1:-1;;;;;4345:30:15;;;;;;:21;:30;;;;;;:63;;4393:5;4345:34;:63::i;:::-;-1:-1:-1;;;;;4312:30:15;;;;;;:21;:30;;;;;:96;;;;4490:14;;4446:95;;4489:42;;4490:25;;4509:5;4490:18;:25::i;4489:42::-;-1:-1:-1;;;;;4446:25:15;;;;;;:16;:25;;;;;;;:29;:95::i;588:104:27:-;646:7;676:1;672;:5;:13;;684:1;672:13;;;-1:-1:-1;680:1:27;;588:104;-1:-1:-1;588:104:27:o;7456:788:20:-;-1:-1:-1;;;;;7552:18:20;;7544:68;;;;-1:-1:-1;;;7544:68:20;;17474:2:32;7544:68:20;;;17456:21:32;17513:2;17493:18;;;17486:30;17552:34;17532:18;;;17525:62;-1:-1:-1;;;17603:18:32;;;17596:35;17648:19;;7544:68:20;17272:401:32;7544:68:20;-1:-1:-1;;;;;7630:16:20;;7622:64;;;;-1:-1:-1;;;7622:64:20;;17880:2:32;7622:64:20;;;17862:21:32;17919:2;17899:18;;;17892:30;17958:34;17938:18;;;17931:62;-1:-1:-1;;;18009:18:32;;;18002:33;18052:19;;7622:64:20;17678:399:32;7622:64:20;-1:-1:-1;;;;;7768:15:20;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:20;;18284:2:32;7793:72:20;;;18266:21:32;18323:2;18303:18;;;18296:30;18362:34;18342:18;;;18335:62;-1:-1:-1;;;18413:18:32;;;18406:36;18459:19;;7793:72:20;18082:402:32;7793:72:20;-1:-1:-1;;;;;7899:15:20;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;529:25:32;;;8114:13:20;;8163:26;;502:18:32;8163:26:20;;;;;;;8200:37;4141:521:9;1294:93:30;1350:6;1375:5;1379:1;1375;:5;:::i;9375:659:20:-;-1:-1:-1;;;;;9458:21:20;;9450:67;;;;-1:-1:-1;;;9450:67:20;;18896:2:32;9450:67:20;;;18878:21:32;18935:2;18915:18;;;18908:30;18974:34;18954:18;;;18947:62;-1:-1:-1;;;19025:18:32;;;19018:31;19066:19;;9450:67:20;18694:397:32;9450:67:20;-1:-1:-1;;;;;9613:18:20;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:20;;19298:2:32;9641:71:20;;;19280:21:32;19337:2;19317:18;;;19310:30;19376:34;19356:18;;;19349:62;-1:-1:-1;;;19427:18:32;;;19420:32;19469:19;;9641:71:20;19096:398:32;9641:71:20;-1:-1:-1;;;;;9746:18:20;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;529:25:32;;;9746:9:20;;:18;9931:37;;502:18:32;9931:37:20;;;;;;;4141:521:9;;;:::o;2755:96:29:-;2813:7;2839:5;2843:1;2839;:5;:::i;3850:96::-;3908:7;3934:5;3938:1;3934;:5;:::i;5196:642:24:-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:24;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:24;;19701:2:32;5720:111:24;;;19683:21:32;19740:2;19720:18;;;19713:30;19779:34;19759:18;;;19752:62;-1:-1:-1;;;19830:18:32;;;19823:40;19880:19;;5720:111:24;19499:406:32;8520:535:20;-1:-1:-1;;;;;8603:21:20;;8595:65;;;;-1:-1:-1;;;8595:65:20;;20112:2:32;8595:65:20;;;20094:21:32;20151:2;20131:18;;;20124:30;20190:33;20170:18;;;20163:61;20241:18;;8595:65:20;19910:355:32;8595:65:20;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:20;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;529:25:32;;;8952:37:20;;502:18:32;8952:37:20;;;;;;;4005:92:10::1;3933:170:::0;:::o;4108:223:25:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4272:21;:52::i;:::-;4265:59;4108:223;-1:-1:-1;;;;4108:223:25:o;5165:446::-;5330:12;5387:5;5362:21;:30;;5354:81;;;;-1:-1:-1;;;5354:81:25;;20472:2:32;5354:81:25;;;20454:21:32;20511:2;20491:18;;;20484:30;20550:34;20530:18;;;20523:62;-1:-1:-1;;;20601:18:32;;;20594:36;20647:19;;5354:81:25;20270:402:32;5354:81:25;5446:12;5460:23;5487:6;-1:-1:-1;;;;;5487:11:25;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:25:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:10;:17;7927:1;7906:22;7902:286;;-1:-1:-1;;;;;1702:19:25;;;8113:60;;;;-1:-1:-1;;;8113:60:25;;21171:2:32;8113:60:25;;;21153:21:32;21210:2;21190:18;;;21183:30;21249:31;21229:18;;;21222:59;21298:18;;8113:60:25;20969:353:32;8113:60:25;-1:-1:-1;8208:10:25;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:25;;;;;;;;:::i;14:173:32:-;82:20;;-1:-1:-1;;;;;131:31:32;;121:42;;111:70;;177:1;174;167:12;192:186;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;565:250::-;650:1;660:113;674:6;671:1;668:13;660:113;;;750:11;;;744:18;731:11;;;724:39;696:2;689:10;660:113;;;-1:-1:-1;;807:1:32;789:16;;782:27;565:250::o;820:396::-;969:2;958:9;951:21;932:4;1001:6;995:13;1044:6;1039:2;1028:9;1024:18;1017:34;1060:79;1132:6;1127:2;1116:9;1112:18;1107:2;1099:6;1095:15;1060:79;:::i;:::-;1200:2;1179:15;-1:-1:-1;;1175:29:32;1160:45;;;;1207:2;1156:54;;820:396;-1:-1:-1;;820:396:32:o;1221:254::-;1289:6;1297;1350:2;1338:9;1329:7;1325:23;1321:32;1318:52;;;1366:1;1363;1356:12;1318:52;1389:29;1408:9;1389:29;:::i;:::-;1379:39;1465:2;1450:18;;;;1437:32;;-1:-1:-1;;;1221:254:32:o;1880:683::-;1975:6;1983;1991;2044:2;2032:9;2023:7;2019:23;2015:32;2012:52;;;2060:1;2057;2050:12;2012:52;2096:9;2083:23;2073:33;;2157:2;2146:9;2142:18;2129:32;2180:18;2221:2;2213:6;2210:14;2207:34;;;2237:1;2234;2227:12;2207:34;2275:6;2264:9;2260:22;2250:32;;2320:7;2313:4;2309:2;2305:13;2301:27;2291:55;;2342:1;2339;2332:12;2291:55;2382:2;2369:16;2408:2;2400:6;2397:14;2394:34;;;2424:1;2421;2414:12;2394:34;2477:7;2472:2;2462:6;2459:1;2455:14;2451:2;2447:23;2443:32;2440:45;2437:65;;;2498:1;2495;2488:12;2437:65;2529:2;2525;2521:11;2511:21;;2551:6;2541:16;;;;;1880:683;;;;;:::o;2791:328::-;2868:6;2876;2884;2937:2;2925:9;2916:7;2912:23;2908:32;2905:52;;;2953:1;2950;2943:12;2905:52;2976:29;2995:9;2976:29;:::i;:::-;2966:39;;3024:38;3058:2;3047:9;3043:18;3024:38;:::i;:::-;3014:48;;3109:2;3098:9;3094:18;3081:32;3071:42;;2791:328;;;;;:::o;3124:180::-;3183:6;3236:2;3224:9;3215:7;3211:23;3207:32;3204:52;;;3252:1;3249;3242:12;3204:52;-1:-1:-1;3275:23:32;;3124:180;-1:-1:-1;3124:180:32:o;4198:127::-;4259:10;4254:3;4250:20;4247:1;4240:31;4290:4;4287:1;4280:15;4314:4;4311:1;4304:15;4330:1121;4414:6;4445:2;4488;4476:9;4467:7;4463:23;4459:32;4456:52;;;4504:1;4501;4494:12;4456:52;4544:9;4531:23;4573:18;4614:2;4606:6;4603:14;4600:34;;;4630:1;4627;4620:12;4600:34;4668:6;4657:9;4653:22;4643:32;;4713:7;4706:4;4702:2;4698:13;4694:27;4684:55;;4735:1;4732;4725:12;4684:55;4771:2;4758:16;4793:2;4789;4786:10;4783:36;;;4799:18;;:::i;:::-;4845:2;4842:1;4838:10;4877:2;4871:9;4940:2;4936:7;4931:2;4927;4923:11;4919:25;4911:6;4907:38;4995:6;4983:10;4980:22;4975:2;4963:10;4960:18;4957:46;4954:72;;;5006:18;;:::i;:::-;5042:2;5035:22;5092:18;;;5126:15;;;;-1:-1:-1;5168:11:32;;;5164:20;;;5196:19;;;5193:39;;;5228:1;5225;5218:12;5193:39;5252:11;;;;5272:148;5288:6;5283:3;5280:15;5272:148;;;5354:23;5373:3;5354:23;:::i;:::-;5342:36;;5305:12;;;;5398;;;;5272:148;;;5439:6;4330:1121;-1:-1:-1;;;;;;;;4330:1121:32:o;5456:260::-;5524:6;5532;5585:2;5573:9;5564:7;5560:23;5556:32;5553:52;;;5601:1;5598;5591:12;5553:52;5624:29;5643:9;5624:29;:::i;:::-;5614:39;;5672:38;5706:2;5695:9;5691:18;5672:38;:::i;:::-;5662:48;;5456:260;;;;;:::o;5721:380::-;5800:1;5796:12;;;;5843;;;5864:61;;5918:4;5910:6;5906:17;5896:27;;5864:61;5971:2;5963:6;5960:14;5940:18;5937:38;5934:161;;6017:10;6012:3;6008:20;6005:1;5998:31;6052:4;6049:1;6042:15;6080:4;6077:1;6070:15;5934:161;;5721:380;;;:::o;6790:127::-;6851:10;6846:3;6842:20;6839:1;6832:31;6882:4;6879:1;6872:15;6906:4;6903:1;6896:15;6922:127;6983:10;6978:3;6974:20;6971:1;6964:31;7014:4;7011:1;7004:15;7038:4;7035:1;7028:15;7054:168;7094:7;7160:1;7156;7152:6;7148:14;7145:1;7142:21;7137:1;7130:9;7123:17;7119:45;7116:71;;;7167:18;;:::i;:::-;-1:-1:-1;7207:9:32;;7054:168::o;7227:217::-;7267:1;7293;7283:132;;7337:10;7332:3;7328:20;7325:1;7318:31;7372:4;7369:1;7362:15;7400:4;7397:1;7390:15;7283:132;-1:-1:-1;7429:9:32;;7227:217::o;7449:125::-;7514:9;;;7535:10;;;7532:36;;;7548:18;;:::i;7579:135::-;7618:3;7639:17;;;7636:43;;7659:18;;:::i;:::-;-1:-1:-1;7706:1:32;7695:13;;7579:135::o;7998:277::-;8065:6;8118:2;8106:9;8097:7;8093:23;8089:32;8086:52;;;8134:1;8131;8124:12;8086:52;8166:9;8160:16;8219:5;8212:13;8205:21;8198:5;8195:32;8185:60;;8241:1;8238;8231:12;9331:184;9401:6;9454:2;9442:9;9433:7;9429:23;9425:32;9422:52;;;9470:1;9467;9460:12;9422:52;-1:-1:-1;9493:16:32;;9331:184;-1:-1:-1;9331:184:32:o;15524:128::-;15591:9;;;15612:11;;;15609:37;;;15626:18;;:::i;16671:216::-;16735:9;;;16763:11;;;16710:3;16793:9;;16821:10;;16817:19;;16846:10;;16838:19;;16814:44;16811:70;;;16861:18;;:::i;:::-;16811:70;;16671:216;;;;:::o;18489:200::-;18555:9;;;18528:4;18583:9;;18611:10;;18623:12;;;18607:29;18646:12;;;18638:21;;18604:56;18601:82;;;18663:18;;:::i;:::-;18601:82;18489:200;;;;:::o;20677:287::-;20806:3;20844:6;20838:13;20860:66;20919:6;20914:3;20907:4;20899:6;20895:17;20860:66;:::i;:::-;20942:16;;;;;20677:287;-1:-1:-1;;20677:287:32:o",
    "linkReferences": {},
    "immutableReferences": {
      "536": [
        {
          "start": 1452,
          "length": 32
        },
        {
          "start": 2410,
          "length": 32
        },
        {
          "start": 2926,
          "length": 32
        },
        {
          "start": 3317,
          "length": 32
        },
        {
          "start": 3714,
          "length": 32
        },
        {
          "start": 4410,
          "length": 32
        },
        {
          "start": 4548,
          "length": 32
        },
        {
          "start": 5399,
          "length": 32
        },
        {
          "start": 5769,
          "length": 32
        },
        {
          "start": 7121,
          "length": 32
        },
        {
          "start": 7283,
          "length": 32
        },
        {
          "start": 7358,
          "length": 32
        }
      ],
      "539": [
        {
          "start": 967,
          "length": 32
        },
        {
          "start": 4375,
          "length": 32
        },
        {
          "start": 5813,
          "length": 32
        },
        {
          "start": 7241,
          "length": 32
        }
      ],
      "541": [
        {
          "start": 1078,
          "length": 32
        }
      ],
      "998": [
        {
          "start": 856,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "accumulativeFundsOf(address)": "4e97415f",
    "addPool(address)": "d914cd4b",
    "addPools(address[])": "b36a4ab1",
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "borrower()": "7df1f1b9",
    "claimReward()": "b88a802f",
    "concludePendingReward(address)": "9264fd53",
    "concludePendingWithdrawal(address)": "1e0a5967",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "deposit(uint256)": "b6b55f25",
    "depositDate(address)": "24b92e8e",
    "distributeRewards(uint256,address[])": "1aa59542",
    "increaseAllowance(address,uint256)": "39509351",
    "interestBalance()": "9f3c7325",
    "interestSum()": "71073bac",
    "liquidityAsset()": "209b2bca",
    "liquidityLocker()": "9759164a",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "paused()": "5c975abb",
    "pendingRewards(address)": "31d7a262",
    "pendingWithdrawals(address)": "f3f43703",
    "poolInfo()": "5a2f3d09",
    "pools(address)": "a4063dbc",
    "principalOut()": "ac641655",
    "removePool(address)": "3b7d0946",
    "renounceOwnership()": "715018a6",
    "requestLiquidityAssets(uint256)": "f48ccb04",
    "rewards(address)": "0700037d",
    "superFactory()": "0d49b38c",
    "symbol()": "95d89b41",
    "totalDeposited()": "ff50abdc",
    "totalLA()": "42103e8e",
    "totalMintedFor(address)": "fe84967e",
    "totalSupply()": "18160ddd",
    "totalSupplyLA()": "7dfabf49",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "updateFundsReceived()": "46c162de",
    "withdraw(uint256)": "2e1a7d4d",
    "withdrawFunds()": "24600fc3",
    "withdrawFundsAmount(uint256)": "d16987f9",
    "withdrawableFundsOf(address)": "443bb293",
    "withdrawableOf(address)": "fa8c00d4",
    "withdrawnFundsOf(address)": "0041c52c"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.16+commit.07a7930e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_liquidityAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_llFactory\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_lockupPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minInvestmentAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"liquidityProvider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"BalanceUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fundsDistributed\",\"type\":\"uint256\"}],\"name\":\"FundsDistributed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"by\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fundsWithdrawn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalWithdrawn\",\"type\":\"uint256\"}],\"name\":\"FundsWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PendingReward\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PendingRewardConcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PendingWithdrawal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"PendingWithdrawalConcluded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"pointsCorrection\",\"type\":\"int256\"}],\"name\":\"PointsCorrectionUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"pointsPerShare\",\"type\":\"uint256\"}],\"name\":\"PointsPerShareUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"regPool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RegPoolDeposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"investor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"accumulativeFundsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"addPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_pools\",\"type\":\"address[]\"}],\"name\":\"addPools\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"borrower\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"concludePendingReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"concludePendingWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"depositDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_holders\",\"type\":\"address[]\"}],\"name\":\"distributeRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"interestSum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidityLocker\",\"outputs\":[{\"internalType\":\"contract ILiquidityLocker\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pendingWithdrawals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lockupPeriod\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"apy\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"investmentPoolSize\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minInvestmentAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"pools\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"principalOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"name\":\"removePool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amountMissing\",\"type\":\"uint256\"}],\"name\":\"requestLiquidityAssets\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"superFactory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalLA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"totalMintedFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupplyLA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updateFundsReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFundsAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdrawableFundsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_holder\",\"type\":\"address\"}],\"name\":\"withdrawableOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"withdrawnFundsOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"concludePendingReward(address)\":{\"params\":{\"_recipient\":\"address of the recipient who didn't get the reward\"}},\"concludePendingWithdrawal(address)\":{\"params\":{\"_recipient\":\"address of the recipient who didn't get the liquidities\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"distributeRewards(uint256,address[])\":{\"params\":{\"_amount\":\"the amount to be divided among investors\",\"_holders\":\"the list investors must be provided externally due to Solidity limitations\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"withdraw(uint256)\":{\"params\":{\"_amount\":\"the amount of LA to be withdrawn\"}}},\"title\":\"Blended Pool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addPool(address)\":{\"notice\":\"Register a new pool to the Blended Pool\"},\"addPools(address[])\":{\"notice\":\"Register new pools in batch to the Blended Pool\"},\"claimReward()\":{\"notice\":\"Used to transfer the investor's rewards to him\"},\"concludePendingReward(address)\":{\"notice\":\"Admin function used for unhappy path after reward claiming failure\"},\"concludePendingWithdrawal(address)\":{\"notice\":\"Admin function used for unhappy path after withdrawal failure\"},\"deposit(uint256)\":{\"notice\":\"the caller becomes an investor. For this to work the caller must set the allowance for this pool's address\"},\"distributeRewards(uint256,address[])\":{\"notice\":\"Used to distribute rewards among investors (LP token holders)\"},\"removePool(address)\":{\"notice\":\"Remove a pool when it's no longer actual\"},\"requestLiquidityAssets(uint256)\":{\"notice\":\"Only called by a RegPool when it doesn't have enough LA\"},\"totalSupplyLA()\":{\"notice\":\"Get the amount of Liquidity Assets in the Blended Pool\"},\"withdraw(uint256)\":{\"notice\":\"withdraw's the caller's liquidity assets\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/pool/BlendedPool.sol\":\"BlendedPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/interfaces/IHeliosGlobals.sol\":{\"keccak256\":\"0x624f8763317d15efa8113b760745c5ae02a74ebadab1863e4a639b737de34f42\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02fc662e50932bd602cdfbc2f5e05c8f8fa1ddf39e9489eb887c4e12d055653c\",\"dweb:/ipfs/QmbPQKgU52xwPtU6StSVYzAmKR73ppLA4DaxftY6ZWkJNY\"]},\"contracts/interfaces/ILiquidityLocker.sol\":{\"keccak256\":\"0xdf4785b72bf3b497bb33f3e5af87696ea566448bc782f308767a47a0cbdd29a5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92f8d25c62044b0d34ae41e56a2fa07ad4b7f3da9d272ba9e01d2cf1c81308c6\",\"dweb:/ipfs/QmfQU8PGhuPZBaHTcLYoLxeaErxeRHJ78m9v3JAAWhQs9d\"]},\"contracts/interfaces/ILiquidityLockerFactory.sol\":{\"keccak256\":\"0xeb728ca7a6fef8487a32c59fcf689a7627432cf30c78ec3397eeb787e50e7ea1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://780a06ae8d48ea0528f03a633ed5b5fd4d2e52c05ab701ec2ab643982605e693\",\"dweb:/ipfs/QmVGaJapM4sUThyTpEMTYMdzzTR1YNfQgCASvReT9iYgWC\"]},\"contracts/interfaces/IPoolFactory.sol\":{\"keccak256\":\"0xd86e72aaee44202cf17873b72b3943211131c05688f9571c0099f1726bfa70a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://306157924a3a3e2529f04d7e60d1b25c863f127d4272f9014f31fa77080743df\",\"dweb:/ipfs/QmSiAHo24RxQKwHMGa8LPpnHQdGyqMixuidNtz9ULktKkC\"]},\"contracts/interfaces/ISubFactory.sol\":{\"keccak256\":\"0xbcb38d91a1242bb194f78e158e1bf86f7ee41c40715e2a214ca074d5fb053b50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe919c11577c03464c0612c84e353febf0354a29e689cc6236b178de17ffa5ae\",\"dweb:/ipfs/QmUoEkLWGWQ9nDP9jiSZi4NwR6JtSQYdMNuWppF5tVDfX5\"]},\"contracts/library/PoolLib.sol\":{\"keccak256\":\"0x8b416e3cd0f8193205aa92d589b92298c646000a8644ca50ddd1da14bf65c6ca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cf4dff1d317ed52c1c023fc6a331cdbf363f0ed9b9bc08f726ab173c89dabff8\",\"dweb:/ipfs/QmNqLoq41bdjYCoGFRLitjb3pFoVjPdmYmboJKiD86ajqb\"]},\"contracts/math/SafeMathInt.sol\":{\"keccak256\":\"0x7b76a7a5c672cfbc213a36a30bb00b8acca0af6763e1d5e7422bebe2076ac1bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c675995a0f72075a79899542f85220a51014c63781ac77a630ea712c93e38a4\",\"dweb:/ipfs/QmWrBk8A3vBThBjq2NueprF3XBKxudTSP4qa7sAPJhfzhE\"]},\"contracts/math/SafeMathUint.sol\":{\"keccak256\":\"0x4b0b2041e9bd8f5abc5029ec7175baaf88dc6acab936f144701cf69084a5d210\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e2bab0cea4f03eb4380ba72ee32a9affd02b2cac661290d244113262be69c1c1\",\"dweb:/ipfs/QmcEwkfbDDAvnXe7453qpbEFKvuPERriwvKD8Xtao8t82n\"]},\"contracts/pool/AbstractPool.sol\":{\"keccak256\":\"0x8d4a475c59fb0d4d4afd032511f9768396a5ab44006d274e70eff3c8cb42410f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a04099a446e3f1ed49acf283aa3cab346702a586f72278983367025bed90e976\",\"dweb:/ipfs/QmRkUe4YVaTDRt6K1SKYCod8xRiwTYSViAtNH9PkLsxmMU\"]},\"contracts/pool/BlendedPool.sol\":{\"keccak256\":\"0xa3bcfc7cc46d431290f357d6e176e98117ae8f944ffa942e7df95b1bc338f334\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e64a4067d7c81db22f5214c2f7bf69f657b80345c24bb2b0227db594c0392cd\",\"dweb:/ipfs/QmQmEQPuTbHMKrK6FUQ4Hiu5NCP9AVYQkMv6Szfvh4NCTu\"]},\"contracts/token/BasicFDT.sol\":{\"keccak256\":\"0xb4aed19be0d36d8021b36f658b6c10eb347e5b1bbc296b5ab21c08259b44de7a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35dc2a5b4a7b2b938501f6cefe2924d16ba82ec1f097d656f543f00ffed8962c\",\"dweb:/ipfs/QmRYGW698XKPw8jUNfcc1Y8YLLRPqnFAwmEMd42K4aLsjS\"]},\"contracts/token/PoolFDT.sol\":{\"keccak256\":\"0x3d8bcb6de1a57df600f92d9640ea866b255fdd049af8ce202eed73684e702942\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3d51ecb6315e65fd06b19771b5fed5721f304d325c4dc558ac723980d8785f3\",\"dweb:/ipfs/Qme34wGbswCFNFbAS4fbm2pyyDZDgEKJgJDnbwtkkXoQZA\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"node_modules/@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a\",\"dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol\":{\"keccak256\":\"0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce\",\"dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB\"]},\"node_modules/hardhat/console.sol\":{\"keccak256\":\"0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395\",\"dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.16+commit.07a7930e"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_liquidityAsset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_llFactory",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_lockupPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_apy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minInvestmentAmount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "liquidityProvider",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "BalanceUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "investor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "by",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "fundsDistributed",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FundsDistributed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "by",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "fundsWithdrawn",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalWithdrawn",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FundsWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PendingReward",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PendingRewardConcluded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "investor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PendingWithdrawal",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "investor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PendingWithdrawalConcluded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "int256",
              "name": "pointsCorrection",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PointsCorrectionUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "pointsPerShare",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PointsPerShareUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "regPool",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RegPoolDeposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RewardClaimed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "investor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Withdrawal",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "accumulativeFundsOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pool",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPool"
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_pools",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addPools"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "borrower",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimReward",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "concludePendingReward"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_recipient",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "concludePendingWithdrawal"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "depositDate",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "_holders",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "distributeRewards"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "interestBalance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "interestSum",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidityAsset",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "liquidityLocker",
          "outputs": [
            {
              "internalType": "contract ILiquidityLocker",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingRewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pendingWithdrawals",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "poolInfo",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "lockupPeriod",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "apy",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "duration",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "investmentPoolSize",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "minInvestmentAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "pools",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "principalOut",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_pool",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removePool"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amountMissing",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "requestLiquidityAssets"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "rewards",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "superFactory",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalDeposited",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalLA",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "totalMintedFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupplyLA",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateFundsReceived"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFunds"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawFundsAmount"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableFundsOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_holder",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawableOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawnFundsOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "concludePendingReward(address)": {
            "params": {
              "_recipient": "address of the recipient who didn't get the reward"
            }
          },
          "concludePendingWithdrawal(address)": {
            "params": {
              "_recipient": "address of the recipient who didn't get the liquidities"
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "distributeRewards(uint256,address[])": {
            "params": {
              "_amount": "the amount to be divided among investors",
              "_holders": "the list investors must be provided externally due to Solidity limitations"
            }
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "withdraw(uint256)": {
            "params": {
              "_amount": "the amount of LA to be withdrawn"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addPool(address)": {
            "notice": "Register a new pool to the Blended Pool"
          },
          "addPools(address[])": {
            "notice": "Register new pools in batch to the Blended Pool"
          },
          "claimReward()": {
            "notice": "Used to transfer the investor's rewards to him"
          },
          "concludePendingReward(address)": {
            "notice": "Admin function used for unhappy path after reward claiming failure"
          },
          "concludePendingWithdrawal(address)": {
            "notice": "Admin function used for unhappy path after withdrawal failure"
          },
          "deposit(uint256)": {
            "notice": "the caller becomes an investor. For this to work the caller must set the allowance for this pool's address"
          },
          "distributeRewards(uint256,address[])": {
            "notice": "Used to distribute rewards among investors (LP token holders)"
          },
          "removePool(address)": {
            "notice": "Remove a pool when it's no longer actual"
          },
          "requestLiquidityAssets(uint256)": {
            "notice": "Only called by a RegPool when it doesn't have enough LA"
          },
          "totalSupplyLA()": {
            "notice": "Get the amount of Liquidity Assets in the Blended Pool"
          },
          "withdraw(uint256)": {
            "notice": "withdraw's the caller's liquidity assets"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/=node_modules/@openzeppelin/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "eth-gas-reporter/=node_modules/eth-gas-reporter/",
        "forge-std/=lib/forge-std/src/",
        "hardhat-deploy/=node_modules/hardhat-deploy/",
        "hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/pool/BlendedPool.sol": "BlendedPool"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/interfaces/IHeliosGlobals.sol": {
        "keccak256": "0x624f8763317d15efa8113b760745c5ae02a74ebadab1863e4a639b737de34f42",
        "urls": [
          "bzz-raw://02fc662e50932bd602cdfbc2f5e05c8f8fa1ddf39e9489eb887c4e12d055653c",
          "dweb:/ipfs/QmbPQKgU52xwPtU6StSVYzAmKR73ppLA4DaxftY6ZWkJNY"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILiquidityLocker.sol": {
        "keccak256": "0xdf4785b72bf3b497bb33f3e5af87696ea566448bc782f308767a47a0cbdd29a5",
        "urls": [
          "bzz-raw://92f8d25c62044b0d34ae41e56a2fa07ad4b7f3da9d272ba9e01d2cf1c81308c6",
          "dweb:/ipfs/QmfQU8PGhuPZBaHTcLYoLxeaErxeRHJ78m9v3JAAWhQs9d"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ILiquidityLockerFactory.sol": {
        "keccak256": "0xeb728ca7a6fef8487a32c59fcf689a7627432cf30c78ec3397eeb787e50e7ea1",
        "urls": [
          "bzz-raw://780a06ae8d48ea0528f03a633ed5b5fd4d2e52c05ab701ec2ab643982605e693",
          "dweb:/ipfs/QmVGaJapM4sUThyTpEMTYMdzzTR1YNfQgCASvReT9iYgWC"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IPoolFactory.sol": {
        "keccak256": "0xd86e72aaee44202cf17873b72b3943211131c05688f9571c0099f1726bfa70a2",
        "urls": [
          "bzz-raw://306157924a3a3e2529f04d7e60d1b25c863f127d4272f9014f31fa77080743df",
          "dweb:/ipfs/QmSiAHo24RxQKwHMGa8LPpnHQdGyqMixuidNtz9ULktKkC"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/ISubFactory.sol": {
        "keccak256": "0xbcb38d91a1242bb194f78e158e1bf86f7ee41c40715e2a214ca074d5fb053b50",
        "urls": [
          "bzz-raw://fe919c11577c03464c0612c84e353febf0354a29e689cc6236b178de17ffa5ae",
          "dweb:/ipfs/QmUoEkLWGWQ9nDP9jiSZi4NwR6JtSQYdMNuWppF5tVDfX5"
        ],
        "license": "MIT"
      },
      "contracts/library/PoolLib.sol": {
        "keccak256": "0x8b416e3cd0f8193205aa92d589b92298c646000a8644ca50ddd1da14bf65c6ca",
        "urls": [
          "bzz-raw://cf4dff1d317ed52c1c023fc6a331cdbf363f0ed9b9bc08f726ab173c89dabff8",
          "dweb:/ipfs/QmNqLoq41bdjYCoGFRLitjb3pFoVjPdmYmboJKiD86ajqb"
        ],
        "license": "MIT"
      },
      "contracts/math/SafeMathInt.sol": {
        "keccak256": "0x7b76a7a5c672cfbc213a36a30bb00b8acca0af6763e1d5e7422bebe2076ac1bb",
        "urls": [
          "bzz-raw://4c675995a0f72075a79899542f85220a51014c63781ac77a630ea712c93e38a4",
          "dweb:/ipfs/QmWrBk8A3vBThBjq2NueprF3XBKxudTSP4qa7sAPJhfzhE"
        ],
        "license": "MIT"
      },
      "contracts/math/SafeMathUint.sol": {
        "keccak256": "0x4b0b2041e9bd8f5abc5029ec7175baaf88dc6acab936f144701cf69084a5d210",
        "urls": [
          "bzz-raw://e2bab0cea4f03eb4380ba72ee32a9affd02b2cac661290d244113262be69c1c1",
          "dweb:/ipfs/QmcEwkfbDDAvnXe7453qpbEFKvuPERriwvKD8Xtao8t82n"
        ],
        "license": "MIT"
      },
      "contracts/pool/AbstractPool.sol": {
        "keccak256": "0x8d4a475c59fb0d4d4afd032511f9768396a5ab44006d274e70eff3c8cb42410f",
        "urls": [
          "bzz-raw://a04099a446e3f1ed49acf283aa3cab346702a586f72278983367025bed90e976",
          "dweb:/ipfs/QmRkUe4YVaTDRt6K1SKYCod8xRiwTYSViAtNH9PkLsxmMU"
        ],
        "license": "MIT"
      },
      "contracts/pool/BlendedPool.sol": {
        "keccak256": "0xa3bcfc7cc46d431290f357d6e176e98117ae8f944ffa942e7df95b1bc338f334",
        "urls": [
          "bzz-raw://8e64a4067d7c81db22f5214c2f7bf69f657b80345c24bb2b0227db594c0392cd",
          "dweb:/ipfs/QmQmEQPuTbHMKrK6FUQ4Hiu5NCP9AVYQkMv6Szfvh4NCTu"
        ],
        "license": "MIT"
      },
      "contracts/token/BasicFDT.sol": {
        "keccak256": "0xb4aed19be0d36d8021b36f658b6c10eb347e5b1bbc296b5ab21c08259b44de7a",
        "urls": [
          "bzz-raw://35dc2a5b4a7b2b938501f6cefe2924d16ba82ec1f097d656f543f00ffed8962c",
          "dweb:/ipfs/QmRYGW698XKPw8jUNfcc1Y8YLLRPqnFAwmEMd42K4aLsjS"
        ],
        "license": "MIT"
      },
      "contracts/token/PoolFDT.sol": {
        "keccak256": "0x3d8bcb6de1a57df600f92d9640ea866b255fdd049af8ce202eed73684e702942",
        "urls": [
          "bzz-raw://d3d51ecb6315e65fd06b19771b5fed5721f304d325c4dc558ac723980d8785f3",
          "dweb:/ipfs/Qme34wGbswCFNFbAS4fbm2pyyDZDgEKJgJDnbwtkkXoQZA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218",
        "urls": [
          "bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32",
          "dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/security/Pausable.sol": {
        "keccak256": "0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773",
        "urls": [
          "bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004",
          "dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1",
        "urls": [
          "bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34",
          "dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c",
        "urls": [
          "bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15",
          "dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305",
        "urls": [
          "bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5",
          "dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0xec63854014a5b4f2b3290ab9103a21bdf902a508d0f41a8573fea49e98bf571a",
        "urls": [
          "bzz-raw://bc5b5dc12fbc4002f282eaa7a5f06d8310ed62c1c77c5770f6283e058454c39a",
          "dweb:/ipfs/Qme9rE2wS3yBuyJq9GgbmzbsBQsW2M2sVFqYYLw7bosGrv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1",
        "urls": [
          "bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68",
          "dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa",
        "urls": [
          "bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931",
          "dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3",
        "urls": [
          "bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c",
          "dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol": {
        "keccak256": "0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad",
        "urls": [
          "bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278",
          "dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SafeMath.sol": {
        "keccak256": "0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a",
        "urls": [
          "bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b",
          "dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedSafeMath.sol": {
        "keccak256": "0x62f53f262fabbbc6d8ab49488d8fce36370351aff2b8d3898d499d68995a71c2",
        "urls": [
          "bzz-raw://efd599513c2f313a3f5e9536beb2b80a0d2b3dd34202c174a707d81b7dc751ce",
          "dweb:/ipfs/QmdDiENVFSyWjfFskNLnViMH77DHg3oDthkSZk7dMzNNKB"
        ],
        "license": "MIT"
      },
      "node_modules/hardhat/console.sol": {
        "keccak256": "0x7434453e6d3b7d0e5d0eb7846ffdbc27f0ccf3b163591263739b628074dc103a",
        "urls": [
          "bzz-raw://49355f780520494d1d5a0f01858385e51bb5280ce0ecfb960f16995065dca395",
          "dweb:/ipfs/QmSwJ6C5QLz6xKeQZS8wbwjU1KxRFTYfwbGmtzisd5sRW4"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/pool/BlendedPool.sol",
    "id": 1349,
    "exportedSymbols": {
      "AbstractPool": [
        972
      ],
      "Address": [
        4939
      ],
      "BasicFDT": [
        3152
      ],
      "BlendedPool": [
        1348
      ],
      "Context": [
        4961
      ],
      "ERC20": [
        4094
      ],
      "IERC20": [
        4172
      ],
      "IERC20Metadata": [
        4197
      ],
      "IERC20Permit": [
        4233
      ],
      "IHeliosGlobals": [
        341
      ],
      "ILiquidityLocker": [
        358
      ],
      "ILiquidityLockerFactory": [
        371
      ],
      "IPoolFactory": [
        381
      ],
      "ISubFactory": [
        389
      ],
      "Math": [
        5827
      ],
      "Ownable": [
        3334
      ],
      "Pausable": [
        3442
      ],
      "PoolFDT": [
        3221
      ],
      "PoolLib": [
        466
      ],
      "ReentrancyGuard": [
        3507
      ],
      "SafeCast": [
        7368
      ],
      "SafeERC20": [
        4609
      ],
      "SafeMath": [
        7680
      ],
      "SafeMathInt": [
        489
      ],
      "SafeMathUint": [
        514
      ],
      "SignedSafeMath": [
        7744
      ],
      "console": [
        15829
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4497:10",
    "nodes": [
      {
        "id": 974,
        "nodeType": "PragmaDirective",
        "src": "32:23:10",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".16"
        ]
      },
      {
        "id": 975,
        "nodeType": "ImportDirective",
        "src": "57:65:10",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1349,
        "sourceUnit": 4610,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 976,
        "nodeType": "ImportDirective",
        "src": "123:53:10",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/math/Math.sol",
        "file": "@openzeppelin/contracts/utils/math/Math.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1349,
        "sourceUnit": 5828,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 977,
        "nodeType": "ImportDirective",
        "src": "177:57:10",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/math/SafeCast.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeCast.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1349,
        "sourceUnit": 7369,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 978,
        "nodeType": "ImportDirective",
        "src": "236:40:10",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IPoolFactory.sol",
        "file": "../interfaces/IPoolFactory.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1349,
        "sourceUnit": 382,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 979,
        "nodeType": "ImportDirective",
        "src": "278:42:10",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IHeliosGlobals.sol",
        "file": "../interfaces/IHeliosGlobals.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1349,
        "sourceUnit": 342,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 980,
        "nodeType": "ImportDirective",
        "src": "321:32:10",
        "nodes": [],
        "absolutePath": "contracts/library/PoolLib.sol",
        "file": "../library/PoolLib.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1349,
        "sourceUnit": 467,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 981,
        "nodeType": "ImportDirective",
        "src": "354:30:10",
        "nodes": [],
        "absolutePath": "contracts/token/PoolFDT.sol",
        "file": "../token/PoolFDT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1349,
        "sourceUnit": 3222,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 982,
        "nodeType": "ImportDirective",
        "src": "385:28:10",
        "nodes": [],
        "absolutePath": "contracts/pool/AbstractPool.sol",
        "file": "./AbstractPool.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1349,
        "sourceUnit": 973,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 983,
        "nodeType": "ImportDirective",
        "src": "415:29:10",
        "nodes": [],
        "absolutePath": "node_modules/hardhat/console.sol",
        "file": "hardhat/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1349,
        "sourceUnit": 15830,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1348,
        "nodeType": "ContractDefinition",
        "src": "470:4058:10",
        "nodes": [
          {
            "id": 989,
            "nodeType": "UsingForDirective",
            "src": "513:31:10",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 987,
              "name": "SafeMathUint",
              "nameLocations": [
                "519:12:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 514,
              "src": "519:12:10"
            },
            "typeName": {
              "id": 988,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "536:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 992,
            "nodeType": "UsingForDirective",
            "src": "549:27:10",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 990,
              "name": "SafeCast",
              "nameLocations": [
                "555:8:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7368,
              "src": "555:8:10"
            },
            "typeName": {
              "id": 991,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "568:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 996,
            "nodeType": "UsingForDirective",
            "src": "581:27:10",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 993,
              "name": "SafeERC20",
              "nameLocations": [
                "587:9:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4609,
              "src": "587:9:10"
            },
            "typeName": {
              "id": 995,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 994,
                "name": "IERC20",
                "nameLocations": [
                  "601:6:10"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 4172,
                "src": "601:6:10"
              },
              "referencedDeclaration": 4172,
              "src": "601:6:10",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$4172",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 998,
            "nodeType": "VariableDeclaration",
            "src": "614:37:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "0d49b38c",
            "mutability": "immutable",
            "name": "superFactory",
            "nameLocation": "639:12:10",
            "scope": 1348,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 997,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "614:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1000,
            "nodeType": "VariableDeclaration",
            "src": "697:27:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "ac641655",
            "mutability": "mutable",
            "name": "principalOut",
            "nameLocation": "712:12:10",
            "scope": 1348,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 999,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "697:7:10",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1002,
            "nodeType": "VariableDeclaration",
            "src": "788:23:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "7df1f1b9",
            "mutability": "mutable",
            "name": "borrower",
            "nameLocation": "803:8:10",
            "scope": 1348,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1001,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "788:7:10",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1006,
            "nodeType": "VariableDeclaration",
            "src": "855:37:10",
            "nodes": [],
            "constant": false,
            "functionSelector": "a4063dbc",
            "mutability": "mutable",
            "name": "pools",
            "nameLocation": "887:5:10",
            "scope": 1348,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1005,
              "keyType": {
                "id": 1003,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "863:7:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "855:24:10",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1004,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "874:4:10",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 1012,
            "nodeType": "EventDefinition",
            "src": "899:62:10",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "babc2955520063ac5330d7fe65a85c54fce0d2c473be76d99e29fb7146ac96a0",
            "name": "RegPoolDeposit",
            "nameLocation": "905:14:10",
            "parameters": {
              "id": 1011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1008,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "regPool",
                  "nameLocation": "936:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1012,
                  "src": "920:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1007,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "920:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1010,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "953:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1012,
                  "src": "945:14:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "919:41:10"
            }
          },
          {
            "id": 1075,
            "nodeType": "FunctionDefinition",
            "src": "967:625:10",
            "nodes": [],
            "body": {
              "id": 1074,
              "nodeType": "Block",
              "src": "1236:356:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1041,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1036,
                          "name": "_liquidityAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1014,
                          "src": "1254:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1039,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1281:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1273:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1037,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1273:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1273:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1254:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a5a45524f5f4c49515f4153534554",
                        "id": 1042,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1285:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_366313afd1ec446c4d1175ad8be281a22d40e6ab54e1935e0dbd577b32f53a1c",
                          "typeString": "literal_string \"P:ZERO_LIQ_ASSET\""
                        },
                        "value": "P:ZERO_LIQ_ASSET"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_366313afd1ec446c4d1175ad8be281a22d40e6ab54e1935e0dbd577b32f53a1c",
                          "typeString": "literal_string \"P:ZERO_LIQ_ASSET\""
                        }
                      ],
                      "id": 1035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1246:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1246:58:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1044,
                  "nodeType": "ExpressionStatement",
                  "src": "1246:58:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1051,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1046,
                          "name": "_llFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1016,
                          "src": "1322:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1049,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1344:1:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1336:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1047,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1336:7:10",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1336:10:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1322:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a5a45524f5f4c49515f4c4f434b45525f464143544f5259",
                        "id": 1052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1348:27:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4dbee40140f9c738468a2cbeedb25f06786a185b157f855e06551622b950d759",
                          "typeString": "literal_string \"P:ZERO_LIQ_LOCKER_FACTORY\""
                        },
                        "value": "P:ZERO_LIQ_LOCKER_FACTORY"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4dbee40140f9c738468a2cbeedb25f06786a185b157f855e06551622b950d759",
                          "typeString": "literal_string \"P:ZERO_LIQ_LOCKER_FACTORY\""
                        }
                      ],
                      "id": 1045,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1314:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1314:62:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1054,
                  "nodeType": "ExpressionStatement",
                  "src": "1314:62:10"
                },
                {
                  "expression": {
                    "id": 1058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1055,
                      "name": "superFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 998,
                      "src": "1387:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1056,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1402:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1057,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1406:6:10",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1402:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1387:25:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1059,
                  "nodeType": "ExpressionStatement",
                  "src": "1387:25:10"
                },
                {
                  "expression": {
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1060,
                      "name": "poolInfo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 613,
                      "src": "1423:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$610_storage",
                        "typeString": "struct AbstractPool.PoolInfo storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 1062,
                          "name": "_lockupPeriod",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1018,
                          "src": "1456:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1063,
                          "name": "_apy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1020,
                          "src": "1483:4:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1064,
                          "name": "_duration",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1022,
                          "src": "1501:9:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1067,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1529:7:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                },
                                "typeName": {
                                  "id": 1066,
                                  "name": "uint256",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1529:7:10",
                                  "typeDescriptions": {}
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_uint256_$",
                                  "typeString": "type(uint256)"
                                }
                              ],
                              "id": 1065,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "1524:4:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 1068,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1524:13:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_uint256",
                              "typeString": "type(uint256)"
                            }
                          },
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1538:3:10",
                          "memberName": "max",
                          "nodeType": "MemberAccess",
                          "src": "1524:17:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 1070,
                          "name": "_minInvestmentAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1024,
                          "src": "1555:20:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1061,
                        "name": "PoolInfo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 610,
                        "src": "1434:8:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_PoolInfo_$610_storage_ptr_$",
                          "typeString": "type(struct AbstractPool.PoolInfo storage pointer)"
                        }
                      },
                      "id": 1071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1434:151:10",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PoolInfo_$610_memory_ptr",
                        "typeString": "struct AbstractPool.PoolInfo memory"
                      }
                    },
                    "src": "1423:162:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PoolInfo_$610_storage",
                      "typeString": "struct AbstractPool.PoolInfo storage ref"
                    }
                  },
                  "id": 1073,
                  "nodeType": "ExpressionStatement",
                  "src": "1423:162:10"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1027,
                    "name": "_liquidityAsset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1014,
                    "src": "1177:15:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 1028,
                    "name": "_llFactory",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1016,
                    "src": "1194:10:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "expression": {
                      "id": 1029,
                      "name": "PoolLib",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "1206:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PoolLib_$466_$",
                        "typeString": "type(library PoolLib)"
                      }
                    },
                    "id": 1030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1214:4:10",
                    "memberName": "NAME",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 398,
                    "src": "1206:12:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "expression": {
                      "id": 1031,
                      "name": "PoolLib",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "1220:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_PoolLib_$466_$",
                        "typeString": "type(library PoolLib)"
                      }
                    },
                    "id": 1032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1228:6:10",
                    "memberName": "SYMBOL",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 401,
                    "src": "1220:14:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 1033,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1026,
                  "name": "AbstractPool",
                  "nameLocations": [
                    "1164:12:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 972,
                  "src": "1164:12:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "1164:71:10"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 1025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "_liquidityAsset",
                  "nameLocation": "996:15:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "988:23:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1016,
                  "mutability": "mutable",
                  "name": "_llFactory",
                  "nameLocation": "1029:10:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "1021:18:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1021:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1018,
                  "mutability": "mutable",
                  "name": "_lockupPeriod",
                  "nameLocation": "1057:13:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "1049:21:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1017,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1049:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1020,
                  "mutability": "mutable",
                  "name": "_apy",
                  "nameLocation": "1088:4:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "1080:12:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1022,
                  "mutability": "mutable",
                  "name": "_duration",
                  "nameLocation": "1110:9:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "1102:17:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1102:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1024,
                  "mutability": "mutable",
                  "name": "_minInvestmentAmount",
                  "nameLocation": "1137:20:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1075,
                  "src": "1129:28:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1129:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "978:185:10"
            },
            "returnParameters": {
              "id": 1034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1236:0:10"
            },
            "scope": 1348,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1111,
            "nodeType": "FunctionDefinition",
            "src": "1598:376:10",
            "nodes": [],
            "body": {
              "id": 1110,
              "nodeType": "Block",
              "src": "1671:303:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 1083,
                              "name": "depositDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 557,
                              "src": "1702:11:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1085,
                            "indexExpression": {
                              "id": 1084,
                              "name": "_holder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1077,
                              "src": "1714:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1702:20:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "id": 1086,
                              "name": "poolInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 613,
                              "src": "1725:8:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PoolInfo_$610_storage",
                                "typeString": "struct AbstractPool.PoolInfo storage ref"
                              }
                            },
                            "id": 1087,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1734:12:10",
                            "memberName": "lockupPeriod",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 601,
                            "src": "1725:21:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1702:44:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 1089,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "1750:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1090,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1756:9:10",
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "1750:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1702:63:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a46554e44535f4c4f434b4544",
                        "id": 1092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1779:16:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c0f6d52ffdeb0bd25a230e1a7659ada483ed512b216d6ee194ba6285cb9fd4c",
                          "typeString": "literal_string \"P:FUNDS_LOCKED\""
                        },
                        "value": "P:FUNDS_LOCKED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c0f6d52ffdeb0bd25a230e1a7659ada483ed512b216d6ee194ba6285cb9fd4c",
                          "typeString": "literal_string \"P:FUNDS_LOCKED\""
                        }
                      ],
                      "id": 1082,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1681:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1681:124:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1094,
                  "nodeType": "ExpressionStatement",
                  "src": "1681:124:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 1101,
                                "name": "liquidityLocker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 536,
                                "src": "1894:15:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILiquidityLocker_$358",
                                  "typeString": "contract ILiquidityLocker"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_ILiquidityLocker_$358",
                                  "typeString": "contract ILiquidityLocker"
                                }
                              ],
                              "id": 1100,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1886:7:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1099,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1886:7:10",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1886:24:10",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1097,
                            "name": "liquidityAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 539,
                            "src": "1861:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$4172",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1876:9:10",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 4129,
                          "src": "1861:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 1103,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1861:50:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1106,
                            "name": "_holder",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1077,
                            "src": "1945:7:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1104,
                            "name": "super",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -25,
                            "src": "1929:5:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_super$_BlendedPool_$1348_$",
                              "typeString": "type(contract super BlendedPool)"
                            }
                          },
                          "id": 1105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1935:9:10",
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3606,
                          "src": "1929:15:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view returns (uint256)"
                          }
                        },
                        "id": 1107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1929:24:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1095,
                        "name": "Math",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5827,
                        "src": "1835:4:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Math_$5827_$",
                          "typeString": "type(library Math)"
                        }
                      },
                      "id": 1096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1840:3:10",
                      "memberName": "min",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5004,
                      "src": "1835:8:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 1108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1835:132:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1081,
                  "id": 1109,
                  "nodeType": "Return",
                  "src": "1816:151:10"
                }
              ]
            },
            "functionSelector": "fa8c00d4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawableOf",
            "nameLocation": "1607:14:10",
            "parameters": {
              "id": 1078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1077,
                  "mutability": "mutable",
                  "name": "_holder",
                  "nameLocation": "1630:7:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1111,
                  "src": "1622:15:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1622:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1621:17:10"
            },
            "returnParameters": {
              "id": 1081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1080,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1111,
                  "src": "1662:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1079,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1662:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1661:9:10"
            },
            "scope": 1348,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1121,
            "nodeType": "FunctionDefinition",
            "src": "1980:105:10",
            "nodes": [],
            "body": {
              "id": 1120,
              "nodeType": "Block",
              "src": "2031:54:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1116,
                        "name": "liquidityLocker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "2048:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityLocker_$358",
                          "typeString": "contract ILiquidityLocker"
                        }
                      },
                      "id": 1117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2064:12:10",
                      "memberName": "totalBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 357,
                      "src": "2048:28:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2048:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1115,
                  "id": 1119,
                  "nodeType": "Return",
                  "src": "2041:37:10"
                }
              ]
            },
            "functionSelector": "42103e8e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalLA",
            "nameLocation": "1989:7:10",
            "parameters": {
              "id": 1112,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1996:2:10"
            },
            "returnParameters": {
              "id": 1115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1114,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1121,
                  "src": "2022:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1113,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2022:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2021:9:10"
            },
            "scope": 1348,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1129,
            "nodeType": "FunctionDefinition",
            "src": "2091:93:10",
            "nodes": [],
            "body": {
              "id": 1128,
              "nodeType": "Block",
              "src": "2149:35:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1126,
                    "name": "totalMinted",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2697,
                    "src": "2166:11:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1125,
                  "id": 1127,
                  "nodeType": "Return",
                  "src": "2159:18:10"
                }
              ]
            },
            "functionSelector": "ff50abdc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalDeposited",
            "nameLocation": "2100:14:10",
            "parameters": {
              "id": 1122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2114:2:10"
            },
            "returnParameters": {
              "id": 1125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1124,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1129,
                  "src": "2140:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2140:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2139:9:10"
            },
            "scope": 1348,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1141,
            "nodeType": "FunctionDefinition",
            "src": "2190:110:10",
            "nodes": [],
            "body": {
              "id": 1140,
              "nodeType": "Block",
              "src": "2247:53:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1137,
                        "name": "liquidityAssetDecimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 541,
                        "src": "2270:22:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2264:5:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint8_$",
                        "typeString": "type(uint8)"
                      },
                      "typeName": {
                        "id": 1135,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2264:5:10",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1138,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2264:29:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 1134,
                  "id": 1139,
                  "nodeType": "Return",
                  "src": "2257:36:10"
                }
              ]
            },
            "baseFunctions": [
              2946
            ],
            "functionSelector": "313ce567",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decimals",
            "nameLocation": "2199:8:10",
            "overrides": {
              "id": 1131,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2222:8:10"
            },
            "parameters": {
              "id": 1130,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2207:2:10"
            },
            "returnParameters": {
              "id": 1134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1133,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1141,
                  "src": "2240:5:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 1132,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:5:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2239:7:10"
            },
            "scope": 1348,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1213,
            "nodeType": "FunctionDefinition",
            "src": "2369:680:10",
            "nodes": [],
            "body": {
              "id": 1212,
              "nodeType": "Block",
              "src": "2425:624:10",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1149
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1149,
                      "mutability": "mutable",
                      "name": "callerRewards",
                      "nameLocation": "2443:13:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1212,
                      "src": "2435:21:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1148,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2435:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1154,
                  "initialValue": {
                    "baseExpression": {
                      "id": 1150,
                      "name": "rewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 545,
                      "src": "2459:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 1153,
                    "indexExpression": {
                      "expression": {
                        "id": 1151,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2467:3:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2471:6:10",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2467:10:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2459:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2435:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1158,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1156,
                          "name": "callerRewards",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1149,
                          "src": "2496:13:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2513:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2496:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a4e4f545f484f4c444552",
                        "id": 1159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2516:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2e40db76a92b91768e6d3de5b6c8034e7af8a9dd019ae112a3620fc045d0ec9e",
                          "typeString": "literal_string \"P:NOT_HOLDER\""
                        },
                        "value": "P:NOT_HOLDER"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2e40db76a92b91768e6d3de5b6c8034e7af8a9dd019ae112a3620fc045d0ec9e",
                          "typeString": "literal_string \"P:NOT_HOLDER\""
                        }
                      ],
                      "id": 1155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2488:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2488:43:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1161,
                  "nodeType": "ExpressionStatement",
                  "src": "2488:43:10"
                },
                {
                  "assignments": [
                    1163
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1163,
                      "mutability": "mutable",
                      "name": "totalBalance",
                      "nameLocation": "2549:12:10",
                      "nodeType": "VariableDeclaration",
                      "scope": 1212,
                      "src": "2541:20:10",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1162,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2541:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1167,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1164,
                        "name": "liquidityLocker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "2564:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityLocker_$358",
                          "typeString": "contract ILiquidityLocker"
                        }
                      },
                      "id": 1165,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2580:12:10",
                      "memberName": "totalBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 357,
                      "src": "2564:28:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2564:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2541:53:10"
                },
                {
                  "expression": {
                    "id": 1173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1168,
                        "name": "rewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 545,
                        "src": "2604:7:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1171,
                      "indexExpression": {
                        "expression": {
                          "id": 1169,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2612:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2616:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2612:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2604:19:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1172,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2626:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2604:23:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1174,
                  "nodeType": "ExpressionStatement",
                  "src": "2604:23:10"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1175,
                      "name": "totalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1163,
                      "src": "2642:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1176,
                      "name": "callerRewards",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1149,
                      "src": "2657:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2642:28:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1194,
                  "nodeType": "IfStatement",
                  "src": "2638:187:10",
                  "trueBody": {
                    "id": 1193,
                    "nodeType": "Block",
                    "src": "2672:153:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1178,
                              "name": "pendingRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 553,
                              "src": "2686:14:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1181,
                            "indexExpression": {
                              "expression": {
                                "id": 1179,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2701:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2705:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2701:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2686:26:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1182,
                            "name": "callerRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1149,
                            "src": "2716:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2686:43:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1184,
                        "nodeType": "ExpressionStatement",
                        "src": "2686:43:10"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1186,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2762:3:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2766:6:10",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2762:10:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1188,
                              "name": "callerRewards",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1149,
                              "src": "2774:13:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1185,
                            "name": "PendingReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 593,
                            "src": "2748:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1189,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2748:40:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1190,
                        "nodeType": "EmitStatement",
                        "src": "2743:45:10"
                      },
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 1191,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2809:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 1147,
                        "id": 1192,
                        "nodeType": "Return",
                        "src": "2802:12:10"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1197,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2886:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2890:6:10",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2886:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1199,
                            "name": "callerRewards",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1149,
                            "src": "2898:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1196,
                          "name": "_transferLiquidityLockerFunds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 953,
                          "src": "2856:29:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) returns (bool)"
                          }
                        },
                        "id": 1200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2856:56:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a4552524f525f5452414e5346455252494e475f524557415244",
                        "id": 1201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2926:29:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1e0b90f99f06a96bcf4deb99eeec4b0511f0a36092a0d72ae5cd3af5b0fcc9d7",
                          "typeString": "literal_string \"P:ERROR_TRANSFERRING_REWARD\""
                        },
                        "value": "P:ERROR_TRANSFERRING_REWARD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1e0b90f99f06a96bcf4deb99eeec4b0511f0a36092a0d72ae5cd3af5b0fcc9d7",
                          "typeString": "literal_string \"P:ERROR_TRANSFERRING_REWARD\""
                        }
                      ],
                      "id": 1195,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2835:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2835:130:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1203,
                  "nodeType": "ExpressionStatement",
                  "src": "2835:130:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1205,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2995:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2999:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2995:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1207,
                        "name": "callerRewards",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "3007:13:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1204,
                      "name": "RewardClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 587,
                      "src": "2981:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2981:40:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1209,
                  "nodeType": "EmitStatement",
                  "src": "2976:45:10"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3038:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1147,
                  "id": 1211,
                  "nodeType": "Return",
                  "src": "3031:11:10"
                }
              ]
            },
            "baseFunctions": [
              936
            ],
            "documentation": {
              "id": 1142,
              "nodeType": "StructuredDocumentation",
              "src": "2306:58:10",
              "text": "@notice Used to transfer the investor's rewards to him"
            },
            "functionSelector": "b88a802f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimReward",
            "nameLocation": "2378:11:10",
            "overrides": {
              "id": 1144,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2401:8:10"
            },
            "parameters": {
              "id": 1143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2389:2:10"
            },
            "returnParameters": {
              "id": 1147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1146,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1213,
                  "src": "2419:4:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1145,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2419:4:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2418:6:10"
            },
            "scope": 1348,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1253,
            "nodeType": "FunctionDefinition",
            "src": "3127:399:10",
            "nodes": [],
            "body": {
              "id": 1252,
              "nodeType": "Block",
              "src": "3201:325:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1222,
                          "name": "_amountMissing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1216,
                          "src": "3219:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3236:1:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3219:18:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a494e56414c49445f494e505554",
                        "id": 1225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3239:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf06b83fe0eb1ebf4e3a3c3b6d116d28cb99711c6e6e2a4e451cdf6ad0f84dc5",
                          "typeString": "literal_string \"P:INVALID_INPUT\""
                        },
                        "value": "P:INVALID_INPUT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf06b83fe0eb1ebf4e3a3c3b6d116d28cb99711c6e6e2a4e451cdf6ad0f84dc5",
                          "typeString": "literal_string \"P:INVALID_INPUT\""
                        }
                      ],
                      "id": 1221,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3211:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3211:46:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1227,
                  "nodeType": "ExpressionStatement",
                  "src": "3211:46:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1232,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1229,
                            "name": "totalSupplyLA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1264,
                            "src": "3275:13:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1230,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3275:15:10",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1231,
                          "name": "_amountMissing",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1216,
                          "src": "3294:14:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3275:33:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a4e4f545f454e4f5547485f4c415f4250",
                        "id": 1233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3310:20:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_154fe2accd656dffb12841ae630bc2ee4cb996b82b9f8a4693d0570dc2d092ff",
                          "typeString": "literal_string \"P:NOT_ENOUGH_LA_BP\""
                        },
                        "value": "P:NOT_ENOUGH_LA_BP"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_154fe2accd656dffb12841ae630bc2ee4cb996b82b9f8a4693d0570dc2d092ff",
                          "typeString": "literal_string \"P:NOT_ENOUGH_LA_BP\""
                        }
                      ],
                      "id": 1228,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3267:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3267:64:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1235,
                  "nodeType": "ExpressionStatement",
                  "src": "3267:64:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1239,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3387:3:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1240,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3391:6:10",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3387:10:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1241,
                            "name": "_amountMissing",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1216,
                            "src": "3399:14:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 1237,
                            "name": "liquidityLocker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 536,
                            "src": "3362:15:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILiquidityLocker_$358",
                              "typeString": "contract ILiquidityLocker"
                            }
                          },
                          "id": 1238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3378:8:10",
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 352,
                          "src": "3362:24:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 1242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3362:52:10",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a524551554553545f46524f4d5f42505f4641494c",
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3428:24:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fd20b110c50ac759d09d5474c38320659754cfbd599e6fc7572926dcbbb3f8c5",
                          "typeString": "literal_string \"P:REQUEST_FROM_BP_FAIL\""
                        },
                        "value": "P:REQUEST_FROM_BP_FAIL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fd20b110c50ac759d09d5474c38320659754cfbd599e6fc7572926dcbbb3f8c5",
                          "typeString": "literal_string \"P:REQUEST_FROM_BP_FAIL\""
                        }
                      ],
                      "id": 1236,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3341:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1244,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3341:121:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1245,
                  "nodeType": "ExpressionStatement",
                  "src": "3341:121:10"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1247,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3492:3:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1248,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3496:6:10",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3492:10:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1249,
                        "name": "_amountMissing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1216,
                        "src": "3504:14:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1246,
                      "name": "RegPoolDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1012,
                      "src": "3477:14:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3477:42:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1251,
                  "nodeType": "EmitStatement",
                  "src": "3472:47:10"
                }
              ]
            },
            "documentation": {
              "id": 1214,
              "nodeType": "StructuredDocumentation",
              "src": "3055:67:10",
              "text": "@notice Only called by a RegPool when it doesn't have enough LA"
            },
            "functionSelector": "f48ccb04",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1219,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1218,
                  "name": "onlyPool",
                  "nameLocations": [
                    "3192:8:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1347,
                  "src": "3192:8:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "3192:8:10"
              }
            ],
            "name": "requestLiquidityAssets",
            "nameLocation": "3136:22:10",
            "parameters": {
              "id": 1217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1216,
                  "mutability": "mutable",
                  "name": "_amountMissing",
                  "nameLocation": "3167:14:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1253,
                  "src": "3159:22:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3159:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3158:24:10"
            },
            "returnParameters": {
              "id": 1220,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3201:0:10"
            },
            "scope": 1348,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1264,
            "nodeType": "FunctionDefinition",
            "src": "3603:109:10",
            "nodes": [],
            "body": {
              "id": 1263,
              "nodeType": "Block",
              "src": "3658:54:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 1259,
                        "name": "liquidityLocker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "3675:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityLocker_$358",
                          "typeString": "contract ILiquidityLocker"
                        }
                      },
                      "id": 1260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3691:12:10",
                      "memberName": "totalBalance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 357,
                      "src": "3675:28:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 1261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3675:30:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1258,
                  "id": 1262,
                  "nodeType": "Return",
                  "src": "3668:37:10"
                }
              ]
            },
            "documentation": {
              "id": 1254,
              "nodeType": "StructuredDocumentation",
              "src": "3532:66:10",
              "text": "@notice Get the amount of Liquidity Assets in the Blended Pool"
            },
            "functionSelector": "7dfabf49",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "totalSupplyLA",
            "nameLocation": "3612:13:10",
            "parameters": {
              "id": 1255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3625:2:10"
            },
            "returnParameters": {
              "id": 1258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1257,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1264,
                  "src": "3649:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3649:7:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3648:9:10"
            },
            "scope": 1348,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1279,
            "nodeType": "FunctionDefinition",
            "src": "3776:87:10",
            "nodes": [],
            "body": {
              "id": 1278,
              "nodeType": "Block",
              "src": "3827:36:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1276,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1272,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1006,
                        "src": "3837:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1274,
                      "indexExpression": {
                        "id": 1273,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1267,
                        "src": "3843:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3837:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3852:4:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3837:19:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1277,
                  "nodeType": "ExpressionStatement",
                  "src": "3837:19:10"
                }
              ]
            },
            "documentation": {
              "id": 1265,
              "nodeType": "StructuredDocumentation",
              "src": "3720:51:10",
              "text": "@notice Register a new pool to the Blended Pool"
            },
            "functionSelector": "d914cd4b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1270,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1269,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3817:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3253,
                  "src": "3817:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "3817:9:10"
              }
            ],
            "name": "addPool",
            "nameLocation": "3785:7:10",
            "parameters": {
              "id": 1268,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1267,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "3801:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1279,
                  "src": "3793:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1266,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3793:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3792:15:10"
            },
            "returnParameters": {
              "id": 1271,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3827:0:10"
            },
            "scope": 1348,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1310,
            "nodeType": "FunctionDefinition",
            "src": "3933:170:10",
            "nodes": [],
            "body": {
              "id": 1309,
              "nodeType": "Block",
              "src": "3995:108:10",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 1307,
                    "nodeType": "Block",
                    "src": "4049:48:10",
                    "statements": [
                      {
                        "expression": {
                          "id": 1305,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1299,
                              "name": "pools",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1006,
                              "src": "4063:5:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                                "typeString": "mapping(address => bool)"
                              }
                            },
                            "id": 1303,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 1300,
                                "name": "_pools",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1283,
                                "src": "4069:6:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 1302,
                              "indexExpression": {
                                "id": 1301,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1289,
                                "src": "4076:1:10",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4069:9:10",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4063:16:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1304,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4082:4:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4063:23:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1306,
                        "nodeType": "ExpressionStatement",
                        "src": "4063:23:10"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1292,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1289,
                      "src": "4025:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 1293,
                        "name": "_pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1283,
                        "src": "4029:6:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 1294,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4036:6:10",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4029:13:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4025:17:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1308,
                  "initializationExpression": {
                    "assignments": [
                      1289
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1289,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4018:1:10",
                        "nodeType": "VariableDeclaration",
                        "scope": 1308,
                        "src": "4010:9:10",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1288,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4010:7:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1291,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 1290,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4022:1:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4010:13:10"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1297,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4044:3:10",
                      "subExpression": {
                        "id": 1296,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1289,
                        "src": "4044:1:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1298,
                    "nodeType": "ExpressionStatement",
                    "src": "4044:3:10"
                  },
                  "nodeType": "ForStatement",
                  "src": "4005:92:10"
                }
              ]
            },
            "documentation": {
              "id": 1280,
              "nodeType": "StructuredDocumentation",
              "src": "3869:59:10",
              "text": "@notice Register new pools in batch to the Blended Pool"
            },
            "functionSelector": "b36a4ab1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1286,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1285,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "3985:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3253,
                  "src": "3985:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "3985:9:10"
              }
            ],
            "name": "addPools",
            "nameLocation": "3942:8:10",
            "parameters": {
              "id": 1284,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1283,
                  "mutability": "mutable",
                  "name": "_pools",
                  "nameLocation": "3968:6:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1310,
                  "src": "3951:23:10",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1281,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3951:7:10",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1282,
                    "nodeType": "ArrayTypeName",
                    "src": "3951:9:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3950:25:10"
            },
            "returnParameters": {
              "id": 1287,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3995:0:10"
            },
            "scope": 1348,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1324,
            "nodeType": "FunctionDefinition",
            "src": "4166:90:10",
            "nodes": [],
            "body": {
              "id": 1323,
              "nodeType": "Block",
              "src": "4220:36:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "4230:19:10",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1318,
                        "name": "pools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1006,
                        "src": "4237:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1320,
                      "indexExpression": {
                        "id": 1319,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1313,
                        "src": "4243:5:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4237:12:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1322,
                  "nodeType": "ExpressionStatement",
                  "src": "4230:19:10"
                }
              ]
            },
            "documentation": {
              "id": 1311,
              "nodeType": "StructuredDocumentation",
              "src": "4109:52:10",
              "text": "@notice Remove a pool when it's no longer actual"
            },
            "functionSelector": "3b7d0946",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1316,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1315,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "4210:9:10"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3253,
                  "src": "4210:9:10"
                },
                "nodeType": "ModifierInvocation",
                "src": "4210:9:10"
              }
            ],
            "name": "removePool",
            "nameLocation": "4175:10:10",
            "parameters": {
              "id": 1314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1313,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "4194:5:10",
                  "nodeType": "VariableDeclaration",
                  "scope": 1324,
                  "src": "4186:13:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1312,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4186:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4185:15:10"
            },
            "returnParameters": {
              "id": 1317,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4220:0:10"
            },
            "scope": 1348,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1335,
            "nodeType": "FunctionDefinition",
            "src": "4306:126:10",
            "nodes": [],
            "body": {
              "id": 1334,
              "nodeType": "Block",
              "src": "4375:57:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1331,
                        "name": "liquidityLocker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 536,
                        "src": "4409:15:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILiquidityLocker_$358",
                          "typeString": "contract ILiquidityLocker"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ILiquidityLocker_$358",
                          "typeString": "contract ILiquidityLocker"
                        }
                      ],
                      "id": 1330,
                      "name": "ILiquidityLocker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 358,
                      "src": "4392:16:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_ILiquidityLocker_$358_$",
                        "typeString": "type(contract ILiquidityLocker)"
                      }
                    },
                    "id": 1332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4392:33:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityLocker_$358",
                      "typeString": "contract ILiquidityLocker"
                    }
                  },
                  "functionReturnParameters": 1329,
                  "id": 1333,
                  "nodeType": "Return",
                  "src": "4385:40:10"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_liquidityLocker",
            "nameLocation": "4315:16:10",
            "parameters": {
              "id": 1325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4331:2:10"
            },
            "returnParameters": {
              "id": 1329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1328,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1335,
                  "src": "4357:16:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILiquidityLocker_$358",
                    "typeString": "contract ILiquidityLocker"
                  },
                  "typeName": {
                    "id": 1327,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1326,
                      "name": "ILiquidityLocker",
                      "nameLocations": [
                        "4357:16:10"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 358,
                      "src": "4357:16:10"
                    },
                    "referencedDeclaration": 358,
                    "src": "4357:16:10",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILiquidityLocker_$358",
                      "typeString": "contract ILiquidityLocker"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4356:18:10"
            },
            "scope": 1348,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1347,
            "nodeType": "ModifierDefinition",
            "src": "4438:88:10",
            "nodes": [],
            "body": {
              "id": 1346,
              "nodeType": "Block",
              "src": "4458:68:10",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1338,
                          "name": "pools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1006,
                          "src": "4476:5:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1341,
                        "indexExpression": {
                          "expression": {
                            "id": 1339,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4482:3:10",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1340,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4486:6:10",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4482:10:10",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4476:17:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "503a4e4f545f504f4f4c",
                        "id": 1342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4495:12:10",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_522267f72cd7a1cfbf12e9f0730bb5a34373d2c801cc88aeb3d0857331505786",
                          "typeString": "literal_string \"P:NOT_POOL\""
                        },
                        "value": "P:NOT_POOL"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_522267f72cd7a1cfbf12e9f0730bb5a34373d2c801cc88aeb3d0857331505786",
                          "typeString": "literal_string \"P:NOT_POOL\""
                        }
                      ],
                      "id": 1337,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4468:7:10",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1343,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4468:40:10",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1344,
                  "nodeType": "ExpressionStatement",
                  "src": "4468:40:10"
                },
                {
                  "id": 1345,
                  "nodeType": "PlaceholderStatement",
                  "src": "4518:1:10"
                }
              ]
            },
            "name": "onlyPool",
            "nameLocation": "4447:8:10",
            "parameters": {
              "id": 1336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4455:2:10"
            },
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 985,
              "name": "AbstractPool",
              "nameLocations": [
                "494:12:10"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 972,
              "src": "494:12:10"
            },
            "id": 986,
            "nodeType": "InheritanceSpecifier",
            "src": "494:12:10"
          }
        ],
        "canonicalName": "BlendedPool",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 984,
          "nodeType": "StructuredDocumentation",
          "src": "446:24:10",
          "text": "@title Blended Pool"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1348,
          972,
          3334,
          3442,
          3221,
          3152,
          3507,
          4094,
          4197,
          4172,
          4961
        ],
        "name": "BlendedPool",
        "nameLocation": "479:11:10",
        "scope": 1349,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 10
}